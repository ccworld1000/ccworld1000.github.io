<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ccworld1000</title>
  
  <subtitle>CC</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ccworld1000.github.io/"/>
  <updated>2021-08-13T02:47:15.467Z</updated>
  <id>https://ccworld1000.github.io/</id>
  
  <author>
    <name>youhua deng (deng you hua | CC)</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CCCanvas.Line - CCCanvas iOS Metal MetalKit GPU 极简体验Demo之 - 线</title>
    <link href="https://ccworld1000.github.io/2021/08/13/CCCanvas-Line-CCCanvas-iOS-Metal-MetalKit-GPU-%E6%9E%81%E7%AE%80%E4%BD%93%E9%AA%8CDemo%E4%B9%8B-%E7%BA%BF/"/>
    <id>https://ccworld1000.github.io/2021/08/13/CCCanvas-Line-CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo之-线/</id>
    <published>2021-08-13T02:43:51.000Z</published>
    <updated>2021-08-13T02:47:15.467Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CCCanvas-Line-CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo之-线"><a href="#CCCanvas-Line-CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo之-线" class="headerlink" title="CCCanvas.Line - CCCanvas iOS Metal MetalKit GPU 极简体验Demo之 - 线"></a><a href="https://github.com/ccworld1000/CCCanvas.Line" target="_blank" rel="noopener">CCCanvas.Line</a> - <a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 线</h3><p>两点一线 具体详情  <a href="https://github.com/ccworld1000/CCCanvas.Line/CCCanvas.Line.OC" target="_blank" rel="noopener">&lt;&lt;Objective-C代码链接&gt;&gt;</a>  <a href="https://github.com/ccworld1000/CCCanvas.Line/CCCanvas.Line.Swift" target="_blank" rel="noopener">&lt;&lt;Swift代码链接&gt;&gt;</a></p><h3 id="CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo系列"><a href="#CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo系列" class="headerlink" title="CCCanvas iOS Metal MetalKit GPU 极简体验Demo系列"></a><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo系列</h3><ol><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 颜色 <a href="https://github.com/ccworld1000/CCCanvas.Color" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a></li><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 点 <a href="https://github.com/ccworld1000/CCCanvas.Point" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a></li><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 线 <a href="https://github.com/ccworld1000/CCCanvas.Line" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a></li><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 三角形 <a href="https://github.com/ccworld1000/CCCanvas.Triangle" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a></li><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 面 <a href="https://github.com/ccworld1000/CCCanvas.Plane" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a></li><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 纹理 <a href="https://github.com/ccworld1000/CCCanvas.Texture" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a><h3 id="CCCanvas-Line-Screenshot"><a href="#CCCanvas-Line-Screenshot" class="headerlink" title="CCCanvas.Line Screenshot"></a>CCCanvas.Line Screenshot</h3><img src="https://raw.github.com/ccworld1000/CCCanvas.Line/main/Screenshot/iPhone.jpg?raw=true" alt="CCCanvas.Line iPhone Screenshot"></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;CCCanvas-Line-CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo之-线&quot;&gt;&lt;a href=&quot;#CCCanvas-Line-CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo之-线&quot; clas
      
    
    </summary>
    
    
      <category term="iOS" scheme="https://ccworld1000.github.io/tags/iOS/"/>
    
      <category term="Xcode" scheme="https://ccworld1000.github.io/tags/Xcode/"/>
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="Swift" scheme="https://ccworld1000.github.io/tags/Swift/"/>
    
      <category term="GPU" scheme="https://ccworld1000.github.io/tags/GPU/"/>
    
      <category term="Metal" scheme="https://ccworld1000.github.io/tags/Metal/"/>
    
      <category term="MetalKit" scheme="https://ccworld1000.github.io/tags/MetalKit/"/>
    
      <category term="CCCanvas" scheme="https://ccworld1000.github.io/tags/CCCanvas/"/>
    
      <category term="canvas" scheme="https://ccworld1000.github.io/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>CCCanvas.Point - CCCanvas iOS Metal MetalKit GPU 极简体验Demo之 - 点</title>
    <link href="https://ccworld1000.github.io/2021/08/12/CCCanvas-Point-CCCanvas-iOS-Metal-MetalKit-GPU-%E6%9E%81%E7%AE%80%E4%BD%93%E9%AA%8CDemo%E4%B9%8B-%E7%82%B9/"/>
    <id>https://ccworld1000.github.io/2021/08/12/CCCanvas-Point-CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo之-点/</id>
    <published>2021-08-12T09:50:42.000Z</published>
    <updated>2021-08-13T02:48:11.003Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CCCanvas-Point-CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo之-点"><a href="#CCCanvas-Point-CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo之-点" class="headerlink" title="CCCanvas.Point - CCCanvas iOS Metal MetalKit GPU 极简体验Demo之 - 点"></a><a href="https://github.com/ccworld1000/CCCanvas.Point" target="_blank" rel="noopener">CCCanvas.Point</a> - <a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 点</h3><p>一个点,这是个点?怎么看起来不像啊,明明就是个方块? 具体详情  <a href="https://github.com/ccworld1000/CCCanvas.Point/CCCanvas.Point.OC" target="_blank" rel="noopener">&lt;&lt;Objective-C代码链接&gt;&gt;</a>  <a href="https://github.com/ccworld1000/CCCanvas.Point/CCCanvas.Point.Swift" target="_blank" rel="noopener">&lt;&lt;Swift代码链接&gt;&gt;</a></p><h3 id="CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo系列"><a href="#CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo系列" class="headerlink" title="CCCanvas iOS Metal MetalKit GPU 极简体验Demo系列"></a><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo系列</h3><ol><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 颜色 <a href="https://github.com/ccworld1000/CCCanvas.Color" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a></li><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 点 <a href="https://github.com/ccworld1000/CCCanvas.Point" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a></li><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 线 <a href="https://github.com/ccworld1000/CCCanvas.Line" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a></li><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 三角形 <a href="https://github.com/ccworld1000/CCCanvas.Triangle" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a></li><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 面 <a href="https://github.com/ccworld1000/CCCanvas.Plane" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a><h3 id="CCCanvas-Point-Screenshot"><a href="#CCCanvas-Point-Screenshot" class="headerlink" title="CCCanvas.Point Screenshot"></a>CCCanvas.Point Screenshot</h3><img src="https://raw.github.com/ccworld1000/CCCanvas.Point/main/Screenshot/iPhone.jpg?raw=true" alt="CCCanvas.Point iPhone Screenshot"></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;CCCanvas-Point-CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo之-点&quot;&gt;&lt;a href=&quot;#CCCanvas-Point-CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo之-点&quot; cl
      
    
    </summary>
    
    
      <category term="iOS" scheme="https://ccworld1000.github.io/tags/iOS/"/>
    
      <category term="Xcode" scheme="https://ccworld1000.github.io/tags/Xcode/"/>
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="Swift" scheme="https://ccworld1000.github.io/tags/Swift/"/>
    
      <category term="GPU" scheme="https://ccworld1000.github.io/tags/GPU/"/>
    
      <category term="Metal" scheme="https://ccworld1000.github.io/tags/Metal/"/>
    
      <category term="MetalKit" scheme="https://ccworld1000.github.io/tags/MetalKit/"/>
    
      <category term="CCCanvas" scheme="https://ccworld1000.github.io/tags/CCCanvas/"/>
    
      <category term="canvas" scheme="https://ccworld1000.github.io/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>CCCanvas.Color - CCCanvas iOS Metal MetalKit GPU 极简体验Demo之 - 颜色</title>
    <link href="https://ccworld1000.github.io/2021/08/11/CCCanvas-Color-CCCanvas-iOS-Metal-MetalKit-GPU-%E6%9E%81%E7%AE%80%E4%BD%93%E9%AA%8CDemo%E4%B9%8B-%E9%A2%9C%E8%89%B2/"/>
    <id>https://ccworld1000.github.io/2021/08/11/CCCanvas-Color-CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo之-颜色/</id>
    <published>2021-08-11T10:11:02.000Z</published>
    <updated>2021-08-13T02:48:57.157Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CCCanvas-Color-CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo之-颜色"><a href="#CCCanvas-Color-CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo之-颜色" class="headerlink" title="CCCanvas.Color - CCCanvas iOS Metal MetalKit GPU 极简体验Demo之 - 颜色"></a><a href="https://github.com/ccworld1000/CCCanvas.Color" target="_blank" rel="noopener">CCCanvas.Color</a> - <a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 颜色</h3><p>背景颜色,核心变更一个参数即可,调用如此简单 具体详情  <a href="https://github.com/ccworld1000/CCCanvas.Color/CCCanvas.Color.OC" target="_blank" rel="noopener">&lt;&lt;Objective-C代码链接&gt;&gt;</a>  <a href="https://github.com/ccworld1000/CCCanvas.Color/CCCanvas.Color.Swift" target="_blank" rel="noopener">&lt;&lt;Swift代码链接&gt;&gt;</a> </p><h3 id="CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo系列"><a href="#CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo系列" class="headerlink" title="CCCanvas iOS Metal MetalKit GPU 极简体验Demo系列"></a><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo系列</h3><ol><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 颜色 <a href="https://github.com/ccworld1000/CCCanvas.Color" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a></li><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 点 <a href="https://github.com/ccworld1000/CCCanvas.Point" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a></li><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 线 <a href="https://github.com/ccworld1000/CCCanvas.Line" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a></li><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 三角形 <a href="https://github.com/ccworld1000/CCCanvas.Triangle" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a></li><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 面 <a href="https://github.com/ccworld1000/CCCanvas.Plane" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a></li></ol><h3 id="CCCanvas-Color-Screenshot"><a href="#CCCanvas-Color-Screenshot" class="headerlink" title="CCCanvas.Color Screenshot"></a>CCCanvas.Color Screenshot</h3><p><img src="https://raw.github.com/ccworld1000/CCCanvas.Color/main/Screenshot/iPhone.jpg?raw=true" alt="CCCanvas.Color iPhone Screenshot"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;CCCanvas-Color-CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo之-颜色&quot;&gt;&lt;a href=&quot;#CCCanvas-Color-CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo之-颜色&quot; 
      
    
    </summary>
    
    
      <category term="iOS" scheme="https://ccworld1000.github.io/tags/iOS/"/>
    
      <category term="Xcode" scheme="https://ccworld1000.github.io/tags/Xcode/"/>
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="Swift" scheme="https://ccworld1000.github.io/tags/Swift/"/>
    
      <category term="GPU" scheme="https://ccworld1000.github.io/tags/GPU/"/>
    
      <category term="Metal" scheme="https://ccworld1000.github.io/tags/Metal/"/>
    
      <category term="MetalKit" scheme="https://ccworld1000.github.io/tags/MetalKit/"/>
    
      <category term="CCCanvas" scheme="https://ccworld1000.github.io/tags/CCCanvas/"/>
    
      <category term="canvas" scheme="https://ccworld1000.github.io/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>CCCanvas iOS Metal MetalKit GPU 极简体验Demo系列</title>
    <link href="https://ccworld1000.github.io/2021/08/09/CCCanvas-iOS-Metal-MetalKit-GPU-%E6%9E%81%E7%AE%80%E4%BD%93%E9%AA%8CDemo%E7%B3%BB%E5%88%97/"/>
    <id>https://ccworld1000.github.io/2021/08/09/CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo系列/</id>
    <published>2021-08-09T03:02:11.000Z</published>
    <updated>2021-08-13T02:49:45.827Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CCCanvas-对iOS-Metal-MetalKit-颜色-点-线-三角形-面-纹理-demo-的封装"><a href="#CCCanvas-对iOS-Metal-MetalKit-颜色-点-线-三角形-面-纹理-demo-的封装" class="headerlink" title="CCCanvas 对iOS Metal MetalKit 颜色,点,线,三角形,面,纹理 demo 的封装"></a><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> 对iOS Metal MetalKit 颜色,点,线,三角形,面,纹理 demo 的封装</h3><ul><li>主要简化演示，没有深入考虑细节</li><li>支持CocoaPods 导入, pod ‘CCCanvas’</li><li>封装了Metal,MetalKit相关细节，极简调用</li><li>可能是史上最简的iOS演示GPU,Metal,MetalKit的demo</li><li>使用Objective-C编写，同时支持Objective-C与Swift语言调用</li><li>对iOS Metal MetalKit 颜色,点,线,三角形,面,纹理 demo 的封装</li><li>使用Xcode13生成动态CCCanvas.framework，仅支持iOS x86_64 模拟器</li><li>iOS GPU Metal MetalKit中的一个小小细节可能会导致卡在那里半天，几天，甚至更久,后果苦不堪言,于是可能就有了以下demo,也许不定时更新,主要是封装细节,极简调用,运行demo,初步体验，更多的细节再通过网上查阅细节。</li></ul><h3 id="CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo系列"><a href="#CCCanvas-iOS-Metal-MetalKit-GPU-极简体验Demo系列" class="headerlink" title="CCCanvas iOS Metal MetalKit GPU 极简体验Demo系列"></a><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo系列</h3><ol><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 颜色 <a href="https://github.com/ccworld1000/CCCanvas.Color" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a></li></ol><p><img src="https://raw.github.com/ccworld1000/CCCanvas.Color/main/Screenshot/iPhone.jpg?raw=true" alt="CCCanvas.Color iPhone Screenshot"></p><ol start="2"><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 点 <a href="https://github.com/ccworld1000/CCCanvas.Point" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a></li></ol><p><img src="https://raw.github.com/ccworld1000/CCCanvas.Point/main/Screenshot/iPhone.jpg?raw=true" alt="CCCanvas.Point iPhone Screenshot"></p><ol start="3"><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 线 <a href="https://github.com/ccworld1000/CCCanvas.Line" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a></li></ol><p><img src="https://raw.github.com/ccworld1000/CCCanvas.Line/main/Screenshot/iPhone.jpg?raw=true" alt="CCCanvas.Line iPhone Screenshot"></p><ol start="4"><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 三角形 <a href="https://github.com/ccworld1000/CCCanvas.Triangle" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a></li></ol><p><img src="https://raw.github.com/ccworld1000/CCCanvas.Triangle/main/Screenshot/iPhone.jpg?raw=true" alt="CCCanvas.Triangle iPhone Screenshot"></p><ol start="5"><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 面 <a href="https://github.com/ccworld1000/CCCanvas.Plane" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a></li></ol><p><img src="https://raw.github.com/ccworld1000/CCCanvas.Plane/main/Screenshot/iPhone.jpg?raw=true" alt="CCCanvas.Plane iPhone Screenshot"></p><ol start="6"><li><a href="https://github.com/ccworld1000/CCCanvas" target="_blank" rel="noopener">CCCanvas</a> iOS Metal MetalKit GPU 极简体验Demo之 - 纹理 <a href="https://github.com/ccworld1000/CCCanvas.Texture" target="_blank" rel="noopener">&lt;&lt;代码链接&gt;&gt;</a></li></ol><p><img src="https://raw.github.com/ccworld1000/CCCanvas.Texture/main/Screenshot/iPhone.jpg?raw=true" alt="CCCanvas.Texture iPhone Screenshot"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;CCCanvas-对iOS-Metal-MetalKit-颜色-点-线-三角形-面-纹理-demo-的封装&quot;&gt;&lt;a href=&quot;#CCCanvas-对iOS-Metal-MetalKit-颜色-点-线-三角形-面-纹理-demo-的封装&quot; class=&quot;heade
      
    
    </summary>
    
    
      <category term="iOS" scheme="https://ccworld1000.github.io/tags/iOS/"/>
    
      <category term="Xcode" scheme="https://ccworld1000.github.io/tags/Xcode/"/>
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="Swift" scheme="https://ccworld1000.github.io/tags/Swift/"/>
    
      <category term="GPU" scheme="https://ccworld1000.github.io/tags/GPU/"/>
    
      <category term="Metal" scheme="https://ccworld1000.github.io/tags/Metal/"/>
    
      <category term="MetalKit" scheme="https://ccworld1000.github.io/tags/MetalKit/"/>
    
      <category term="CCCanvas" scheme="https://ccworld1000.github.io/tags/CCCanvas/"/>
    
      <category term="canvas" scheme="https://ccworld1000.github.io/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>CCCameraStyle CCCamera</title>
    <link href="https://ccworld1000.github.io/2021/03/24/CCCameraStyle-CCCamera/"/>
    <id>https://ccworld1000.github.io/2021/03/24/CCCameraStyle-CCCamera/</id>
    <published>2021-03-24T06:48:04.000Z</published>
    <updated>2021-03-24T06:50:25.334Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CCCameraStyle"><a href="#CCCameraStyle" class="headerlink" title="CCCameraStyle"></a>CCCameraStyle</h1><p>CCCameraStyle CCCamera , AI, 3D</p><p><img src="https://raw.github.com/ccworld1000/CCCameraStyle/main/ui.jpg?raw=true" alt="CCCameraStyle UI Screenshot"></p><p><img src="https://raw.github.com/ccworld1000/CCCameraStyle/main/AI.gif?raw=true" alt="CCCameraStyle Screenshot"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CCCameraStyle&quot;&gt;&lt;a href=&quot;#CCCameraStyle&quot; class=&quot;headerlink&quot; title=&quot;CCCameraStyle&quot;&gt;&lt;/a&gt;CCCameraStyle&lt;/h1&gt;&lt;p&gt;CCCameraStyle CCCamera , A
      
    
    </summary>
    
    
      <category term="CCCameraStyle" scheme="https://ccworld1000.github.io/tags/CCCameraStyle/"/>
    
      <category term="CCCamera" scheme="https://ccworld1000.github.io/tags/CCCamera/"/>
    
      <category term="camera" scheme="https://ccworld1000.github.io/tags/camera/"/>
    
      <category term="AI" scheme="https://ccworld1000.github.io/tags/AI/"/>
    
      <category term="3d" scheme="https://ccworld1000.github.io/tags/3d/"/>
    
  </entry>
  
  <entry>
    <title>CCGPUImage change for GPUImage</title>
    <link href="https://ccworld1000.github.io/2021/01/05/CCGPUImage-change-for-GPUImage/"/>
    <id>https://ccworld1000.github.io/2021/01/05/CCGPUImage-change-for-GPUImage/</id>
    <published>2021-01-05T07:49:04.000Z</published>
    <updated>2021-01-11T11:35:28.214Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CCGPUImage-GPUImage-CCGPUImageExample"><a href="#CCGPUImage-GPUImage-CCGPUImageExample" class="headerlink" title="CCGPUImage/GPUImage/CCGPUImageExample"></a>CCGPUImage/GPUImage/CCGPUImageExample</h1><p><a href="https://github.com/ccworld1000/CCGPUImage" target="_blank" rel="noopener">CCGPUImage</a> change for GPUImage, An open source iOS framework for GPU-based image and video processing.</p><h1 id="Pod-Install"><a href="#Pod-Install" class="headerlink" title="Pod Install"></a>Pod Install</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod <span class="string">'CCGPUImage'</span></span><br></pre></td></tr></table></figure><h1 id="CCGPUImageExample"><a href="#CCGPUImageExample" class="headerlink" title="CCGPUImageExample"></a>CCGPUImageExample</h1><p>CCGPUImageExample for CCGPUImage Example, <a href="https://github.com/ccworld1000/CCGPUImageExample" target="_blank" rel="noopener">https://github.com/ccworld1000/CCGPUImageExample</a>.</p><h1 id="Add-One-key-beauty-加入一键美颜-From-0-1-10"><a href="#Add-One-key-beauty-加入一键美颜-From-0-1-10" class="headerlink" title="Add One key beauty [加入一键美颜], From 0.1.10"></a>Add One key beauty [加入一键美颜], From 0.1.10</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// @see CCGPUImageExample -&gt; BeautifyFace</span><br><span class="line">- (void)refresBottomImage &#123;</span><br><span class="line">    self.bottomImage.image = [[[GPUImageBeautifyFilter alloc] init] imageByFilteringImage:self.topImage.image];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="BeautifyFace-effect"><a href="#BeautifyFace-effect" class="headerlink" title="BeautifyFace effect"></a>BeautifyFace effect</h1><p><img src="https://raw.githubusercontent.com/ccworld1000/CCGPUImageExample/main/Screenshots/BeautifyFace.jpg" alt="BeautifyFace.jpg"></p><h1 id="SimpleImageFilter-effect"><a href="#SimpleImageFilter-effect" class="headerlink" title="SimpleImageFilter effect"></a>SimpleImageFilter effect</h1><p><img src="https://raw.githubusercontent.com/ccworld1000/CCGPUImageExample/main/Screenshots/SimpleImageFilter.jpg" alt="SimpleImageFilter.jpg"></p><h1 id="RGBFilter-effect"><a href="#RGBFilter-effect" class="headerlink" title="RGBFilter effect"></a>RGBFilter effect</h1><p><img src="https://raw.githubusercontent.com/ccworld1000/CCGPUImageExample/main/Screenshots//RGBFilter.jpg" alt="RGBFilter.jpg"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CCGPUImage-GPUImage-CCGPUImageExample&quot;&gt;&lt;a href=&quot;#CCGPUImage-GPUImage-CCGPUImageExample&quot; class=&quot;headerlink&quot; title=&quot;CCGPUImage/GPUImag
      
    
    </summary>
    
    
      <category term="iOS" scheme="https://ccworld1000.github.io/tags/iOS/"/>
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="GPU" scheme="https://ccworld1000.github.io/tags/GPU/"/>
    
      <category term="macOS" scheme="https://ccworld1000.github.io/tags/macOS/"/>
    
      <category term="CCGPUImage" scheme="https://ccworld1000.github.io/tags/CCGPUImage/"/>
    
      <category term="GPUImage" scheme="https://ccworld1000.github.io/tags/GPUImage/"/>
    
      <category term="美颜" scheme="https://ccworld1000.github.io/tags/%E7%BE%8E%E9%A2%9C/"/>
    
      <category term="一键美颜" scheme="https://ccworld1000.github.io/tags/%E4%B8%80%E9%94%AE%E7%BE%8E%E9%A2%9C/"/>
    
      <category term="beauty" scheme="https://ccworld1000.github.io/tags/beauty/"/>
    
      <category term="filter" scheme="https://ccworld1000.github.io/tags/filter/"/>
    
      <category term="GPUImageBeautifyFilter" scheme="https://ccworld1000.github.io/tags/GPUImageBeautifyFilter/"/>
    
      <category term="CCGPUImageExample" scheme="https://ccworld1000.github.io/tags/CCGPUImageExample/"/>
    
  </entry>
  
  <entry>
    <title>CCObj2opengl</title>
    <link href="https://ccworld1000.github.io/2020/11/14/CCObj2opengl/"/>
    <id>https://ccworld1000.github.io/2020/11/14/CCObj2opengl/</id>
    <published>2020-11-14T15:29:29.000Z</published>
    <updated>2020-11-22T07:03:12.994Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CCObj2opengl"><a href="#CCObj2opengl" class="headerlink" title="CCObj2opengl"></a><a href="https://github.com/ccworld1000/CCObj2opengl" target="_blank" rel="noopener">CCObj2opengl</a></h1><p>script to convert 3D models of OBJ files to OC/C/C++ float arrays (vertices, faces, texture) compatible with OpenGL ES glDrawArrays compatible with iPhone/iPad/macOS</p><h3 id="CCObj2opengl-come-frome-obj2opengl"><a href="#CCObj2opengl-come-frome-obj2opengl" class="headerlink" title="CCObj2opengl come frome obj2opengl"></a>CCObj2opengl come frome obj2opengl</h3><p>obj2opengl –&gt;It will not be updated for a long time. This script will be slightly adjusted later</p><h3 id="Convert-3D-models-of-OBJ-file"><a href="#Convert-3D-models-of-OBJ-file" class="headerlink" title="Convert 3D models of OBJ file"></a>Convert 3D models of OBJ file</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">CC <span class="comment"># ls</span></span><br><span class="line">CCObj2opengl.plCCTest.objCCTestObj.pngCCTestRun.pngLICENSEREADME.md</span><br><span class="line">CC <span class="comment"># ./CCObj2opengl.pl CCTest.obj</span></span><br><span class="line">Input file     : ./CCTest.obj</span><br><span class="line">Output file    : ./CCTest.h</span><br><span class="line">Object name    : CCTest</span><br><span class="line">Center         : &lt;0, 0, 0&gt;</span><br><span class="line">Scale by       : 0.5</span><br><span class="line">----------------</span><br><span class="line">Vertices       : 8</span><br><span class="line">Faces          : 12</span><br><span class="line">Texture Coords : 14</span><br><span class="line">Normals        : 6</span><br><span class="line">CC <span class="comment"># ls</span></span><br><span class="line">CCObj2opengl.plCCTest.hCCTest.objCCTestObj.pngCCTestRun.pngLICENSEREADME.md</span><br><span class="line">CC <span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="Test-OBJ-file"><a href="#Test-OBJ-file" class="headerlink" title="Test OBJ file"></a>Test OBJ file</h3><p><img src="https://raw.github.com/ccworld1000/CCObj2opengl/main/CCTestObj.png" alt="CCTestObj.png"></p><p><img src="https://raw.github.com/ccworld1000/CCObj2opengl/main/CCSphere1.png" alt="CCSphere1.png"></p><h3 id="Test-OBJ-file-run-iPhone"><a href="#Test-OBJ-file-run-iPhone" class="headerlink" title="Test OBJ file run iPhone"></a>Test OBJ file run iPhone</h3><p><img src="https://raw.github.com/ccworld1000/CCObj2opengl/main/CCTestRun.png" alt="CCCTestRun.png"></p><p><img src="https://raw.github.com/ccworld1000/CCObj2opengl/main/CCSphere2.png" alt="CCSphere2.png"></p><h3 id="Test-OBJ-file-run-iPhone-Device-Effects"><a href="#Test-OBJ-file-run-iPhone-Device-Effects" class="headerlink" title="Test OBJ file run iPhone Device Effects"></a>Test OBJ file run iPhone Device Effects</h3><p><img src="https://raw.github.com/ccworld1000/CCObj2opengl/main/IMG_1763.JPG" alt="IMG_1763.JPG"></p><p><img src="https://raw.github.com/ccworld1000/CCObj2opengl/main/IMG_1764.JPG" alt="IMG_1764.JPG"></p><p><img src="https://raw.github.com/ccworld1000/CCObj2opengl/main/IMG_1767.JPG" alt="IMG_1767.JPG"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CCObj2opengl&quot;&gt;&lt;a href=&quot;#CCObj2opengl&quot; class=&quot;headerlink&quot; title=&quot;CCObj2opengl&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ccworld1000/CCObj2open
      
    
    </summary>
    
    
      <category term="iOS" scheme="https://ccworld1000.github.io/tags/iOS/"/>
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="macOS" scheme="https://ccworld1000.github.io/tags/macOS/"/>
    
      <category term="CCObj2opengl" scheme="https://ccworld1000.github.io/tags/CCObj2opengl/"/>
    
      <category term="OpenGL" scheme="https://ccworld1000.github.io/tags/OpenGL/"/>
    
      <category term="OpenGL ES" scheme="https://ccworld1000.github.io/tags/OpenGL-ES/"/>
    
      <category term="C" scheme="https://ccworld1000.github.io/tags/C/"/>
    
      <category term="iPhone" scheme="https://ccworld1000.github.io/tags/iPhone/"/>
    
  </entry>
  
  <entry>
    <title>CCMemoryStyle memory map</title>
    <link href="https://ccworld1000.github.io/2020/11/04/CCMemoryStyle-memory-map/"/>
    <id>https://ccworld1000.github.io/2020/11/04/CCMemoryStyle-memory-map/</id>
    <published>2020-11-04T11:25:20.000Z</published>
    <updated>2020-11-04T11:28:47.916Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CCMemoryStyle"><a href="#CCMemoryStyle" class="headerlink" title="CCMemoryStyle"></a><a href="https://github.com/ccworld1000/CCMemoryStyle" target="_blank" rel="noopener">CCMemoryStyle</a></h1><p>CCMemoryStyle memory map, Memory distribution, maybe you can do more from it.</p><p>Fg:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">CC # CCMemory CCMemoryStyle.framework/CCMemoryStyle</span><br><span class="line">Class Name                                         Memory size</span><br><span class="line"></span><br><span class="line">CCMemory01                                         16</span><br><span class="line">CCMemory02                                         16</span><br><span class="line">CCMemory03                                         32</span><br><span class="line">CCMemory04                                         16</span><br><span class="line">CCMemory05                                         176</span><br><span class="line">CCMemory06                                         64</span><br><span class="line">CCMemory07                                         64</span><br><span class="line">CCMemory08                                         80</span><br><span class="line">CCMemory09                                         80</span><br><span class="line">CCMemory10                                         96</span><br><span class="line">CCMemory11                                         96</span><br><span class="line">CCMemory12                                         112</span><br><span class="line">CCMemory13                                         112</span><br><span class="line">CCMemory14                                         128</span><br><span class="line">CCMemory15                                         128</span><br><span class="line">CCMemory16                                         144</span><br><span class="line">CCMemory17                                         144</span><br><span class="line">CCMemory18                                         160</span><br><span class="line">CCMemory19                                         160</span><br><span class="line">CCMemory20                                         176</span><br><span class="line">CCMemory21                                         176</span><br><span class="line">CCMemory22                                         192</span><br><span class="line">CCMemory23                                         192</span><br><span class="line">CCMemory24                                         208</span><br><span class="line">CCMemory25                                         208</span><br><span class="line">CCMemory26                                         224</span><br><span class="line">CCMemory27                                         224</span><br><span class="line">CCMemory28                                         240</span><br><span class="line">CCMemory29                                         240</span><br><span class="line">CCMemory30                                         256</span><br><span class="line">CCMemorySub01                                      16</span><br><span class="line">CCMemorySub02                                      32</span><br><span class="line">CCMemorySub03                                      16</span><br><span class="line">CCMemorySub04                                      176</span><br><span class="line">CCMemorySub05                                      64</span><br><span class="line">CCMemorySub06                                      64</span><br><span class="line">CCMemorySub07                                      80</span><br><span class="line">CCMemorySub08                                      80</span><br><span class="line">CCMemorySub09                                      96</span><br><span class="line">CCMemorySub10                                      96</span><br><span class="line">CCMemorySub11                                      112</span><br><span class="line">CCMemorySub12                                      112</span><br><span class="line">CCMemorySub13                                      128</span><br><span class="line">CCMemorySub14                                      128</span><br><span class="line">CCMemorySub15                                      144</span><br><span class="line">CCMemorySub16                                      144</span><br><span class="line">CCMemorySub17                                      160</span><br><span class="line">CCMemorySub18                                      160</span><br><span class="line">CCMemorySub19                                      176</span><br><span class="line">CCMemorySub20                                      176</span><br><span class="line">CCMemorySub21                                      192</span><br><span class="line">CCMemorySub22                                      192</span><br><span class="line">CCMemorySub23                                      208</span><br><span class="line">CCMemorySub24                                      208</span><br><span class="line">CCMemorySub25                                      224</span><br><span class="line">CCMemorySub26                                      224</span><br><span class="line">CCMemorySub27                                      240</span><br><span class="line">CCMemorySub28                                      240</span><br><span class="line">CCMemorySub29                                      256</span><br><span class="line">CCMemorySub30                                      256</span><br><span class="line">CC #</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CCMemoryStyle&quot;&gt;&lt;a href=&quot;#CCMemoryStyle&quot; class=&quot;headerlink&quot; title=&quot;CCMemoryStyle&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ccworld1000/CCMemor
      
    
    </summary>
    
    
      <category term="iOS" scheme="https://ccworld1000.github.io/tags/iOS/"/>
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="macOS" scheme="https://ccworld1000.github.io/tags/macOS/"/>
    
      <category term="CCMemoryStyle" scheme="https://ccworld1000.github.io/tags/CCMemoryStyle/"/>
    
      <category term="CCMemory" scheme="https://ccworld1000.github.io/tags/CCMemory/"/>
    
  </entry>
  
  <entry>
    <title>CCBinStyle for bin style</title>
    <link href="https://ccworld1000.github.io/2020/06/21/CCBinStyle-for-bin-style/"/>
    <id>https://ccworld1000.github.io/2020/06/21/CCBinStyle-for-bin-style/</id>
    <published>2020-06-21T14:36:00.000Z</published>
    <updated>2020-06-21T14:40:32.552Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CCBinStyle"><a href="#CCBinStyle" class="headerlink" title="CCBinStyle"></a>CCBinStyle</h1><p><a href="https://github.com/ccworld1000/CCBinStyle" target="_blank" rel="noopener">https://github.com/ccworld1000/CCBinStyle</a></p><p>CCBinStyle for bin style, Accept bin style conversion business(接受bin style转换业务) </p><p><img src="https://raw.github.com/ccworld1000/CCBinStyle/master/ccxpc.png" alt="ccxpc.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CCBinStyle&quot;&gt;&lt;a href=&quot;#CCBinStyle&quot; class=&quot;headerlink&quot; title=&quot;CCBinStyle&quot;&gt;&lt;/a&gt;CCBinStyle&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ccworld100
      
    
    </summary>
    
    
      <category term="iOS" scheme="https://ccworld1000.github.io/tags/iOS/"/>
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="CCBinStyle" scheme="https://ccworld1000.github.io/tags/CCBinStyle/"/>
    
      <category term="xpc" scheme="https://ccworld1000.github.io/tags/xpc/"/>
    
      <category term="ccxpc" scheme="https://ccworld1000.github.io/tags/ccxpc/"/>
    
      <category term="macOS" scheme="https://ccworld1000.github.io/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>CCComposition for code style</title>
    <link href="https://ccworld1000.github.io/2020/05/26/CCComposition-for-code-style/"/>
    <id>https://ccworld1000.github.io/2020/05/26/CCComposition-for-code-style/</id>
    <published>2020-05-26T14:58:48.000Z</published>
    <updated>2020-05-26T15:02:03.791Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CCComposition"><a href="#CCComposition" class="headerlink" title="CCComposition"></a>CCComposition</h1><p>CCComposition for code style, Accept code style conversion business(接受code style转换业务)</p><h3 id="ASD"><a href="#ASD" class="headerlink" title="ASD"></a>ASD</h3><p><img src="https://raw.github.com/ccworld1000/CCComposition/master/ASD.png" alt="ASD"></p><h3 id="CCAFNetworking"><a href="#CCAFNetworking" class="headerlink" title="CCAFNetworking"></a>CCAFNetworking</h3><p><img src="https://raw.github.com/ccworld1000/CCComposition/master/CCAFNetworking.png" alt="CCAFNetworking"></p><h3 id="Charts"><a href="#Charts" class="headerlink" title="Charts"></a>Charts</h3><p><img src="https://raw.github.com/ccworld1000/CCComposition/master/Charts.png" alt="Charts"></p><h3 id="CoreML"><a href="#CoreML" class="headerlink" title="CoreML"></a>CoreML</h3><p><img src="https://raw.github.com/ccworld1000/CCComposition/master/CoreML.framework.png" alt="CoreML"></p><h3 id="IGListKit"><a href="#IGListKit" class="headerlink" title="IGListKit"></a>IGListKit</h3><p><img src="https://raw.github.com/ccworld1000/CCComposition/master/IGListKit.png" alt="IGListKit"></p><h3 id="MPAndroidChart"><a href="#MPAndroidChart" class="headerlink" title="MPAndroidChart"></a>MPAndroidChart</h3><p><img src="https://raw.github.com/ccworld1000/CCComposition/master/MPAndroidChart-master.png" alt="MPAndroidChart"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CCComposition&quot;&gt;&lt;a href=&quot;#CCComposition&quot; class=&quot;headerlink&quot; title=&quot;CCComposition&quot;&gt;&lt;/a&gt;CCComposition&lt;/h1&gt;&lt;p&gt;CCComposition for code sty
      
    
    </summary>
    
    
      <category term="ASD" scheme="https://ccworld1000.github.io/tags/ASD/"/>
    
      <category term="AFNetworking" scheme="https://ccworld1000.github.io/tags/AFNetworking/"/>
    
      <category term="Charts" scheme="https://ccworld1000.github.io/tags/Charts/"/>
    
      <category term="CoreML" scheme="https://ccworld1000.github.io/tags/CoreML/"/>
    
      <category term="IGListKit" scheme="https://ccworld1000.github.io/tags/IGListKit/"/>
    
      <category term="MPAndroidChart" scheme="https://ccworld1000.github.io/tags/MPAndroidChart/"/>
    
  </entry>
  
  <entry>
    <title>CCFPSStatus show FPS status</title>
    <link href="https://ccworld1000.github.io/2019/05/04/CCFPSStatus-show-FPS-status/"/>
    <id>https://ccworld1000.github.io/2019/05/04/CCFPSStatus-show-FPS-status/</id>
    <published>2019-05-04T02:39:49.000Z</published>
    <updated>2019-05-04T02:55:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CCFPSStatus"><a href="#CCFPSStatus" class="headerlink" title="CCFPSStatus"></a>CCFPSStatus</h1><p><a href="https://github.com/ccworld1000/CCFPSStatus" target="_blank" rel="noopener">CCFPSStatus</a> show FPS status | Flexible location (Built-in on <a href="https://github.com/joggerplus/JPFPSStatus" target="_blank" rel="noopener">JPFPSStatus</a>, optimize and adjust it)</p><h2 id="Screenshots"><a href="#Screenshots" class="headerlink" title="Screenshots"></a>Screenshots</h2><p><img src="https://github.com/ccworld1000/CCFPSStatus/blob/master/fps.gif?raw=true" alt="CCFPSStatus fps"></p><h4 id="Podfile"><a href="#Podfile" class="headerlink" title="Podfile"></a>Podfile</h4><p>​<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">platform <span class="symbol">:ios</span>, <span class="string">'9.0'</span></span><br><span class="line">pod <span class="string">'CCFPSStatus'</span></span><br><span class="line">​</span><br></pre></td></tr></table></figure></p><h4 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h4><p>Note：Use CCFPSStatus in DEBUG mode</p><p>add the code in AppDelegate.m    </p><pre>#import "CCFPSStatus.h"- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {    // Override point for customization after application launch.#if defined(DEBUG)||defined(_DEBUG)    [[CCFPSStatus sharedInstance] open];#endif    return YES;}</pre><pre>#if defined(DEBUG)||defined(_DEBUG)    [[CCFPSStatus sharedInstance] openWithHandler:^(NSInteger fpsValue) {        NSLog(@"fpsvalue %@",@(fpsValue));    }];#endif</pre><pre>#if defined(DEBUG)||defined(_DEBUG)    [[CCFPSStatus sharedInstance] close];#endif</pre><h4 id="Licenses"><a href="#Licenses" class="headerlink" title="Licenses"></a>Licenses</h4><p>All source code is licensed under the <a href="https://github.com/ccworld1000/CCFPSStatus/blob/master/LICENSE" target="_blank" rel="noopener">MIT License</a>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CCFPSStatus&quot;&gt;&lt;a href=&quot;#CCFPSStatus&quot; class=&quot;headerlink&quot; title=&quot;CCFPSStatus&quot;&gt;&lt;/a&gt;CCFPSStatus&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ccworl
      
    
    </summary>
    
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="CCFPSStatus" scheme="https://ccworld1000.github.io/tags/CCFPSStatus/"/>
    
      <category term="fps" scheme="https://ccworld1000.github.io/tags/fps/"/>
    
      <category term="FPSStatus" scheme="https://ccworld1000.github.io/tags/FPSStatus/"/>
    
      <category term="FPS-Status" scheme="https://ccworld1000.github.io/tags/FPS-Status/"/>
    
      <category term="JPFPSStatus" scheme="https://ccworld1000.github.io/tags/JPFPSStatus/"/>
    
      <category term="ios" scheme="https://ccworld1000.github.io/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>netural style &amp; AI effect [神经网络风格画 &amp; AI效果]</title>
    <link href="https://ccworld1000.github.io/2018/12/12/netural-style-AI-effect-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E9%A3%8E%E6%A0%BC%E7%94%BB-AI%E6%95%88%E6%9E%9C/"/>
    <id>https://ccworld1000.github.io/2018/12/12/netural-style-AI-effect-神经网络风格画-AI效果/</id>
    <published>2018-12-12T14:03:43.000Z</published>
    <updated>2018-12-12T14:33:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Scene1-CCStyle-amp-Butterfly"><a href="#Scene1-CCStyle-amp-Butterfly" class="headerlink" title="Scene1: CCStyle &amp;  Butterfly"></a>Scene1: CCStyle &amp;  <a href="https://github.com/ccworld1000/CCStyle/tree/master/butterfly" target="_blank" rel="noopener">Butterfly</a></h2><h2 id="Hundreds-of-pictures-have-been-generated-This-is-the-best-set-of-pictures-Material-used-to-shoot-butterflies"><a href="#Hundreds-of-pictures-have-been-generated-This-is-the-best-set-of-pictures-Material-used-to-shoot-butterflies" class="headerlink" title="Hundreds of pictures have been generated. This is the best set of pictures. Material used to shoot butterflies."></a>Hundreds of pictures have been generated. This is the best set of pictures. Material used to shoot butterflies.</h2><h2 id="In-most-cases-the-effect-of-the-generated-images-is-not-very-ideal"><a href="#In-most-cases-the-effect-of-the-generated-images-is-not-very-ideal" class="headerlink" title="In most cases, the effect of the generated images is not very ideal."></a>In most cases, the effect of the generated images is not very ideal.</h2><p><img src="https://raw.githubusercontent.com/ccworld1000/CCStyle/master/butterfly/ccstlye_1.jpg" alt="ccstlye_1.jpg"></p><p><img src="https://raw.githubusercontent.com/ccworld1000/CCStyle/master/butterfly/ccstlye_2.jpg" alt="ccstlye_2.jpg"></p><p><img src="https://raw.githubusercontent.com/ccworld1000/CCStyle/master/butterfly/ccstlye_3.jpg" alt="ccstlye_3.jpg"></p><p><img src="https://raw.githubusercontent.com/ccworld1000/CCStyle/master/butterfly/ccstlye_4.jpg" alt="ccstlye_4.jpg"></p><p><img src="https://raw.githubusercontent.com/ccworld1000/CCStyle/master/butterfly/ccstlye_5.jpg" alt="ccstlye_5.jpg"></p><p><img src="https://raw.githubusercontent.com/ccworld1000/CCStyle/master/butterfly/ccstlye_6.jpg" alt="ccstlye_6.jpg"></p><p><img src="https://raw.githubusercontent.com/ccworld1000/CCStyle/master/butterfly/ccstlye_7.jpg" alt="ccstlye_7.jpg"></p><p><img src="https://raw.githubusercontent.com/ccworld1000/CCStyle/master/butterfly/ccstlye_8.jpg" alt="ccstlye_8.jpg"></p><p><img src="https://raw.githubusercontent.com/ccworld1000/CCStyle/master/butterfly/ccstlye_9.jpg" alt="ccstlye_9.jpg"></p><h2 id="Scene2-Flower"><a href="#Scene2-Flower" class="headerlink" title="Scene2: Flower"></a>Scene2: Flower</h2><h2 id="Discrimination-of-Flowers-Using-Existing-AI-Model"><a href="#Discrimination-of-Flowers-Using-Existing-AI-Model" class="headerlink" title="Discrimination of Flowers Using Existing AI Model."></a>Discrimination of Flowers Using Existing AI Model.</h2><h2 id="The-main-first-picture-was-actually-a-lotus-flower-but-it-was-identified-as-a-cyclamen"><a href="#The-main-first-picture-was-actually-a-lotus-flower-but-it-was-identified-as-a-cyclamen" class="headerlink" title="The main first picture was actually a lotus flower, but it was identified as a cyclamen."></a>The main first picture was actually a lotus flower, but it was identified as a cyclamen.</h2><p><img src="https://raw.githubusercontent.com/ccworld1000/CCFlowerDemo/master/Screenshots/RightWrong.png" alt="flower compare"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Scene1-CCStyle-amp-Butterfly&quot;&gt;&lt;a href=&quot;#Scene1-CCStyle-amp-Butterfly&quot; class=&quot;headerlink&quot; title=&quot;Scene1: CCStyle &amp;amp;  Butterfly&quot;&gt;&lt;/
      
    
    </summary>
    
      <category term="AI" scheme="https://ccworld1000.github.io/categories/AI/"/>
    
    
      <category term="AI" scheme="https://ccworld1000.github.io/tags/AI/"/>
    
      <category term="CCStyle" scheme="https://ccworld1000.github.io/tags/CCStyle/"/>
    
      <category term="netural style" scheme="https://ccworld1000.github.io/tags/netural-style/"/>
    
      <category term="netural art" scheme="https://ccworld1000.github.io/tags/netural-art/"/>
    
      <category term="神经网络" scheme="https://ccworld1000.github.io/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
      <category term="AI效果" scheme="https://ccworld1000.github.io/tags/AI%E6%95%88%E6%9E%9C/"/>
    
      <category term="ml" scheme="https://ccworld1000.github.io/tags/ml/"/>
    
      <category term="coreml" scheme="https://ccworld1000.github.io/tags/coreml/"/>
    
      <category term="deep-learning" scheme="https://ccworld1000.github.io/tags/deep-learning/"/>
    
      <category term="machine-learning" scheme="https://ccworld1000.github.io/tags/machine-learning/"/>
    
      <category term="dl" scheme="https://ccworld1000.github.io/tags/dl/"/>
    
  </entry>
  
  <entry>
    <title>CCColor Simple and flexible color color conversion module for Raku Perl 6</title>
    <link href="https://ccworld1000.github.io/2018/11/20/CCColor-Simple-and-flexible-color-color-conversion-module-for-Raku-Perl-6/"/>
    <id>https://ccworld1000.github.io/2018/11/20/CCColor-Simple-and-flexible-color-color-conversion-module-for-Raku-Perl-6/</id>
    <published>2018-11-20T13:51:11.000Z</published>
    <updated>2018-12-19T15:35:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCColor"><a href="#CCColor" class="headerlink" title="CCColor"></a><a href="https://github.com/ccworld1000/CCColor" target="_blank" rel="noopener">CCColor</a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Simple and flexible color color conversion module for Raku Perl 6 , </span><br><span class="line">easy-to-use simple learning.</span><br></pre></td></tr></table></figure><p>## </p><h2 id="HEX-Color-use-CCColor"><a href="#HEX-Color-use-CCColor" class="headerlink" title="HEX Color (use CCColor)"></a>HEX Color (use CCColor)</h2><p><img src="https://raw.githubusercontent.com/ccworld1000/CCColor/master/doc/screenshot/colors.svg?sanitize=true" alt="colors"></p><p>## </p><h2 id="See-test"><a href="#See-test" class="headerlink" title="See test"></a>See test</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> CCColor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> @list =</span><br><span class="line">(</span><br><span class="line"><span class="string">"   #FFFEA963 "</span>,</span><br><span class="line"><span class="string">"   #FF FE A9 63 "</span>,</span><br><span class="line"><span class="string">"   #FF # FE #   A9 #     63 "</span>,</span><br><span class="line"><span class="string">"   #"</span>,</span><br><span class="line"><span class="string">"   #1"</span>,</span><br><span class="line"><span class="string">"   #123"</span>,</span><br><span class="line"><span class="string">"   #FFH"</span>,</span><br><span class="line"><span class="string">"   #FHF"</span>,</span><br><span class="line"><span class="string">"   #1234"</span>,</span><br><span class="line"><span class="string">"   #12345"</span>,</span><br><span class="line"><span class="string">"   #FFEE5"</span>,</span><br><span class="line"><span class="string">"   #FFEE56"</span>,</span><br><span class="line"><span class="string">"   #FFEE56A"</span>,</span><br><span class="line"><span class="string">"   #FFEE56AH"</span>,</span><br><span class="line"><span class="string">"   #FFEE56AA"</span>,</span><br><span class="line"><span class="string">"   #FFEE56AA11"</span>,</span><br><span class="line"><span class="string">"   #FFEE56AAFF11"</span>,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> @list -&gt; $color &#123;</span><br><span class="line">  <span class="keyword">my</span> ($r, $g, $b, $a) = hex2rgba($color);</span><br><span class="line">  <span class="keyword">say</span> <span class="string">"$r, $g, $b, $a"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Call test/test.p6</p><p><a href="https://raw.githubusercontent.com/ccworld1000/CCColor/master/doc/screenshot/test.png" target="_blank" rel="noopener"><img src="https://raw.githubusercontent.com/ccworld1000/CCColor/master/doc/screenshot/test.png" alt="test"></a></p><p>## </p><h2 id="Local-installation-and-unloading"><a href="#Local-installation-and-unloading" class="headerlink" title="Local installation and unloading"></a>Local installation and unloading</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zef install .</span><br><span class="line">zef uninstall CCColor</span><br></pre></td></tr></table></figure><p>## </p><h2 id="Network-install"><a href="#Network-install" class="headerlink" title="Network install"></a>Network install</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zef update</span><br><span class="line">zef install CCColor</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCColor&quot;&gt;&lt;a href=&quot;#CCColor&quot; class=&quot;headerlink&quot; title=&quot;CCColor&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ccworld1000/CCColor&quot; target=&quot;_blank&quot; 
      
    
    </summary>
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/categories/Perl-6/"/>
    
    
      <category term="CCColor" scheme="https://ccworld1000.github.io/tags/CCColor/"/>
    
      <category term="draw" scheme="https://ccworld1000.github.io/tags/draw/"/>
    
      <category term="pie" scheme="https://ccworld1000.github.io/tags/pie/"/>
    
      <category term="line" scheme="https://ccworld1000.github.io/tags/line/"/>
    
      <category term="graphics" scheme="https://ccworld1000.github.io/tags/graphics/"/>
    
      <category term="chart" scheme="https://ccworld1000.github.io/tags/chart/"/>
    
      <category term="color" scheme="https://ccworld1000.github.io/tags/color/"/>
    
      <category term="svg" scheme="https://ccworld1000.github.io/tags/svg/"/>
    
      <category term="raku" scheme="https://ccworld1000.github.io/tags/raku/"/>
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/tags/Perl-6/"/>
    
      <category term="perl6" scheme="https://ccworld1000.github.io/tags/perl6/"/>
    
      <category term="Perl 5" scheme="https://ccworld1000.github.io/tags/Perl-5/"/>
    
      <category term="Perl" scheme="https://ccworld1000.github.io/tags/Perl/"/>
    
  </entry>
  
  <entry>
    <title>Simple draw chart for Perl 6</title>
    <link href="https://ccworld1000.github.io/2018/11/12/Simple-draw-chart-for-Perl-6/"/>
    <id>https://ccworld1000.github.io/2018/11/12/Simple-draw-chart-for-Perl-6/</id>
    <published>2018-11-12T14:39:02.000Z</published>
    <updated>2018-11-12T14:44:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Simple-draw-chart-for-Perl-6-easy-to-use-simple-learning"><a href="#Simple-draw-chart-for-Perl-6-easy-to-use-simple-learning" class="headerlink" title="Simple draw chart for Perl 6 , easy-to-use simple learning."></a>Simple draw chart for Perl 6 , easy-to-use simple learning.</h2><h2 id="Local-installation-and-unloading"><a href="#Local-installation-and-unloading" class="headerlink" title="Local installation and unloading"></a>Local installation and unloading</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zef install .</span><br><span class="line">zef uninstall CCChart</span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2><h2 id="Network-install"><a href="#Network-install" class="headerlink" title="Network install"></a>Network install</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zef update</span><br><span class="line">zef install CCChart</span><br></pre></td></tr></table></figure><h2 id="-1"><a href="#-1" class="headerlink" title=" "></a> </h2><h2 id="CCChart-pie"><a href="#CCChart-pie" class="headerlink" title="CCChart pie"></a>CCChart pie</h2><p><img src="https://raw.githubusercontent.com/ccworld1000/CCChart/master//doc/screenshot/default.png" alt="CCChart pie"></p><p>## </p><h2 id="CCChart-lines"><a href="#CCChart-lines" class="headerlink" title="CCChart lines"></a>CCChart lines</h2><p><img src="https://raw.githubusercontent.com/ccworld1000/CCChart/master//doc/screenshot/default_lines.png" alt="CCChart pie"></p><p>## </p><h2 id="CCChart-test"><a href="#CCChart-test" class="headerlink" title="CCChart test"></a>CCChart test</h2><p>The call will generate a default “default.png” in the command line execution directory.</p><p><img src="https://raw.githubusercontent.com/ccworld1000/CCChart/master/doc/screenshot/test.png" alt="CCChart test"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Simple-draw-chart-for-Perl-6-easy-to-use-simple-learning&quot;&gt;&lt;a href=&quot;#Simple-draw-chart-for-Perl-6-easy-to-use-simple-learning&quot; class=
      
    
    </summary>
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/categories/Perl-6/"/>
    
    
      <category term="draw" scheme="https://ccworld1000.github.io/tags/draw/"/>
    
      <category term="pie" scheme="https://ccworld1000.github.io/tags/pie/"/>
    
      <category term="line" scheme="https://ccworld1000.github.io/tags/line/"/>
    
      <category term="graphics" scheme="https://ccworld1000.github.io/tags/graphics/"/>
    
      <category term="chart" scheme="https://ccworld1000.github.io/tags/chart/"/>
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/tags/Perl-6/"/>
    
      <category term="perl6" scheme="https://ccworld1000.github.io/tags/perl6/"/>
    
      <category term="Perl 5" scheme="https://ccworld1000.github.io/tags/Perl-5/"/>
    
      <category term="Perl" scheme="https://ccworld1000.github.io/tags/Perl/"/>
    
      <category term="CCLog" scheme="https://ccworld1000.github.io/tags/CCLog/"/>
    
      <category term="CCChart" scheme="https://ccworld1000.github.io/tags/CCChart/"/>
    
      <category term="png" scheme="https://ccworld1000.github.io/tags/png/"/>
    
      <category term="Cairo" scheme="https://ccworld1000.github.io/tags/Cairo/"/>
    
  </entry>
  
  <entry>
    <title>CCLog Simple and lightweight cross-platform logs</title>
    <link href="https://ccworld1000.github.io/2018/11/01/CCLog-Simple-and-lightweight-cross-platform-logs/"/>
    <id>https://ccworld1000.github.io/2018/11/01/CCLog-Simple-and-lightweight-cross-platform-logs/</id>
    <published>2018-11-01T14:41:45.000Z</published>
    <updated>2018-11-01T14:47:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCLog"><a href="#CCLog" class="headerlink" title="CCLog"></a>CCLog</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Simple and lightweight cross-platform logs,</span><br><span class="line">easy-to-use simple learning,</span><br><span class="line">and support for multiple languages,</span><br><span class="line">such as C, C++, Perl 6, shell, Objective-C</span><br></pre></td></tr></table></figure><p>## </p><h2 id="Perl-6"><a href="#Perl-6" class="headerlink" title="Perl 6"></a>Perl 6</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">There are 2 (CCLog &amp; CCLogFull) ways of binding.</span><br></pre></td></tr></table></figure><p>Call CCLog.pm6</p><p><a href="https://github.com/ccworld1000/CCLog/blob/master/CCLog/doc/sceenshot/short_perl6.png" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCLog/raw/master/CCLog/doc/sceenshot/short_perl6.png" alt="short_perl6"></a></p><p>Call CCLogFull.pm6</p><p><a href="https://github.com/ccworld1000/CCLog/blob/master/CCLog/doc/sceenshot/full_perl6.png" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCLog/raw/master/CCLog/doc/sceenshot/full_perl6.png" alt="full_perl6"></a></p><p>## </p><h2 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Provide simple commands. fg: </span><br><span class="line">ccnormal</span><br><span class="line">ccwarning</span><br><span class="line">ccerror</span><br><span class="line">cctimer</span><br><span class="line">ccloop</span><br><span class="line">ccthread</span><br><span class="line">ccprint</span><br><span class="line">ccsay</span><br><span class="line">ccdie</span><br><span class="line">ccnetwork</span><br><span class="line"></span><br><span class="line">These commands are automatically installed locally and can be called directly.</span><br></pre></td></tr></table></figure><p>Call shell <a href="https://github.com/ccworld1000/CCLog/blob/master/CCLog/doc/sceenshot/shell.png" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCLog/raw/master/CCLog/doc/sceenshot/shell.png" alt="shell"></a></p><p>## </p><h2 id="C-amp-amp-C-amp-amp-Objective-C"><a href="#C-amp-amp-C-amp-amp-Objective-C" class="headerlink" title="C &amp;&amp; C++ &amp;&amp; Objective-C"></a>C &amp;&amp; C++ &amp;&amp; Objective-C</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You can use C library or C source (CCLog.h CCLog.c) code directly.</span><br></pre></td></tr></table></figure><p>Call C &amp;&amp; C++ &amp;&amp; Objective-C <a href="https://github.com/ccworld1000/CCLog/blob/master/CCLog/doc/sceenshot/c.png" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCLog/raw/master/CCLog/doc/sceenshot/c.png" alt="c"></a></p><p>## </p><h2 id="Objective-C"><a href="#Objective-C" class="headerlink" title="Objective-C"></a>Objective-C</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Objective-C can call C directly, Or follow other ways to import.</span><br></pre></td></tr></table></figure><p>## </p><h2 id="Local-installation-and-unloading"><a href="#Local-installation-and-unloading" class="headerlink" title="Local installation and unloading"></a>Local installation and unloading</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zef install .</span><br><span class="line">zef uninstall CCLog</span><br></pre></td></tr></table></figure><p>## </p><h2 id="Network-install"><a href="#Network-install" class="headerlink" title="Network install"></a>Network install</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zef update</span><br><span class="line">zef install CCLog</span><br></pre></td></tr></table></figure><p>## </p><h2 id="Check-if-the-installation-is-successful"><a href="#Check-if-the-installation-is-successful" class="headerlink" title="Check if the installation is successful"></a>Check if the installation is successful</h2><p>The installation may be as follows <a href="https://github.com/ccworld1000/CCLog/blob/master/CCLog/doc/sceenshot/check_ok.png" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCLog/raw/master/CCLog/doc/sceenshot/check_ok.png" alt="check_ok"></a></p><p>Installation failure may be as follows, you can try again <a href="https://github.com/ccworld1000/CCLog/blob/master/CCLog/doc/sceenshot/check_error.png" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCLog/raw/master/CCLog/doc/sceenshot/check_error.png" alt="check_error"></a></p><p>## </p><h2 id="Color-display-control"><a href="#Color-display-control" class="headerlink" title="Color display control"></a>Color display control</h2><p>Perl6 CCLog.pm6 call ccshowColor Perl6 CCLogFull.pm6 call CCLog_showColor C &amp;&amp; C++ &amp;&amp; Objective-C call CCLog_showColor<br> fg: <a href="https://github.com/ccworld1000/CCLog/blob/master/CCLog/doc/sceenshot/colorControl.png" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCLog/raw/master/CCLog/doc/sceenshot/colorControl.png" alt="colorControl"></a></p><p>## </p><h2 id="Tips-display-control"><a href="#Tips-display-control" class="headerlink" title="Tips display control"></a>Tips display control</h2><p>fg: <a href="https://github.com/ccworld1000/CCLog/blob/master/CCLog/doc/sceenshot/logTips.png" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCLog/raw/master/CCLog/doc/sceenshot/logTips.png" alt="logTips"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCLog&quot;&gt;&lt;a href=&quot;#CCLog&quot; class=&quot;headerlink&quot; title=&quot;CCLog&quot;&gt;&lt;/a&gt;CCLog&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/categories/Perl-6/"/>
    
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/tags/Perl-6/"/>
    
      <category term="perl6" scheme="https://ccworld1000.github.io/tags/perl6/"/>
    
      <category term="Perl 5" scheme="https://ccworld1000.github.io/tags/Perl-5/"/>
    
      <category term="Perl" scheme="https://ccworld1000.github.io/tags/Perl/"/>
    
      <category term="CCLog" scheme="https://ccworld1000.github.io/tags/CCLog/"/>
    
      <category term="cclog" scheme="https://ccworld1000.github.io/tags/cclog/"/>
    
      <category term="logs" scheme="https://ccworld1000.github.io/tags/logs/"/>
    
      <category term="log" scheme="https://ccworld1000.github.io/tags/log/"/>
    
      <category term="cross-platform" scheme="https://ccworld1000.github.io/tags/cross-platform/"/>
    
      <category term="shell" scheme="https://ccworld1000.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Cairo 2D Graphics library binding for Perl 6</title>
    <link href="https://ccworld1000.github.io/2018/10/15/Cairo-2D-Graphics-library-binding-for-Perl-6/"/>
    <id>https://ccworld1000.github.io/2018/10/15/Cairo-2D-Graphics-library-binding-for-Perl-6/</id>
    <published>2018-10-15T15:19:47.000Z</published>
    <updated>2018-10-15T15:55:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Cairo-2D-Graphics-library-binding-for-Perl-6"><a href="#Cairo-2D-Graphics-library-binding-for-Perl-6" class="headerlink" title="Cairo 2D Graphics library binding for Perl 6"></a>Cairo 2D Graphics library binding for Perl 6</h1><h2 id="Synopsis"><a href="#Synopsis" class="headerlink" title="Synopsis"></a>Synopsis</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> Cairo;</span><br><span class="line"><span class="keyword">given</span> Cairo::Image.create(Cairo::FORMAT_ARGB32, <span class="number">128</span>, <span class="number">128</span>) &#123;</span><br><span class="line">    <span class="keyword">given</span> Cairo::Context.new($_) &#123;</span><br><span class="line">        .rgb(<span class="number">0</span>, <span class="number">0</span>.<span class="number">7</span>, <span class="number">0</span>.<span class="number">9</span>);</span><br><span class="line">        .rectangle(<span class="number">10</span>, <span class="number">10</span>, <span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">        .fill :preserve; .rgb(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        .stroke</span><br><span class="line">    &#125;;</span><br><span class="line">    .write_png(<span class="string">"foobar.png"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Native-Cairo-library"><a href="#Native-Cairo-library" class="headerlink" title="Native Cairo library"></a>Native Cairo library</h2><p>In order to use this module, native <code>Cairo</code> library is needed. See instructions at <a href="https://cairographics.org/download/" target="_blank" rel="noopener">https://cairographics.org/download/</a>.</p><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><p><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/arc-negative.png?raw=true" alt="arc-negative.png"></p><p>doc/screenshot/arc.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/arc.png?raw=true" alt="arc.png"></p><p>doc/screenshot/clip-image.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/clip-image.png?raw=true" alt="clip-image.png"></p><p>doc/screenshot/clip.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/clip.png?raw=true" alt="clip.png"></p><p>doc/screenshot/curve-rectangle.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/curve-rectangle.png?raw=true" alt="curve-rectangle.png"></p><p>doc/screenshot/curve_to.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/curve_to.png?raw=true" alt="curve_to.png"></p><p>doc/screenshot/dash.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/dash.png?raw=true" alt="dash.png"></p><p>doc/screenshot/fill-and-stroke.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/fill-and-stroke.png?raw=true" alt="fill-and-stroke.png"></p><p>doc/screenshot/fill-style.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/fill-style.png?raw=true" alt="fill-style.png"></p><p>doc/screenshot/gradient.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/gradient.png?raw=true" alt="gradient.png"></p><p>doc/screenshot/image-pattern.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/image-pattern.png?raw=true" alt="image-pattern.png"></p><p>doc/screenshot/image.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/image.png?raw=true" alt="image.png"></p><p>doc/screenshot/multi-page-pdf.pdf<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/multi-page-pdf.pdf" alt="multi-page-pdf.pdf"></p><p>doc/screenshot/multi-segment-caps.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/multi-segment-caps.png?raw=true" alt="multi-segment-caps.png"></p><p>doc/screenshot/rounded-rectangle.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/rounded-rectangle.png?raw=true" alt="rounded-rectangle.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Cairo-2D-Graphics-library-binding-for-Perl-6&quot;&gt;&lt;a href=&quot;#Cairo-2D-Graphics-library-binding-for-Perl-6&quot; class=&quot;headerlink&quot; title=&quot;Cair
      
    
    </summary>
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/categories/Perl-6/"/>
    
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/tags/Perl-6/"/>
    
      <category term="perl6" scheme="https://ccworld1000.github.io/tags/perl6/"/>
    
      <category term="Perl 5" scheme="https://ccworld1000.github.io/tags/Perl-5/"/>
    
      <category term="Perl" scheme="https://ccworld1000.github.io/tags/Perl/"/>
    
      <category term="cairo" scheme="https://ccworld1000.github.io/tags/cairo/"/>
    
      <category term="2D" scheme="https://ccworld1000.github.io/tags/2D/"/>
    
      <category term="graphic" scheme="https://ccworld1000.github.io/tags/graphic/"/>
    
  </entry>
  
  <entry>
    <title>Perl 6 architecture 层次架构体系</title>
    <link href="https://ccworld1000.github.io/2018/10/04/Perl-6-architecture-%E5%B1%82%E6%AC%A1%E6%9E%B6%E6%9E%84%E4%BD%93%E7%B3%BB/"/>
    <id>https://ccworld1000.github.io/2018/10/04/Perl-6-architecture-层次架构体系/</id>
    <published>2018-10-04T07:22:45.000Z</published>
    <updated>2018-10-04T07:27:16.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Perl-6-architecture-层次架构体系"><a href="#Perl-6-architecture-层次架构体系" class="headerlink" title="Perl 6 architecture 层次架构体系"></a>Perl 6 architecture 层次架构体系</h3><p><img src="https://raw.github.com/ccworld1000/CCArchitecture/master/6.svg?sanitize=true" alt="Perl 6 architecture "></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Perl-6-architecture-层次架构体系&quot;&gt;&lt;a href=&quot;#Perl-6-architecture-层次架构体系&quot; class=&quot;headerlink&quot; title=&quot;Perl 6 architecture 层次架构体系&quot;&gt;&lt;/a&gt;Perl 6 a
      
    
    </summary>
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/categories/Perl-6/"/>
    
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/tags/Perl-6/"/>
    
      <category term="perl6" scheme="https://ccworld1000.github.io/tags/perl6/"/>
    
      <category term="Perl 5" scheme="https://ccworld1000.github.io/tags/Perl-5/"/>
    
      <category term="Perl" scheme="https://ccworld1000.github.io/tags/Perl/"/>
    
      <category term="rakudo" scheme="https://ccworld1000.github.io/tags/rakudo/"/>
    
      <category term="VM" scheme="https://ccworld1000.github.io/tags/VM/"/>
    
      <category term="moarvm" scheme="https://ccworld1000.github.io/tags/moarvm/"/>
    
      <category term="nqp" scheme="https://ccworld1000.github.io/tags/nqp/"/>
    
      <category term="perl" scheme="https://ccworld1000.github.io/tags/perl/"/>
    
      <category term="perl6.org" scheme="https://ccworld1000.github.io/tags/perl6-org/"/>
    
  </entry>
  
  <entry>
    <title>CCSQLite Objective-C 封装的SQLite. 结合YapDatabase(key/value store) + FMDB</title>
    <link href="https://ccworld1000.github.io/2018/09/09/CCSQLite-Objective-C-%E5%B0%81%E8%A3%85%E7%9A%84SQLite-%E7%BB%93%E5%90%88YapDatabase-key-value-store-FMDB/"/>
    <id>https://ccworld1000.github.io/2018/09/09/CCSQLite-Objective-C-封装的SQLite-结合YapDatabase-key-value-store-FMDB/</id>
    <published>2018-09-09T01:25:05.000Z</published>
    <updated>2018-09-09T01:31:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CCSQLite-Objective-C-封装的SQLite-结合YapDatabase-key-value-store-FMDB"><a href="#CCSQLite-Objective-C-封装的SQLite-结合YapDatabase-key-value-store-FMDB" class="headerlink" title="CCSQLite Objective-C 封装的SQLite. 结合YapDatabase(key/value store) + FMDB."></a>CCSQLite Objective-C 封装的SQLite. 结合YapDatabase(key/value store) + FMDB.</h3><hr><h1 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h1><ul><li>转变 FMDB 到 ARC 模式</li><li>YapDatabase 键/值 store</li><li>CCSQLite 结合 FMDB 和 YapDatabase 键/值</li></ul><hr><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h3><ul><li>转变 FMDB 到 ARC 模式</li><li>YapDatabase 键/值 store</li><li>CCSQLite 结合 FMDB 和 YapDatabase 键/值</li><li>支持 OBJECT, JSON 到 键/值</li></ul><hr><hr><h1 id="缘由-amp-amp-为啥"><a href="#缘由-amp-amp-为啥" class="headerlink" title="缘由 &amp;&amp; 为啥"></a>缘由 &amp;&amp; 为啥</h1><hr><p>当我在写”HSCache [缓存处理方面]”, 想选择FMDB或者YapDatabase, 但是他们看起来不一样. 因此想结合YapDatabase(键/值 store) 与 FMDB, 于是 CCSQLite 在路上.</p><h3 id="大于版本-1-1-1调整变化"><a href="#大于版本-1-1-1调整变化" class="headerlink" title="大于版本 1.1.1调整变化"></a>大于版本 1.1.1调整变化</h3><hr><p><a href="https://github.com/ccworld1000/CCSQLite/blob/master/Documentation/MainAdjust.png?raw=true" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCSQLite/raw/master/Documentation/MainAdjust.png?raw=true" alt="CCSQLite CCSQLiteMac Screenshot"></a></p><h3 id="Podfile"><a href="#Podfile" class="headerlink" title="Podfile"></a>Podfile</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod &apos;CCSQLite&apos;</span><br></pre></td></tr></table></figure><hr><h3 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h3><h4 id="for-Objective-C"><a href="#for-Objective-C" class="headerlink" title="for Objective-C"></a>for Objective-C</h4><h5 id="see-CCSQLiteDemo"><a href="#see-CCSQLiteDemo" class="headerlink" title="see CCSQLiteDemo"></a>see CCSQLiteDemo</h5><h5 id="iOS-CCSQLiteiOSDemo"><a href="#iOS-CCSQLiteiOSDemo" class="headerlink" title="iOS CCSQLiteiOSDemo"></a>iOS CCSQLiteiOSDemo</h5><h5 id="OSX-CCSQLiteOSXDemo"><a href="#OSX-CCSQLiteOSXDemo" class="headerlink" title="OSX CCSQLiteOSXDemo"></a>OSX CCSQLiteOSXDemo</h5><h3 id="for-Swift-call-Objective-C"><a href="#for-Swift-call-Objective-C" class="headerlink" title="for Swift call Objective-C"></a>for Swift call Objective-C</h3><h5 id="iOS-CCSQLiteDataiOS"><a href="#iOS-CCSQLiteDataiOS" class="headerlink" title="iOS CCSQLiteDataiOS"></a>iOS CCSQLiteDataiOS</h5><h5 id="OSX-CCSQLiteDatamacOS"><a href="#OSX-CCSQLiteDatamacOS" class="headerlink" title="OSX CCSQLiteDatamacOS"></a>OSX CCSQLiteDatamacOS</h5><h3 id="演示代码"><a href="#演示代码" class="headerlink" title="演示代码"></a>演示代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;CCSQLite.h&gt;</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;CCSQLite.h&quot;</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"CCSQLite/CCSQLite.h"</span></span></span><br><span class="line">+ (<span class="keyword">void</span>) SQLiteTest &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"SQLiteTest"</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSString</span> *path = <span class="literal">nil</span>;</span><br><span class="line"><span class="meta">#if TARGET_OS_IPHONE || TARGET_IPHONE_SIMULATOR</span></span><br><span class="line">    path = [<span class="built_in">NSSearchPathForDirectoriesInDomains</span>(<span class="built_in">NSDocumentDirectory</span>,<span class="built_in">NSUserDomainMask</span>, <span class="literal">YES</span>)  lastObject];</span><br><span class="line"><span class="meta">#else</span></span><br><span class="line">    path = <span class="built_in">NSTemporaryDirectory</span>() ;</span><br><span class="line"><span class="meta">#endif</span></span><br><span class="line">    </span><br><span class="line">    path = [path stringByAppendingPathComponent:CCSQLiteTestDB];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ([[<span class="built_in">NSFileManager</span> defaultManager] fileExistsAtPath:path]) &#123;</span><br><span class="line">        [[<span class="built_in">NSFileManager</span> defaultManager] removeItemAtPath:path error: <span class="literal">nil</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    CCSQLite *SQLite = [CCSQLite databaseWithPath: path];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ([SQLite open]) &#123;</span><br><span class="line">        <span class="built_in">BOOL</span> result = [SQLite executeUpdate: <span class="string">@"create table if not exists t_student (id integer primary key autoincrement, name text not NULL, age integer not NULL);"</span>];</span><br><span class="line">        <span class="keyword">if</span> (result) &#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"create table t_student ok"</span>);</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"path : %@"</span>, path);</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    [SQLite executeUpdate:<span class="string">@"insert into t_student (name, age) values (?, ?);"</span>, <span class="string">@"cc test 0"</span>, @<span class="number">0</span>];</span><br><span class="line">    [SQLite executeUpdate:<span class="string">@"insert into t_student (name, age) values (?, ?);"</span>, <span class="string">@"cc test 1"</span>, @<span class="number">1</span>];</span><br><span class="line">    [SQLite executeUpdateWithFormat:<span class="string">@"insert into t_student (name, age) values (%@, %i);"</span>, <span class="string">@"cc test 2"</span>, <span class="number">2000</span>];</span><br><span class="line">    </span><br><span class="line"><span class="comment">//    [SQLite executeUpdate:@"delete from t_student where id = ?", @1];</span></span><br><span class="line">    </span><br><span class="line">    CCResultSet *resultSet = [SQLite executeQuery:<span class="string">@"select * from t_student;"</span>];</span><br><span class="line">    <span class="keyword">while</span> ([resultSet next]) &#123;</span><br><span class="line">        <span class="keyword">int</span> idNum = [resultSet intForColumn:<span class="string">@"id"</span>];</span><br><span class="line">        <span class="built_in">NSString</span> *name = [resultSet objectForColumnName:<span class="string">@"name"</span>];</span><br><span class="line">        <span class="keyword">int</span> age = [resultSet intForColumn:<span class="string">@"age"</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"id = %d name = %@ age = %d"</span>, idNum, name, age);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//    [SQLite executeUpdate:@"drop table if exists t_student;"];</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSString</span> *sql = <span class="string">@"create table bulktest1 (id integer primary key autoincrement, x text);"</span></span><br><span class="line">    <span class="string">"create table bulktest2 (id integer primary key autoincrement, y text);"</span></span><br><span class="line">    <span class="string">"create table bulktest3 (id integer primary key autoincrement, z text);"</span></span><br><span class="line">    <span class="string">"insert into bulktest1 (x) values ('XXX');"</span></span><br><span class="line">    <span class="string">"insert into bulktest2 (y) values ('YYY');"</span></span><br><span class="line">    <span class="string">"insert into bulktest3 (z) values ('ZZZ');"</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">BOOL</span> success = [SQLite executeStatements:sql];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (success) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"success"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    sql = <span class="string">@"select count(*) as count from bulktest1;"</span></span><br><span class="line">    <span class="string">"select count(*) as count from bulktest2;"</span></span><br><span class="line">    <span class="string">"select count(*) as count from bulktest3;"</span>;</span><br><span class="line">    </span><br><span class="line">    [SQLite executeStatements:sql withResultBlock:^<span class="keyword">int</span>(<span class="built_in">NSDictionary</span> *resultsDictionary) &#123;</span><br><span class="line">        <span class="built_in">NSInteger</span> count = [resultsDictionary[<span class="string">@"count"</span>] integerValue];</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"count = %ld"</span>, count);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">    [SQLite close];</span><br><span class="line">    </span><br><span class="line">    CCSQLiteQueue *queue = [CCSQLiteQueue databaseQueueWithPath:path];</span><br><span class="line">    </span><br><span class="line">    __block <span class="built_in">NSInteger</span> index = <span class="number">3000</span>;</span><br><span class="line">    [queue inDatabase:^(CCSQLite *db) &#123;</span><br><span class="line">        <span class="keyword">while</span> (index &lt; <span class="number">3100</span>) &#123;</span><br><span class="line">            index++;</span><br><span class="line">            [db executeUpdate:<span class="string">@"insert into t_student (name, age) values (?, ?);"</span>, [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"cc test inDatabase %ld"</span>, index], @(index)];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">    [queue inTransaction:^(CCSQLite *db, <span class="built_in">BOOL</span> *rollback) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"rollback NO"</span>);</span><br><span class="line">        <span class="keyword">while</span> (index &lt; <span class="number">3150</span>) &#123;</span><br><span class="line">            index++;</span><br><span class="line">            [db executeUpdate:<span class="string">@"insert into t_student (name, age) values (?, ?);"</span>, [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"cc test inTransaction %ld"</span>, index], @(index)];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">    [queue inTransaction:^(CCSQLite *db, <span class="built_in">BOOL</span> *rollback) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"rollback YES"</span>);</span><br><span class="line">        <span class="keyword">while</span> (index &lt; <span class="number">3200</span>) &#123;</span><br><span class="line">            index++;</span><br><span class="line">            [db executeUpdate:<span class="string">@"insert into t_student (name, age) values (?, ?);"</span>, [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"cc test inTransaction %ld"</span>, index], @(index)];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (index == <span class="number">3188</span>) &#123;</span><br><span class="line">                *rollback = <span class="literal">YES</span>;</span><br><span class="line">                <span class="keyword">return</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CCKeyValue-演示代码"><a href="#CCKeyValue-演示代码" class="headerlink" title="CCKeyValue 演示代码"></a>CCKeyValue 演示代码</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">CCKeyValue *kv = [CCKeyValue defaultKeyValueWithPath:path];</span><br><span class="line">kv.valueType = CCKeyValueTypeJson;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSData</span> * data = [<span class="built_in">NSData</span> dataWithContentsOfFile:[[<span class="built_in">NSBundle</span> mainBundle] pathForResource:<span class="string">@"CCJSON"</span> ofType:<span class="string">@"json"</span>]];</span><br><span class="line"></span><br><span class="line">[kv setObject:data key:<span class="string">@"jsonkey"</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">id</span> CCJSON =  [kv objectForKey:<span class="string">@"jsonkey"</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ([CCJSON isKindOfClass:[<span class="built_in">NSArray</span> <span class="keyword">class</span>]]) &#123;</span><br><span class="line">    <span class="built_in">NSArray</span> *list = CCJSON;</span><br><span class="line">    </span><br><span class="line">    [list enumerateObjectsUsingBlock:^(<span class="built_in">NSDictionary</span> *d, <span class="built_in">NSUInteger</span> idx, <span class="built_in">BOOL</span> * _Nonnull stop) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"%@\n"</span>, d);</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果 <a href="https://github.com/ccworld1000/CCSQLite/blob/master/Documentation/CCKeyValue.png?raw=true" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCSQLite/raw/master/Documentation/CCKeyValue.png?raw=true" alt="CCKeyValue Screenshot"></a></p><h3 id="Swift-调用-Objective-C"><a href="#Swift-调用-Objective-C" class="headerlink" title="Swift 调用 Objective-C"></a>Swift 调用 Objective-C</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">    <span class="comment">// Do any additional setup after loading the view, typically from a nib.</span></span><br><span class="line">    </span><br><span class="line">    <span class="type">CCSQLiteData</span>.writeList()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> list = <span class="type">CCSQLiteData</span>.readList() &#123;</span><br><span class="line">        <span class="built_in">print</span>(list)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>### </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;CCSQLite-Objective-C-封装的SQLite-结合YapDatabase-key-value-store-FMDB&quot;&gt;&lt;a href=&quot;#CCSQLite-Objective-C-封装的SQLite-结合YapDatabase-key-value-
      
    
    </summary>
    
      <category term="iOS &amp;&amp; macOS" scheme="https://ccworld1000.github.io/categories/iOS-macOS/"/>
    
    
      <category term="iOS" scheme="https://ccworld1000.github.io/tags/iOS/"/>
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="macOS" scheme="https://ccworld1000.github.io/tags/macOS/"/>
    
      <category term="CCSQLite" scheme="https://ccworld1000.github.io/tags/CCSQLite/"/>
    
      <category term="FMDB" scheme="https://ccworld1000.github.io/tags/FMDB/"/>
    
      <category term="YapDatabase" scheme="https://ccworld1000.github.io/tags/YapDatabase/"/>
    
      <category term="database" scheme="https://ccworld1000.github.io/tags/database/"/>
    
      <category term="JSON" scheme="https://ccworld1000.github.io/tags/JSON/"/>
    
      <category term="key" scheme="https://ccworld1000.github.io/tags/key/"/>
    
      <category term="value" scheme="https://ccworld1000.github.io/tags/value/"/>
    
      <category term="cache" scheme="https://ccworld1000.github.io/tags/cache/"/>
    
      <category term="sqlite" scheme="https://ccworld1000.github.io/tags/sqlite/"/>
    
      <category term="swift" scheme="https://ccworld1000.github.io/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>CCDebug 一种灵活的、轻量级的、可扩展的、可定制的日志调试 支持iOS与macOS</title>
    <link href="https://ccworld1000.github.io/2018/09/08/CCDebug-%E4%B8%80%E7%A7%8D%E7%81%B5%E6%B4%BB%E7%9A%84%E3%80%81%E8%BD%BB%E9%87%8F%E7%BA%A7%E7%9A%84%E3%80%81%E5%8F%AF%E6%89%A9%E5%B1%95%E7%9A%84%E3%80%81%E5%8F%AF%E5%AE%9A%E5%88%B6%E7%9A%84%E6%97%A5%E5%BF%97%E8%B0%83%E8%AF%95-%E6%94%AF%E6%8C%81iOS%E4%B8%8EmacOS/"/>
    <id>https://ccworld1000.github.io/2018/09/08/CCDebug-一种灵活的、轻量级的、可扩展的、可定制的日志调试-支持iOS与macOS/</id>
    <published>2018-09-08T10:19:24.000Z</published>
    <updated>2018-09-08T10:56:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CCDebug-iOS-amp-amp-OSX"><a href="#CCDebug-iOS-amp-amp-OSX" class="headerlink" title="CCDebug [ iOS &amp;&amp; OSX ]"></a>CCDebug [ iOS &amp;&amp; OSX ]</h1><p>CCDebug : 一种灵活的、轻量级的、可扩展的、可定制的日志调试  支持  iOS &amp;&amp; OSX</p><p>=======================</p><p><a href="https://github.com/ccworld1000/CCDebug.git" target="_blank" rel="noopener">https://github.com/ccworld1000/CCDebug.git</a></p><h2 id="首选安装-XcodeColors"><a href="#首选安装-XcodeColors" class="headerlink" title="首选安装 XcodeColors"></a>首选安装 XcodeColors</h2><p><a href="https://github.com/robbiehanson/XcodeColors" target="_blank" rel="noopener">https://github.com/robbiehanson/XcodeColors</a></p><h4 id="支持-Xcode-4-5-6-7-8-9-amp-10"><a href="#支持-Xcode-4-5-6-7-8-9-amp-10" class="headerlink" title="支持 Xcode 4, 5, 6, 7, 8 , 9 &amp; 10"></a>支持 Xcode 4, 5, 6, 7, 8 , 9 &amp; 10</h4><h2 id="bug-或建议"><a href="#bug-或建议" class="headerlink" title="bug 或建议"></a>bug 或建议</h2><p>G Email ： <a href="mailto:ccworld1000@gmail.com" target="_blank" rel="noopener">ccworld1000@gmail.com</a></p><h2 id="Podfile"><a href="#Podfile" class="headerlink" title="Podfile"></a>Podfile</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod &apos;CCDebug&apos;</span><br></pre></td></tr></table></figure><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">+ (void) logTest &#123;</span><br><span class="line">    [CCDebug debugLogSwitch: YES];</span><br><span class="line">    </span><br><span class="line">    [CCDebug enableNSLogPrefix: NO];</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     *  colorRGBEnable | [XcodeColors installation] https://github.com/robbiehanson/XcodeColors</span><br><span class="line">     *  screenshot https://github.com/ccworld1000/CCDebug</span><br><span class="line">     *  @param showColor showColor description</span><br><span class="line">     */</span><br><span class="line">    [CCDebug colorRGBEnable: YES];</span><br><span class="line">    </span><br><span class="line">    [CCDebug warningCustomColors:60 green:120 blue:60];</span><br><span class="line">    </span><br><span class="line">    CCDebugWarningPrint(@&quot;cc warning&quot;);</span><br><span class="line">    CCDebugErrorPrint(@&quot;cc error&quot;);</span><br><span class="line">    CCDebugPrint(@&quot;cc log&quot;);</span><br><span class="line">    </span><br><span class="line">    CCDebugTimerPrint(@&quot;NStimer test&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="截屏"><a href="#截屏" class="headerlink" title="截屏"></a>截屏</h2><h3 id="OSX"><a href="#OSX" class="headerlink" title="OSX"></a>OSX</h3><p><a href="https://github.com/ccworld1000/CCDebug/blob/master/Documentation/OSXRunning.png?raw=true" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCDebug/raw/master/Documentation/OSXRunning.png?raw=true" alt="CCDebug Mac Screenshot"></a></p><h3 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h3><p><a href="https://github.com/ccworld1000/CCDebug/blob/master/Documentation/iOSRunning.png?raw=true" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCDebug/raw/master/Documentation/iOSRunning.png?raw=true" alt="CCDebug iOS Screenshot"></a></p><h3 id="OSX-Xcode-8-3-2"><a href="#OSX-Xcode-8-3-2" class="headerlink" title="OSX Xcode_8.3.2"></a>OSX Xcode_8.3.2</h3><p><a href="https://github.com/ccworld1000/CCDebug/blob/master/Documentation/OSXRunning_Xcode_8.3.2.png?raw=true" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCDebug/raw/master/Documentation/OSXRunning_Xcode_8.3.2.png?raw=true" alt="CCDebug Mac Xcode_8.3.2 Screenshot"></a></p><h3 id="iOS-Xcode-8-3-2"><a href="#iOS-Xcode-8-3-2" class="headerlink" title="iOS Xcode_8.3.2"></a>iOS Xcode_8.3.2</h3><p><a href="https://github.com/ccworld1000/CCDebug/blob/master/Documentation/iOSRunning_Xcode_8.3.2.png?raw=true" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCDebug/raw/master/Documentation/iOSRunning_Xcode_8.3.2.png?raw=true" alt="CCDebug iOS Xcode_8.3.2 Screenshot"></a></p><h2 id="CCDebug"><a href="#CCDebug" class="headerlink" title="CCDebug"></a>CCDebug</h2><p>CCDebug 简单支持 machosx 与 iOS.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CCDebug-iOS-amp-amp-OSX&quot;&gt;&lt;a href=&quot;#CCDebug-iOS-amp-amp-OSX&quot; class=&quot;headerlink&quot; title=&quot;CCDebug [ iOS &amp;amp;&amp;amp; OSX ]&quot;&gt;&lt;/a&gt;CCDebug [ 
      
    
    </summary>
    
      <category term="iOS &amp;&amp; macOS" scheme="https://ccworld1000.github.io/categories/iOS-macOS/"/>
    
    
      <category term="iOS" scheme="https://ccworld1000.github.io/tags/iOS/"/>
    
      <category term="Xcode" scheme="https://ccworld1000.github.io/tags/Xcode/"/>
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="macOS" scheme="https://ccworld1000.github.io/tags/macOS/"/>
    
      <category term="color" scheme="https://ccworld1000.github.io/tags/color/"/>
    
      <category term="CCDebug" scheme="https://ccworld1000.github.io/tags/CCDebug/"/>
    
      <category term="debug" scheme="https://ccworld1000.github.io/tags/debug/"/>
    
      <category term="logging" scheme="https://ccworld1000.github.io/tags/logging/"/>
    
      <category term="NSLog" scheme="https://ccworld1000.github.io/tags/NSLog/"/>
    
      <category term="XcodeColors" scheme="https://ccworld1000.github.io/tags/XcodeColors/"/>
    
  </entry>
  
  <entry>
    <title>CCFont : A simple iOS and OS X CCFont replace [UIFont, NSFont], CCColor replace [UIColor, NSColor]</title>
    <link href="https://ccworld1000.github.io/2018/09/01/CCFont-A-simple-iOS-and-OS-X-CCFont-replace-UIFont-NSFont-CCColor-replace-UIColor-NSColor/"/>
    <id>https://ccworld1000.github.io/2018/09/01/CCFont-A-simple-iOS-and-OS-X-CCFont-replace-UIFont-NSFont-CCColor-replace-UIColor-NSColor/</id>
    <published>2018-09-01T04:59:17.000Z</published>
    <updated>2018-09-01T05:04:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CCFont-for-iOS-amp-amp-OSX"><a href="#CCFont-for-iOS-amp-amp-OSX" class="headerlink" title="CCFont for iOS &amp;&amp; OSX"></a>CCFont for iOS &amp;&amp; OSX</h1><p>=======================</p><p><a href="https://github.com/ccworld1000/CCFont/blob/master/README.md" target="_blank" rel="noopener">英文README</a></p><p>简单支持 MAC OSX [&gt;=10.9] 和 iOS [&gt;=8]</p><p><a href="https://github.com/ccworld1000/CCFont.git" target="_blank" rel="noopener">https://github.com/ccworld1000/CCFont.git</a></p><h2 id="截图-1"><a href="#截图-1" class="headerlink" title="截图 1"></a>截图 1</h2><h3 id="OSX"><a href="#OSX" class="headerlink" title="OSX"></a>OSX</h3><p><a href="https://github.com/ccworld1000/CCFont/blob/master/CCFontMac.gif?raw=true" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCFont/raw/master/CCFontMac.gif?raw=true" alt="CCFont CCFontMac Screenshot"></a></p><h3 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h3><p><a href="https://github.com/ccworld1000/CCFont/blob/master/CCFontiOS.gif?raw=true" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCFont/raw/master/CCFontiOS.gif?raw=true" alt="CCFont CCFontiOS Screenshot"></a></p><h2 id="CCFont"><a href="#CCFont" class="headerlink" title="CCFont"></a>CCFont</h2><p>CCFont 简单支持 machosx 与 iOS, 可以简单取代 NSFont 或者 UIFont.</p><h2 id="CCColor"><a href="#CCColor" class="headerlink" title="CCColor"></a>CCColor</h2><p>CCColor 单支持 machosx 与 iOS, 可以简单取代 NSColor 或者 UIColor 十六进制字符串.</p><h2 id="Podfile"><a href="#Podfile" class="headerlink" title="Podfile"></a>Podfile</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod &apos;CCFont&apos;</span><br></pre></td></tr></table></figure><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;CCUtilities.h&gt;</span><br></pre></td></tr></table></figure><h1 id="或"><a href="#或" class="headerlink" title="或"></a>或</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;CCFont/CCUtilities.h&gt;</span><br></pre></td></tr></table></figure><h1 id="演示代码"><a href="#演示代码" class="headerlink" title="演示代码"></a>演示代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">    HSView *p = superView;</span><br><span class="line">    __block NSUInteger index = 0;</span><br><span class="line">    </span><br><span class="line">    CGFloat space, height, width;</span><br><span class="line">    space = height = 40;</span><br><span class="line">    width = 400;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    dispatch_async(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">        while (index &lt; 10) &#123;</span><br><span class="line">            NSInteger i = 10 + index++;</span><br><span class="line">            </span><br><span class="line">            NSString *leftText = [NSString stringWithFormat:@&quot;L : CCFont %ld&quot;,  i];</span><br><span class="line">            NSString *rightText = [NSString stringWithFormat:@&quot;R : CCFont %ld&quot;,  i];</span><br><span class="line">            </span><br><span class="line">#if TARGET_OS_IPHONE || TARGET_IPHONE_SIMULATOR</span><br><span class="line">            UILabel *l = [UILabel new];</span><br><span class="line">            UILabel *r = [UILabel new];</span><br><span class="line">            l.text = leftText;</span><br><span class="line">            r.text = rightText;</span><br><span class="line">#else</span><br><span class="line">            NSTextField *l = [NSTextField new];</span><br><span class="line">            NSTextField *r = [NSTextField new];</span><br><span class="line">            </span><br><span class="line">            l.stringValue = leftText;</span><br><span class="line">            r.stringValue = rightText;</span><br><span class="line">#endif</span><br><span class="line">            </span><br><span class="line">            l.font = [CCFont systemFontOfSize: i];</span><br><span class="line">            r.font = [CCFont systemFontOfSize: CCHalf(i)];</span><br><span class="line">            </span><br><span class="line">            if (index % 2) &#123;</span><br><span class="line">                l.textColor = [CCColor colorWithHexString:[NSString stringWithFormat:@&quot;%f%lx%lx&quot;, 255 / (index * 1.), index * 4, index * 8]];</span><br><span class="line">                r.textColor = [CCColor colorWithHexString:[NSString stringWithFormat:@&quot;%f%lx%lx&quot;, 255 / (index * 1.), index * 4, index * 8]];</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                l.textColor = [CCColor colorWithHexString:[NSString stringWithFormat:@&quot;%lx%x%lx&quot;, index * 4, 255, index * 8]];</span><br><span class="line">                r.textColor = [CCColor colorWithHexString:[NSString stringWithFormat:@&quot;%lx%x%lx&quot;, index * 4, 255, index * 8]];</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            l.frame = CGRectMake(CCHalf(space), index * height, CCHalf(width), height);</span><br><span class="line">            r.frame = CGRectMake(CCHalf(width + space), index * height, CCHalf(width), height);</span><br><span class="line">            </span><br><span class="line">            [p addSubview: l];</span><br><span class="line">            [p addSubview: r];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CCFont-for-iOS-amp-amp-OSX&quot;&gt;&lt;a href=&quot;#CCFont-for-iOS-amp-amp-OSX&quot; class=&quot;headerlink&quot; title=&quot;CCFont for iOS &amp;amp;&amp;amp; OSX&quot;&gt;&lt;/a&gt;CCFon
      
    
    </summary>
    
      <category term="iOS &amp;&amp; macOS" scheme="https://ccworld1000.github.io/categories/iOS-macOS/"/>
    
    
      <category term="iOS" scheme="https://ccworld1000.github.io/tags/iOS/"/>
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="macOS" scheme="https://ccworld1000.github.io/tags/macOS/"/>
    
      <category term="CCColor" scheme="https://ccworld1000.github.io/tags/CCColor/"/>
    
      <category term="color" scheme="https://ccworld1000.github.io/tags/color/"/>
    
      <category term="CCFont" scheme="https://ccworld1000.github.io/tags/CCFont/"/>
    
      <category term="Foundation" scheme="https://ccworld1000.github.io/tags/Foundation/"/>
    
      <category term="UIFont" scheme="https://ccworld1000.github.io/tags/UIFont/"/>
    
      <category term="NSFont" scheme="https://ccworld1000.github.io/tags/NSFont/"/>
    
      <category term="UIColor" scheme="https://ccworld1000.github.io/tags/UIColor/"/>
    
      <category term="NSColor" scheme="https://ccworld1000.github.io/tags/NSColor/"/>
    
      <category term="font" scheme="https://ccworld1000.github.io/tags/font/"/>
    
  </entry>
  
</feed>
