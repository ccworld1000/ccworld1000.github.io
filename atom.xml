<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ccworld1000</title>
  
  <subtitle>CC</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ccworld1000.github.io/"/>
  <updated>2019-05-04T02:55:47.000Z</updated>
  <id>https://ccworld1000.github.io/</id>
  
  <author>
    <name>CC</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CCFPSStatus show FPS status</title>
    <link href="https://ccworld1000.github.io/2019/05/04/CCFPSStatus-show-FPS-status/"/>
    <id>https://ccworld1000.github.io/2019/05/04/CCFPSStatus-show-FPS-status/</id>
    <published>2019-05-04T02:39:49.000Z</published>
    <updated>2019-05-04T02:55:47.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CCFPSStatus"><a href="#CCFPSStatus" class="headerlink" title="CCFPSStatus"></a>CCFPSStatus</h1><p><a href="https://github.com/ccworld1000/CCFPSStatus" target="_blank" rel="noopener">CCFPSStatus</a> show FPS status | Flexible location (Built-in on <a href="https://github.com/joggerplus/JPFPSStatus" target="_blank" rel="noopener">JPFPSStatus</a>, optimize and adjust it)</p><h2 id="Screenshots"><a href="#Screenshots" class="headerlink" title="Screenshots"></a>Screenshots</h2><p><img src="https://github.com/ccworld1000/CCFPSStatus/blob/master/fps.gif?raw=true" alt="CCFPSStatus fps"></p><h4 id="Podfile"><a href="#Podfile" class="headerlink" title="Podfile"></a>Podfile</h4><p>​<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">platform <span class="symbol">:ios</span>, <span class="string">'9.0'</span></span><br><span class="line">pod <span class="string">'CCFPSStatus'</span></span><br><span class="line">​</span><br></pre></td></tr></table></figure></p><h4 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h4><p>Note：Use CCFPSStatus in DEBUG mode</p><p>add the code in AppDelegate.m    </p><pre>#import "CCFPSStatus.h"- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {    // Override point for customization after application launch.#if defined(DEBUG)||defined(_DEBUG)    [[CCFPSStatus sharedInstance] open];#endif    return YES;}</pre><pre>#if defined(DEBUG)||defined(_DEBUG)    [[CCFPSStatus sharedInstance] openWithHandler:^(NSInteger fpsValue) {        NSLog(@"fpsvalue %@",@(fpsValue));    }];#endif</pre><pre>#if defined(DEBUG)||defined(_DEBUG)    [[CCFPSStatus sharedInstance] close];#endif</pre><h4 id="Licenses"><a href="#Licenses" class="headerlink" title="Licenses"></a>Licenses</h4><p>All source code is licensed under the <a href="https://github.com/ccworld1000/CCFPSStatus/blob/master/LICENSE" target="_blank" rel="noopener">MIT License</a>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CCFPSStatus&quot;&gt;&lt;a href=&quot;#CCFPSStatus&quot; class=&quot;headerlink&quot; title=&quot;CCFPSStatus&quot;&gt;&lt;/a&gt;CCFPSStatus&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ccworl
      
    
    </summary>
    
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="CCFPSStatus" scheme="https://ccworld1000.github.io/tags/CCFPSStatus/"/>
    
      <category term="fps" scheme="https://ccworld1000.github.io/tags/fps/"/>
    
      <category term="FPSStatus" scheme="https://ccworld1000.github.io/tags/FPSStatus/"/>
    
      <category term="FPS-Status" scheme="https://ccworld1000.github.io/tags/FPS-Status/"/>
    
      <category term="JPFPSStatus" scheme="https://ccworld1000.github.io/tags/JPFPSStatus/"/>
    
      <category term="ios" scheme="https://ccworld1000.github.io/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>netural style &amp; AI effect [神经网络风格画 &amp; AI效果]</title>
    <link href="https://ccworld1000.github.io/2018/12/12/netural-style-AI-effect-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E9%A3%8E%E6%A0%BC%E7%94%BB-AI%E6%95%88%E6%9E%9C/"/>
    <id>https://ccworld1000.github.io/2018/12/12/netural-style-AI-effect-神经网络风格画-AI效果/</id>
    <published>2018-12-12T14:03:43.000Z</published>
    <updated>2018-12-12T14:33:17.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Scene1-CCStyle-amp-Butterfly"><a href="#Scene1-CCStyle-amp-Butterfly" class="headerlink" title="Scene1: CCStyle &amp;  Butterfly"></a>Scene1: CCStyle &amp;  <a href="https://github.com/ccworld1000/CCStyle/tree/master/butterfly" target="_blank" rel="noopener">Butterfly</a></h2><h2 id="Hundreds-of-pictures-have-been-generated-This-is-the-best-set-of-pictures-Material-used-to-shoot-butterflies"><a href="#Hundreds-of-pictures-have-been-generated-This-is-the-best-set-of-pictures-Material-used-to-shoot-butterflies" class="headerlink" title="Hundreds of pictures have been generated. This is the best set of pictures. Material used to shoot butterflies."></a>Hundreds of pictures have been generated. This is the best set of pictures. Material used to shoot butterflies.</h2><h2 id="In-most-cases-the-effect-of-the-generated-images-is-not-very-ideal"><a href="#In-most-cases-the-effect-of-the-generated-images-is-not-very-ideal" class="headerlink" title="In most cases, the effect of the generated images is not very ideal."></a>In most cases, the effect of the generated images is not very ideal.</h2><p><img src="https://raw.githubusercontent.com/ccworld1000/CCStyle/master/butterfly/ccstlye_1.jpg" alt="ccstlye_1.jpg"></p><p><img src="https://raw.githubusercontent.com/ccworld1000/CCStyle/master/butterfly/ccstlye_2.jpg" alt="ccstlye_2.jpg"></p><p><img src="https://raw.githubusercontent.com/ccworld1000/CCStyle/master/butterfly/ccstlye_3.jpg" alt="ccstlye_3.jpg"></p><p><img src="https://raw.githubusercontent.com/ccworld1000/CCStyle/master/butterfly/ccstlye_4.jpg" alt="ccstlye_4.jpg"></p><p><img src="https://raw.githubusercontent.com/ccworld1000/CCStyle/master/butterfly/ccstlye_5.jpg" alt="ccstlye_5.jpg"></p><p><img src="https://raw.githubusercontent.com/ccworld1000/CCStyle/master/butterfly/ccstlye_6.jpg" alt="ccstlye_6.jpg"></p><p><img src="https://raw.githubusercontent.com/ccworld1000/CCStyle/master/butterfly/ccstlye_7.jpg" alt="ccstlye_7.jpg"></p><p><img src="https://raw.githubusercontent.com/ccworld1000/CCStyle/master/butterfly/ccstlye_8.jpg" alt="ccstlye_8.jpg"></p><p><img src="https://raw.githubusercontent.com/ccworld1000/CCStyle/master/butterfly/ccstlye_9.jpg" alt="ccstlye_9.jpg"></p><h2 id="Scene2-Flower"><a href="#Scene2-Flower" class="headerlink" title="Scene2: Flower"></a>Scene2: Flower</h2><h2 id="Discrimination-of-Flowers-Using-Existing-AI-Model"><a href="#Discrimination-of-Flowers-Using-Existing-AI-Model" class="headerlink" title="Discrimination of Flowers Using Existing AI Model."></a>Discrimination of Flowers Using Existing AI Model.</h2><h2 id="The-main-first-picture-was-actually-a-lotus-flower-but-it-was-identified-as-a-cyclamen"><a href="#The-main-first-picture-was-actually-a-lotus-flower-but-it-was-identified-as-a-cyclamen" class="headerlink" title="The main first picture was actually a lotus flower, but it was identified as a cyclamen."></a>The main first picture was actually a lotus flower, but it was identified as a cyclamen.</h2><p><img src="https://raw.githubusercontent.com/ccworld1000/CCFlowerDemo/master/Screenshots/RightWrong.png" alt="flower compare"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Scene1-CCStyle-amp-Butterfly&quot;&gt;&lt;a href=&quot;#Scene1-CCStyle-amp-Butterfly&quot; class=&quot;headerlink&quot; title=&quot;Scene1: CCStyle &amp;amp;  Butterfly&quot;&gt;&lt;/
      
    
    </summary>
    
      <category term="AI" scheme="https://ccworld1000.github.io/categories/AI/"/>
    
    
      <category term="CCStyle" scheme="https://ccworld1000.github.io/tags/CCStyle/"/>
    
      <category term="AI" scheme="https://ccworld1000.github.io/tags/AI/"/>
    
      <category term="netural style" scheme="https://ccworld1000.github.io/tags/netural-style/"/>
    
      <category term="netural art" scheme="https://ccworld1000.github.io/tags/netural-art/"/>
    
      <category term="神经网络" scheme="https://ccworld1000.github.io/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
      <category term="AI效果" scheme="https://ccworld1000.github.io/tags/AI%E6%95%88%E6%9E%9C/"/>
    
      <category term="ml" scheme="https://ccworld1000.github.io/tags/ml/"/>
    
      <category term="coreml" scheme="https://ccworld1000.github.io/tags/coreml/"/>
    
      <category term="deep-learning" scheme="https://ccworld1000.github.io/tags/deep-learning/"/>
    
      <category term="machine-learning" scheme="https://ccworld1000.github.io/tags/machine-learning/"/>
    
      <category term="dl" scheme="https://ccworld1000.github.io/tags/dl/"/>
    
  </entry>
  
  <entry>
    <title>CCColor Simple and flexible color color conversion module for Raku Perl 6</title>
    <link href="https://ccworld1000.github.io/2018/11/20/CCColor-Simple-and-flexible-color-color-conversion-module-for-Raku-Perl-6/"/>
    <id>https://ccworld1000.github.io/2018/11/20/CCColor-Simple-and-flexible-color-color-conversion-module-for-Raku-Perl-6/</id>
    <published>2018-11-20T13:51:11.000Z</published>
    <updated>2018-12-19T15:35:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCColor"><a href="#CCColor" class="headerlink" title="CCColor"></a><a href="https://github.com/ccworld1000/CCColor" target="_blank" rel="noopener">CCColor</a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Simple and flexible color color conversion module for Raku Perl 6 , </span><br><span class="line">easy-to-use simple learning.</span><br></pre></td></tr></table></figure><p>## </p><h2 id="HEX-Color-use-CCColor"><a href="#HEX-Color-use-CCColor" class="headerlink" title="HEX Color (use CCColor)"></a>HEX Color (use CCColor)</h2><p><img src="https://raw.githubusercontent.com/ccworld1000/CCColor/master/doc/screenshot/colors.svg?sanitize=true" alt="colors"></p><p>## </p><h2 id="See-test"><a href="#See-test" class="headerlink" title="See test"></a>See test</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> CCColor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> @list =</span><br><span class="line">(</span><br><span class="line"><span class="string">"   #FFFEA963 "</span>,</span><br><span class="line"><span class="string">"   #FF FE A9 63 "</span>,</span><br><span class="line"><span class="string">"   #FF # FE #   A9 #     63 "</span>,</span><br><span class="line"><span class="string">"   #"</span>,</span><br><span class="line"><span class="string">"   #1"</span>,</span><br><span class="line"><span class="string">"   #123"</span>,</span><br><span class="line"><span class="string">"   #FFH"</span>,</span><br><span class="line"><span class="string">"   #FHF"</span>,</span><br><span class="line"><span class="string">"   #1234"</span>,</span><br><span class="line"><span class="string">"   #12345"</span>,</span><br><span class="line"><span class="string">"   #FFEE5"</span>,</span><br><span class="line"><span class="string">"   #FFEE56"</span>,</span><br><span class="line"><span class="string">"   #FFEE56A"</span>,</span><br><span class="line"><span class="string">"   #FFEE56AH"</span>,</span><br><span class="line"><span class="string">"   #FFEE56AA"</span>,</span><br><span class="line"><span class="string">"   #FFEE56AA11"</span>,</span><br><span class="line"><span class="string">"   #FFEE56AAFF11"</span>,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> @list -&gt; $color &#123;</span><br><span class="line">  <span class="keyword">my</span> ($r, $g, $b, $a) = hex2rgba($color);</span><br><span class="line">  <span class="keyword">say</span> <span class="string">"$r, $g, $b, $a"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Call test/test.p6</p><p><a href="https://raw.githubusercontent.com/ccworld1000/CCColor/master/doc/screenshot/test.png" target="_blank" rel="noopener"><img src="https://raw.githubusercontent.com/ccworld1000/CCColor/master/doc/screenshot/test.png" alt="test"></a></p><p>## </p><h2 id="Local-installation-and-unloading"><a href="#Local-installation-and-unloading" class="headerlink" title="Local installation and unloading"></a>Local installation and unloading</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zef install .</span><br><span class="line">zef uninstall CCColor</span><br></pre></td></tr></table></figure><p>## </p><h2 id="Network-install"><a href="#Network-install" class="headerlink" title="Network install"></a>Network install</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zef update</span><br><span class="line">zef install CCColor</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCColor&quot;&gt;&lt;a href=&quot;#CCColor&quot; class=&quot;headerlink&quot; title=&quot;CCColor&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ccworld1000/CCColor&quot; target=&quot;_blank&quot; 
      
    
    </summary>
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/categories/Perl-6/"/>
    
    
      <category term="CCColor" scheme="https://ccworld1000.github.io/tags/CCColor/"/>
    
      <category term="draw" scheme="https://ccworld1000.github.io/tags/draw/"/>
    
      <category term="pie" scheme="https://ccworld1000.github.io/tags/pie/"/>
    
      <category term="line" scheme="https://ccworld1000.github.io/tags/line/"/>
    
      <category term="graphics" scheme="https://ccworld1000.github.io/tags/graphics/"/>
    
      <category term="chart" scheme="https://ccworld1000.github.io/tags/chart/"/>
    
      <category term="color" scheme="https://ccworld1000.github.io/tags/color/"/>
    
      <category term="svg" scheme="https://ccworld1000.github.io/tags/svg/"/>
    
      <category term="raku" scheme="https://ccworld1000.github.io/tags/raku/"/>
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/tags/Perl-6/"/>
    
      <category term="perl6" scheme="https://ccworld1000.github.io/tags/perl6/"/>
    
      <category term="Perl 5" scheme="https://ccworld1000.github.io/tags/Perl-5/"/>
    
      <category term="Perl" scheme="https://ccworld1000.github.io/tags/Perl/"/>
    
  </entry>
  
  <entry>
    <title>Simple draw chart for Perl 6</title>
    <link href="https://ccworld1000.github.io/2018/11/12/Simple-draw-chart-for-Perl-6/"/>
    <id>https://ccworld1000.github.io/2018/11/12/Simple-draw-chart-for-Perl-6/</id>
    <published>2018-11-12T14:39:02.000Z</published>
    <updated>2018-11-12T14:44:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Simple-draw-chart-for-Perl-6-easy-to-use-simple-learning"><a href="#Simple-draw-chart-for-Perl-6-easy-to-use-simple-learning" class="headerlink" title="Simple draw chart for Perl 6 , easy-to-use simple learning."></a>Simple draw chart for Perl 6 , easy-to-use simple learning.</h2><h2 id="Local-installation-and-unloading"><a href="#Local-installation-and-unloading" class="headerlink" title="Local installation and unloading"></a>Local installation and unloading</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zef install .</span><br><span class="line">zef uninstall CCChart</span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2><h2 id="Network-install"><a href="#Network-install" class="headerlink" title="Network install"></a>Network install</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zef update</span><br><span class="line">zef install CCChart</span><br></pre></td></tr></table></figure><h2 id="-1"><a href="#-1" class="headerlink" title=" "></a> </h2><h2 id="CCChart-pie"><a href="#CCChart-pie" class="headerlink" title="CCChart pie"></a>CCChart pie</h2><p><img src="https://raw.githubusercontent.com/ccworld1000/CCChart/master//doc/screenshot/default.png" alt="CCChart pie"></p><p>## </p><h2 id="CCChart-lines"><a href="#CCChart-lines" class="headerlink" title="CCChart lines"></a>CCChart lines</h2><p><img src="https://raw.githubusercontent.com/ccworld1000/CCChart/master//doc/screenshot/default_lines.png" alt="CCChart pie"></p><p>## </p><h2 id="CCChart-test"><a href="#CCChart-test" class="headerlink" title="CCChart test"></a>CCChart test</h2><p>The call will generate a default “default.png” in the command line execution directory.</p><p><img src="https://raw.githubusercontent.com/ccworld1000/CCChart/master/doc/screenshot/test.png" alt="CCChart test"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Simple-draw-chart-for-Perl-6-easy-to-use-simple-learning&quot;&gt;&lt;a href=&quot;#Simple-draw-chart-for-Perl-6-easy-to-use-simple-learning&quot; class=
      
    
    </summary>
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/categories/Perl-6/"/>
    
    
      <category term="draw" scheme="https://ccworld1000.github.io/tags/draw/"/>
    
      <category term="pie" scheme="https://ccworld1000.github.io/tags/pie/"/>
    
      <category term="line" scheme="https://ccworld1000.github.io/tags/line/"/>
    
      <category term="graphics" scheme="https://ccworld1000.github.io/tags/graphics/"/>
    
      <category term="chart" scheme="https://ccworld1000.github.io/tags/chart/"/>
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/tags/Perl-6/"/>
    
      <category term="perl6" scheme="https://ccworld1000.github.io/tags/perl6/"/>
    
      <category term="Perl 5" scheme="https://ccworld1000.github.io/tags/Perl-5/"/>
    
      <category term="Perl" scheme="https://ccworld1000.github.io/tags/Perl/"/>
    
      <category term="CCLog" scheme="https://ccworld1000.github.io/tags/CCLog/"/>
    
      <category term="CCChart" scheme="https://ccworld1000.github.io/tags/CCChart/"/>
    
      <category term="png" scheme="https://ccworld1000.github.io/tags/png/"/>
    
      <category term="Cairo" scheme="https://ccworld1000.github.io/tags/Cairo/"/>
    
  </entry>
  
  <entry>
    <title>CCLog Simple and lightweight cross-platform logs</title>
    <link href="https://ccworld1000.github.io/2018/11/01/CCLog-Simple-and-lightweight-cross-platform-logs/"/>
    <id>https://ccworld1000.github.io/2018/11/01/CCLog-Simple-and-lightweight-cross-platform-logs/</id>
    <published>2018-11-01T14:41:45.000Z</published>
    <updated>2018-11-01T14:47:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCLog"><a href="#CCLog" class="headerlink" title="CCLog"></a>CCLog</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Simple and lightweight cross-platform logs,</span><br><span class="line">easy-to-use simple learning,</span><br><span class="line">and support for multiple languages,</span><br><span class="line">such as C, C++, Perl 6, shell, Objective-C</span><br></pre></td></tr></table></figure><p>## </p><h2 id="Perl-6"><a href="#Perl-6" class="headerlink" title="Perl 6"></a>Perl 6</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">There are 2 (CCLog &amp; CCLogFull) ways of binding.</span><br></pre></td></tr></table></figure><p>Call CCLog.pm6</p><p><a href="https://github.com/ccworld1000/CCLog/blob/master/CCLog/doc/sceenshot/short_perl6.png" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCLog/raw/master/CCLog/doc/sceenshot/short_perl6.png" alt="short_perl6"></a></p><p>Call CCLogFull.pm6</p><p><a href="https://github.com/ccworld1000/CCLog/blob/master/CCLog/doc/sceenshot/full_perl6.png" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCLog/raw/master/CCLog/doc/sceenshot/full_perl6.png" alt="full_perl6"></a></p><p>## </p><h2 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Provide simple commands. fg: </span><br><span class="line">ccnormal</span><br><span class="line">ccwarning</span><br><span class="line">ccerror</span><br><span class="line">cctimer</span><br><span class="line">ccloop</span><br><span class="line">ccthread</span><br><span class="line">ccprint</span><br><span class="line">ccsay</span><br><span class="line">ccdie</span><br><span class="line">ccnetwork</span><br><span class="line"></span><br><span class="line">These commands are automatically installed locally and can be called directly.</span><br></pre></td></tr></table></figure><p>Call shell <a href="https://github.com/ccworld1000/CCLog/blob/master/CCLog/doc/sceenshot/shell.png" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCLog/raw/master/CCLog/doc/sceenshot/shell.png" alt="shell"></a></p><p>## </p><h2 id="C-amp-amp-C-amp-amp-Objective-C"><a href="#C-amp-amp-C-amp-amp-Objective-C" class="headerlink" title="C &amp;&amp; C++ &amp;&amp; Objective-C"></a>C &amp;&amp; C++ &amp;&amp; Objective-C</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You can use C library or C source (CCLog.h CCLog.c) code directly.</span><br></pre></td></tr></table></figure><p>Call C &amp;&amp; C++ &amp;&amp; Objective-C <a href="https://github.com/ccworld1000/CCLog/blob/master/CCLog/doc/sceenshot/c.png" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCLog/raw/master/CCLog/doc/sceenshot/c.png" alt="c"></a></p><p>## </p><h2 id="Objective-C"><a href="#Objective-C" class="headerlink" title="Objective-C"></a>Objective-C</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Objective-C can call C directly, Or follow other ways to import.</span><br></pre></td></tr></table></figure><p>## </p><h2 id="Local-installation-and-unloading"><a href="#Local-installation-and-unloading" class="headerlink" title="Local installation and unloading"></a>Local installation and unloading</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zef install .</span><br><span class="line">zef uninstall CCLog</span><br></pre></td></tr></table></figure><p>## </p><h2 id="Network-install"><a href="#Network-install" class="headerlink" title="Network install"></a>Network install</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zef update</span><br><span class="line">zef install CCLog</span><br></pre></td></tr></table></figure><p>## </p><h2 id="Check-if-the-installation-is-successful"><a href="#Check-if-the-installation-is-successful" class="headerlink" title="Check if the installation is successful"></a>Check if the installation is successful</h2><p>The installation may be as follows <a href="https://github.com/ccworld1000/CCLog/blob/master/CCLog/doc/sceenshot/check_ok.png" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCLog/raw/master/CCLog/doc/sceenshot/check_ok.png" alt="check_ok"></a></p><p>Installation failure may be as follows, you can try again <a href="https://github.com/ccworld1000/CCLog/blob/master/CCLog/doc/sceenshot/check_error.png" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCLog/raw/master/CCLog/doc/sceenshot/check_error.png" alt="check_error"></a></p><p>## </p><h2 id="Color-display-control"><a href="#Color-display-control" class="headerlink" title="Color display control"></a>Color display control</h2><p>Perl6 CCLog.pm6 call ccshowColor Perl6 CCLogFull.pm6 call CCLog_showColor C &amp;&amp; C++ &amp;&amp; Objective-C call CCLog_showColor<br> fg: <a href="https://github.com/ccworld1000/CCLog/blob/master/CCLog/doc/sceenshot/colorControl.png" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCLog/raw/master/CCLog/doc/sceenshot/colorControl.png" alt="colorControl"></a></p><p>## </p><h2 id="Tips-display-control"><a href="#Tips-display-control" class="headerlink" title="Tips display control"></a>Tips display control</h2><p>fg: <a href="https://github.com/ccworld1000/CCLog/blob/master/CCLog/doc/sceenshot/logTips.png" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCLog/raw/master/CCLog/doc/sceenshot/logTips.png" alt="logTips"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCLog&quot;&gt;&lt;a href=&quot;#CCLog&quot; class=&quot;headerlink&quot; title=&quot;CCLog&quot;&gt;&lt;/a&gt;CCLog&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/categories/Perl-6/"/>
    
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/tags/Perl-6/"/>
    
      <category term="perl6" scheme="https://ccworld1000.github.io/tags/perl6/"/>
    
      <category term="Perl 5" scheme="https://ccworld1000.github.io/tags/Perl-5/"/>
    
      <category term="Perl" scheme="https://ccworld1000.github.io/tags/Perl/"/>
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="CCLog" scheme="https://ccworld1000.github.io/tags/CCLog/"/>
    
      <category term="cclog" scheme="https://ccworld1000.github.io/tags/cclog/"/>
    
      <category term="logs" scheme="https://ccworld1000.github.io/tags/logs/"/>
    
      <category term="log" scheme="https://ccworld1000.github.io/tags/log/"/>
    
      <category term="cross-platform" scheme="https://ccworld1000.github.io/tags/cross-platform/"/>
    
      <category term="shell" scheme="https://ccworld1000.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Cairo 2D Graphics library binding for Perl 6</title>
    <link href="https://ccworld1000.github.io/2018/10/15/Cairo-2D-Graphics-library-binding-for-Perl-6/"/>
    <id>https://ccworld1000.github.io/2018/10/15/Cairo-2D-Graphics-library-binding-for-Perl-6/</id>
    <published>2018-10-15T15:19:47.000Z</published>
    <updated>2018-10-15T15:55:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Cairo-2D-Graphics-library-binding-for-Perl-6"><a href="#Cairo-2D-Graphics-library-binding-for-Perl-6" class="headerlink" title="Cairo 2D Graphics library binding for Perl 6"></a>Cairo 2D Graphics library binding for Perl 6</h1><h2 id="Synopsis"><a href="#Synopsis" class="headerlink" title="Synopsis"></a>Synopsis</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> Cairo;</span><br><span class="line"><span class="keyword">given</span> Cairo::Image.create(Cairo::FORMAT_ARGB32, <span class="number">128</span>, <span class="number">128</span>) &#123;</span><br><span class="line">    <span class="keyword">given</span> Cairo::Context.new($_) &#123;</span><br><span class="line">        .rgb(<span class="number">0</span>, <span class="number">0</span>.<span class="number">7</span>, <span class="number">0</span>.<span class="number">9</span>);</span><br><span class="line">        .rectangle(<span class="number">10</span>, <span class="number">10</span>, <span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">        .fill :preserve; .rgb(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        .stroke</span><br><span class="line">    &#125;;</span><br><span class="line">    .write_png(<span class="string">"foobar.png"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Native-Cairo-library"><a href="#Native-Cairo-library" class="headerlink" title="Native Cairo library"></a>Native Cairo library</h2><p>In order to use this module, native <code>Cairo</code> library is needed. See instructions at <a href="https://cairographics.org/download/" target="_blank" rel="noopener">https://cairographics.org/download/</a>.</p><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><p><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/arc-negative.png?raw=true" alt="arc-negative.png"></p><p>doc/screenshot/arc.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/arc.png?raw=true" alt="arc.png"></p><p>doc/screenshot/clip-image.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/clip-image.png?raw=true" alt="clip-image.png"></p><p>doc/screenshot/clip.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/clip.png?raw=true" alt="clip.png"></p><p>doc/screenshot/curve-rectangle.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/curve-rectangle.png?raw=true" alt="curve-rectangle.png"></p><p>doc/screenshot/curve_to.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/curve_to.png?raw=true" alt="curve_to.png"></p><p>doc/screenshot/dash.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/dash.png?raw=true" alt="dash.png"></p><p>doc/screenshot/fill-and-stroke.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/fill-and-stroke.png?raw=true" alt="fill-and-stroke.png"></p><p>doc/screenshot/fill-style.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/fill-style.png?raw=true" alt="fill-style.png"></p><p>doc/screenshot/gradient.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/gradient.png?raw=true" alt="gradient.png"></p><p>doc/screenshot/image-pattern.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/image-pattern.png?raw=true" alt="image-pattern.png"></p><p>doc/screenshot/image.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/image.png?raw=true" alt="image.png"></p><p>doc/screenshot/multi-page-pdf.pdf<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/multi-page-pdf.pdf" alt="multi-page-pdf.pdf"></p><p>doc/screenshot/multi-segment-caps.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/multi-segment-caps.png?raw=true" alt="multi-segment-caps.png"></p><p>doc/screenshot/rounded-rectangle.png<br><img src="https://github.com/ccworld1000/cairo-p6/blob/master/doc/screenshot/rounded-rectangle.png?raw=true" alt="rounded-rectangle.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Cairo-2D-Graphics-library-binding-for-Perl-6&quot;&gt;&lt;a href=&quot;#Cairo-2D-Graphics-library-binding-for-Perl-6&quot; class=&quot;headerlink&quot; title=&quot;Cair
      
    
    </summary>
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/categories/Perl-6/"/>
    
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/tags/Perl-6/"/>
    
      <category term="perl6" scheme="https://ccworld1000.github.io/tags/perl6/"/>
    
      <category term="Perl 5" scheme="https://ccworld1000.github.io/tags/Perl-5/"/>
    
      <category term="Perl" scheme="https://ccworld1000.github.io/tags/Perl/"/>
    
      <category term="cairo" scheme="https://ccworld1000.github.io/tags/cairo/"/>
    
      <category term="2D" scheme="https://ccworld1000.github.io/tags/2D/"/>
    
      <category term="graphic" scheme="https://ccworld1000.github.io/tags/graphic/"/>
    
  </entry>
  
  <entry>
    <title>Perl 6 architecture 层次架构体系</title>
    <link href="https://ccworld1000.github.io/2018/10/04/Perl-6-architecture-%E5%B1%82%E6%AC%A1%E6%9E%B6%E6%9E%84%E4%BD%93%E7%B3%BB/"/>
    <id>https://ccworld1000.github.io/2018/10/04/Perl-6-architecture-层次架构体系/</id>
    <published>2018-10-04T07:22:45.000Z</published>
    <updated>2018-10-04T07:27:17.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Perl-6-architecture-层次架构体系"><a href="#Perl-6-architecture-层次架构体系" class="headerlink" title="Perl 6 architecture 层次架构体系"></a>Perl 6 architecture 层次架构体系</h3><p><img src="https://raw.github.com/ccworld1000/CCArchitecture/master/6.svg?sanitize=true" alt="Perl 6 architecture "></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Perl-6-architecture-层次架构体系&quot;&gt;&lt;a href=&quot;#Perl-6-architecture-层次架构体系&quot; class=&quot;headerlink&quot; title=&quot;Perl 6 architecture 层次架构体系&quot;&gt;&lt;/a&gt;Perl 6 a
      
    
    </summary>
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/categories/Perl-6/"/>
    
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/tags/Perl-6/"/>
    
      <category term="perl6" scheme="https://ccworld1000.github.io/tags/perl6/"/>
    
      <category term="Perl 5" scheme="https://ccworld1000.github.io/tags/Perl-5/"/>
    
      <category term="Perl" scheme="https://ccworld1000.github.io/tags/Perl/"/>
    
      <category term="rakudo" scheme="https://ccworld1000.github.io/tags/rakudo/"/>
    
      <category term="VM" scheme="https://ccworld1000.github.io/tags/VM/"/>
    
      <category term="moarvm" scheme="https://ccworld1000.github.io/tags/moarvm/"/>
    
      <category term="nqp" scheme="https://ccworld1000.github.io/tags/nqp/"/>
    
      <category term="perl" scheme="https://ccworld1000.github.io/tags/perl/"/>
    
      <category term="perl6.org" scheme="https://ccworld1000.github.io/tags/perl6-org/"/>
    
  </entry>
  
  <entry>
    <title>CCSQLite Objective-C 封装的SQLite. 结合YapDatabase(key/value store) + FMDB</title>
    <link href="https://ccworld1000.github.io/2018/09/09/CCSQLite-Objective-C-%E5%B0%81%E8%A3%85%E7%9A%84SQLite-%E7%BB%93%E5%90%88YapDatabase-key-value-store-FMDB/"/>
    <id>https://ccworld1000.github.io/2018/09/09/CCSQLite-Objective-C-封装的SQLite-结合YapDatabase-key-value-store-FMDB/</id>
    <published>2018-09-09T01:25:05.000Z</published>
    <updated>2018-09-09T01:31:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CCSQLite-Objective-C-封装的SQLite-结合YapDatabase-key-value-store-FMDB"><a href="#CCSQLite-Objective-C-封装的SQLite-结合YapDatabase-key-value-store-FMDB" class="headerlink" title="CCSQLite Objective-C 封装的SQLite. 结合YapDatabase(key/value store) + FMDB."></a>CCSQLite Objective-C 封装的SQLite. 结合YapDatabase(key/value store) + FMDB.</h3><hr><h1 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h1><ul><li>转变 FMDB 到 ARC 模式</li><li>YapDatabase 键/值 store</li><li>CCSQLite 结合 FMDB 和 YapDatabase 键/值</li></ul><hr><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h3><ul><li>转变 FMDB 到 ARC 模式</li><li>YapDatabase 键/值 store</li><li>CCSQLite 结合 FMDB 和 YapDatabase 键/值</li><li>支持 OBJECT, JSON 到 键/值</li></ul><hr><hr><h1 id="缘由-amp-amp-为啥"><a href="#缘由-amp-amp-为啥" class="headerlink" title="缘由 &amp;&amp; 为啥"></a>缘由 &amp;&amp; 为啥</h1><hr><p>当我在写”HSCache [缓存处理方面]”, 想选择FMDB或者YapDatabase, 但是他们看起来不一样. 因此想结合YapDatabase(键/值 store) 与 FMDB, 于是 CCSQLite 在路上.</p><h3 id="大于版本-1-1-1调整变化"><a href="#大于版本-1-1-1调整变化" class="headerlink" title="大于版本 1.1.1调整变化"></a>大于版本 1.1.1调整变化</h3><hr><p><a href="https://github.com/ccworld1000/CCSQLite/blob/master/Documentation/MainAdjust.png?raw=true" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCSQLite/raw/master/Documentation/MainAdjust.png?raw=true" alt="CCSQLite CCSQLiteMac Screenshot"></a></p><h3 id="Podfile"><a href="#Podfile" class="headerlink" title="Podfile"></a>Podfile</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod &apos;CCSQLite&apos;</span><br></pre></td></tr></table></figure><hr><h3 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h3><h4 id="for-Objective-C"><a href="#for-Objective-C" class="headerlink" title="for Objective-C"></a>for Objective-C</h4><h5 id="see-CCSQLiteDemo"><a href="#see-CCSQLiteDemo" class="headerlink" title="see CCSQLiteDemo"></a>see CCSQLiteDemo</h5><h5 id="iOS-CCSQLiteiOSDemo"><a href="#iOS-CCSQLiteiOSDemo" class="headerlink" title="iOS CCSQLiteiOSDemo"></a>iOS CCSQLiteiOSDemo</h5><h5 id="OSX-CCSQLiteOSXDemo"><a href="#OSX-CCSQLiteOSXDemo" class="headerlink" title="OSX CCSQLiteOSXDemo"></a>OSX CCSQLiteOSXDemo</h5><h3 id="for-Swift-call-Objective-C"><a href="#for-Swift-call-Objective-C" class="headerlink" title="for Swift call Objective-C"></a>for Swift call Objective-C</h3><h5 id="iOS-CCSQLiteDataiOS"><a href="#iOS-CCSQLiteDataiOS" class="headerlink" title="iOS CCSQLiteDataiOS"></a>iOS CCSQLiteDataiOS</h5><h5 id="OSX-CCSQLiteDatamacOS"><a href="#OSX-CCSQLiteDatamacOS" class="headerlink" title="OSX CCSQLiteDatamacOS"></a>OSX CCSQLiteDatamacOS</h5><h3 id="演示代码"><a href="#演示代码" class="headerlink" title="演示代码"></a>演示代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;CCSQLite.h&gt;</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;CCSQLite.h&quot;</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"CCSQLite/CCSQLite.h"</span></span></span><br><span class="line">+ (<span class="keyword">void</span>) SQLiteTest &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"SQLiteTest"</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSString</span> *path = <span class="literal">nil</span>;</span><br><span class="line"><span class="meta">#if TARGET_OS_IPHONE || TARGET_IPHONE_SIMULATOR</span></span><br><span class="line">    path = [<span class="built_in">NSSearchPathForDirectoriesInDomains</span>(<span class="built_in">NSDocumentDirectory</span>,<span class="built_in">NSUserDomainMask</span>, <span class="literal">YES</span>)  lastObject];</span><br><span class="line"><span class="meta">#else</span></span><br><span class="line">    path = <span class="built_in">NSTemporaryDirectory</span>() ;</span><br><span class="line"><span class="meta">#endif</span></span><br><span class="line">    </span><br><span class="line">    path = [path stringByAppendingPathComponent:CCSQLiteTestDB];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ([[<span class="built_in">NSFileManager</span> defaultManager] fileExistsAtPath:path]) &#123;</span><br><span class="line">        [[<span class="built_in">NSFileManager</span> defaultManager] removeItemAtPath:path error: <span class="literal">nil</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    CCSQLite *SQLite = [CCSQLite databaseWithPath: path];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ([SQLite open]) &#123;</span><br><span class="line">        <span class="built_in">BOOL</span> result = [SQLite executeUpdate: <span class="string">@"create table if not exists t_student (id integer primary key autoincrement, name text not NULL, age integer not NULL);"</span>];</span><br><span class="line">        <span class="keyword">if</span> (result) &#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"create table t_student ok"</span>);</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"path : %@"</span>, path);</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    [SQLite executeUpdate:<span class="string">@"insert into t_student (name, age) values (?, ?);"</span>, <span class="string">@"cc test 0"</span>, @<span class="number">0</span>];</span><br><span class="line">    [SQLite executeUpdate:<span class="string">@"insert into t_student (name, age) values (?, ?);"</span>, <span class="string">@"cc test 1"</span>, @<span class="number">1</span>];</span><br><span class="line">    [SQLite executeUpdateWithFormat:<span class="string">@"insert into t_student (name, age) values (%@, %i);"</span>, <span class="string">@"cc test 2"</span>, <span class="number">2000</span>];</span><br><span class="line">    </span><br><span class="line"><span class="comment">//    [SQLite executeUpdate:@"delete from t_student where id = ?", @1];</span></span><br><span class="line">    </span><br><span class="line">    CCResultSet *resultSet = [SQLite executeQuery:<span class="string">@"select * from t_student;"</span>];</span><br><span class="line">    <span class="keyword">while</span> ([resultSet next]) &#123;</span><br><span class="line">        <span class="keyword">int</span> idNum = [resultSet intForColumn:<span class="string">@"id"</span>];</span><br><span class="line">        <span class="built_in">NSString</span> *name = [resultSet objectForColumnName:<span class="string">@"name"</span>];</span><br><span class="line">        <span class="keyword">int</span> age = [resultSet intForColumn:<span class="string">@"age"</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"id = %d name = %@ age = %d"</span>, idNum, name, age);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//    [SQLite executeUpdate:@"drop table if exists t_student;"];</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSString</span> *sql = <span class="string">@"create table bulktest1 (id integer primary key autoincrement, x text);"</span></span><br><span class="line">    <span class="string">"create table bulktest2 (id integer primary key autoincrement, y text);"</span></span><br><span class="line">    <span class="string">"create table bulktest3 (id integer primary key autoincrement, z text);"</span></span><br><span class="line">    <span class="string">"insert into bulktest1 (x) values ('XXX');"</span></span><br><span class="line">    <span class="string">"insert into bulktest2 (y) values ('YYY');"</span></span><br><span class="line">    <span class="string">"insert into bulktest3 (z) values ('ZZZ');"</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">BOOL</span> success = [SQLite executeStatements:sql];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (success) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"success"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    sql = <span class="string">@"select count(*) as count from bulktest1;"</span></span><br><span class="line">    <span class="string">"select count(*) as count from bulktest2;"</span></span><br><span class="line">    <span class="string">"select count(*) as count from bulktest3;"</span>;</span><br><span class="line">    </span><br><span class="line">    [SQLite executeStatements:sql withResultBlock:^<span class="keyword">int</span>(<span class="built_in">NSDictionary</span> *resultsDictionary) &#123;</span><br><span class="line">        <span class="built_in">NSInteger</span> count = [resultsDictionary[<span class="string">@"count"</span>] integerValue];</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"count = %ld"</span>, count);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">    [SQLite close];</span><br><span class="line">    </span><br><span class="line">    CCSQLiteQueue *queue = [CCSQLiteQueue databaseQueueWithPath:path];</span><br><span class="line">    </span><br><span class="line">    __block <span class="built_in">NSInteger</span> index = <span class="number">3000</span>;</span><br><span class="line">    [queue inDatabase:^(CCSQLite *db) &#123;</span><br><span class="line">        <span class="keyword">while</span> (index &lt; <span class="number">3100</span>) &#123;</span><br><span class="line">            index++;</span><br><span class="line">            [db executeUpdate:<span class="string">@"insert into t_student (name, age) values (?, ?);"</span>, [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"cc test inDatabase %ld"</span>, index], @(index)];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">    [queue inTransaction:^(CCSQLite *db, <span class="built_in">BOOL</span> *rollback) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"rollback NO"</span>);</span><br><span class="line">        <span class="keyword">while</span> (index &lt; <span class="number">3150</span>) &#123;</span><br><span class="line">            index++;</span><br><span class="line">            [db executeUpdate:<span class="string">@"insert into t_student (name, age) values (?, ?);"</span>, [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"cc test inTransaction %ld"</span>, index], @(index)];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">    [queue inTransaction:^(CCSQLite *db, <span class="built_in">BOOL</span> *rollback) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"rollback YES"</span>);</span><br><span class="line">        <span class="keyword">while</span> (index &lt; <span class="number">3200</span>) &#123;</span><br><span class="line">            index++;</span><br><span class="line">            [db executeUpdate:<span class="string">@"insert into t_student (name, age) values (?, ?);"</span>, [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"cc test inTransaction %ld"</span>, index], @(index)];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (index == <span class="number">3188</span>) &#123;</span><br><span class="line">                *rollback = <span class="literal">YES</span>;</span><br><span class="line">                <span class="keyword">return</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CCKeyValue-演示代码"><a href="#CCKeyValue-演示代码" class="headerlink" title="CCKeyValue 演示代码"></a>CCKeyValue 演示代码</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">CCKeyValue *kv = [CCKeyValue defaultKeyValueWithPath:path];</span><br><span class="line">kv.valueType = CCKeyValueTypeJson;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSData</span> * data = [<span class="built_in">NSData</span> dataWithContentsOfFile:[[<span class="built_in">NSBundle</span> mainBundle] pathForResource:<span class="string">@"CCJSON"</span> ofType:<span class="string">@"json"</span>]];</span><br><span class="line"></span><br><span class="line">[kv setObject:data key:<span class="string">@"jsonkey"</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">id</span> CCJSON =  [kv objectForKey:<span class="string">@"jsonkey"</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ([CCJSON isKindOfClass:[<span class="built_in">NSArray</span> <span class="keyword">class</span>]]) &#123;</span><br><span class="line">    <span class="built_in">NSArray</span> *list = CCJSON;</span><br><span class="line">    </span><br><span class="line">    [list enumerateObjectsUsingBlock:^(<span class="built_in">NSDictionary</span> *d, <span class="built_in">NSUInteger</span> idx, <span class="built_in">BOOL</span> * _Nonnull stop) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"%@\n"</span>, d);</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果 <a href="https://github.com/ccworld1000/CCSQLite/blob/master/Documentation/CCKeyValue.png?raw=true" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCSQLite/raw/master/Documentation/CCKeyValue.png?raw=true" alt="CCKeyValue Screenshot"></a></p><h3 id="Swift-调用-Objective-C"><a href="#Swift-调用-Objective-C" class="headerlink" title="Swift 调用 Objective-C"></a>Swift 调用 Objective-C</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">    <span class="comment">// Do any additional setup after loading the view, typically from a nib.</span></span><br><span class="line">    </span><br><span class="line">    <span class="type">CCSQLiteData</span>.writeList()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> list = <span class="type">CCSQLiteData</span>.readList() &#123;</span><br><span class="line">        <span class="built_in">print</span>(list)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>### </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;CCSQLite-Objective-C-封装的SQLite-结合YapDatabase-key-value-store-FMDB&quot;&gt;&lt;a href=&quot;#CCSQLite-Objective-C-封装的SQLite-结合YapDatabase-key-value-
      
    
    </summary>
    
      <category term="iOS &amp;&amp; macOS" scheme="https://ccworld1000.github.io/categories/iOS-macOS/"/>
    
    
      <category term="iOS" scheme="https://ccworld1000.github.io/tags/iOS/"/>
    
      <category term="macOS" scheme="https://ccworld1000.github.io/tags/macOS/"/>
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="CCSQLite" scheme="https://ccworld1000.github.io/tags/CCSQLite/"/>
    
      <category term="FMDB" scheme="https://ccworld1000.github.io/tags/FMDB/"/>
    
      <category term="YapDatabase" scheme="https://ccworld1000.github.io/tags/YapDatabase/"/>
    
      <category term="database" scheme="https://ccworld1000.github.io/tags/database/"/>
    
      <category term="JSON" scheme="https://ccworld1000.github.io/tags/JSON/"/>
    
      <category term="key" scheme="https://ccworld1000.github.io/tags/key/"/>
    
      <category term="value" scheme="https://ccworld1000.github.io/tags/value/"/>
    
      <category term="cache" scheme="https://ccworld1000.github.io/tags/cache/"/>
    
      <category term="sqlite" scheme="https://ccworld1000.github.io/tags/sqlite/"/>
    
      <category term="swift" scheme="https://ccworld1000.github.io/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>CCDebug 一种灵活的、轻量级的、可扩展的、可定制的日志调试 支持iOS与macOS</title>
    <link href="https://ccworld1000.github.io/2018/09/08/CCDebug-%E4%B8%80%E7%A7%8D%E7%81%B5%E6%B4%BB%E7%9A%84%E3%80%81%E8%BD%BB%E9%87%8F%E7%BA%A7%E7%9A%84%E3%80%81%E5%8F%AF%E6%89%A9%E5%B1%95%E7%9A%84%E3%80%81%E5%8F%AF%E5%AE%9A%E5%88%B6%E7%9A%84%E6%97%A5%E5%BF%97%E8%B0%83%E8%AF%95-%E6%94%AF%E6%8C%81iOS%E4%B8%8EmacOS/"/>
    <id>https://ccworld1000.github.io/2018/09/08/CCDebug-一种灵活的、轻量级的、可扩展的、可定制的日志调试-支持iOS与macOS/</id>
    <published>2018-09-08T10:19:24.000Z</published>
    <updated>2018-09-08T10:56:33.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CCDebug-iOS-amp-amp-OSX"><a href="#CCDebug-iOS-amp-amp-OSX" class="headerlink" title="CCDebug [ iOS &amp;&amp; OSX ]"></a>CCDebug [ iOS &amp;&amp; OSX ]</h1><p>CCDebug : 一种灵活的、轻量级的、可扩展的、可定制的日志调试  支持  iOS &amp;&amp; OSX</p><p>=======================</p><p><a href="https://github.com/ccworld1000/CCDebug.git" target="_blank" rel="noopener">https://github.com/ccworld1000/CCDebug.git</a></p><h2 id="首选安装-XcodeColors"><a href="#首选安装-XcodeColors" class="headerlink" title="首选安装 XcodeColors"></a>首选安装 XcodeColors</h2><p><a href="https://github.com/robbiehanson/XcodeColors" target="_blank" rel="noopener">https://github.com/robbiehanson/XcodeColors</a></p><h4 id="支持-Xcode-4-5-6-7-8-9-amp-10"><a href="#支持-Xcode-4-5-6-7-8-9-amp-10" class="headerlink" title="支持 Xcode 4, 5, 6, 7, 8 , 9 &amp; 10"></a>支持 Xcode 4, 5, 6, 7, 8 , 9 &amp; 10</h4><h2 id="bug-或建议"><a href="#bug-或建议" class="headerlink" title="bug 或建议"></a>bug 或建议</h2><p>G Email ： <a href="mailto:ccworld1000@gmail.com" target="_blank" rel="noopener">ccworld1000@gmail.com</a></p><h2 id="Podfile"><a href="#Podfile" class="headerlink" title="Podfile"></a>Podfile</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod &apos;CCDebug&apos;</span><br></pre></td></tr></table></figure><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">+ (void) logTest &#123;</span><br><span class="line">    [CCDebug debugLogSwitch: YES];</span><br><span class="line">    </span><br><span class="line">    [CCDebug enableNSLogPrefix: NO];</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     *  colorRGBEnable | [XcodeColors installation] https://github.com/robbiehanson/XcodeColors</span><br><span class="line">     *  screenshot https://github.com/ccworld1000/CCDebug</span><br><span class="line">     *  @param showColor showColor description</span><br><span class="line">     */</span><br><span class="line">    [CCDebug colorRGBEnable: YES];</span><br><span class="line">    </span><br><span class="line">    [CCDebug warningCustomColors:60 green:120 blue:60];</span><br><span class="line">    </span><br><span class="line">    CCDebugWarningPrint(@&quot;cc warning&quot;);</span><br><span class="line">    CCDebugErrorPrint(@&quot;cc error&quot;);</span><br><span class="line">    CCDebugPrint(@&quot;cc log&quot;);</span><br><span class="line">    </span><br><span class="line">    CCDebugTimerPrint(@&quot;NStimer test&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="截屏"><a href="#截屏" class="headerlink" title="截屏"></a>截屏</h2><h3 id="OSX"><a href="#OSX" class="headerlink" title="OSX"></a>OSX</h3><p><a href="https://github.com/ccworld1000/CCDebug/blob/master/Documentation/OSXRunning.png?raw=true" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCDebug/raw/master/Documentation/OSXRunning.png?raw=true" alt="CCDebug Mac Screenshot"></a></p><h3 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h3><p><a href="https://github.com/ccworld1000/CCDebug/blob/master/Documentation/iOSRunning.png?raw=true" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCDebug/raw/master/Documentation/iOSRunning.png?raw=true" alt="CCDebug iOS Screenshot"></a></p><h3 id="OSX-Xcode-8-3-2"><a href="#OSX-Xcode-8-3-2" class="headerlink" title="OSX Xcode_8.3.2"></a>OSX Xcode_8.3.2</h3><p><a href="https://github.com/ccworld1000/CCDebug/blob/master/Documentation/OSXRunning_Xcode_8.3.2.png?raw=true" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCDebug/raw/master/Documentation/OSXRunning_Xcode_8.3.2.png?raw=true" alt="CCDebug Mac Xcode_8.3.2 Screenshot"></a></p><h3 id="iOS-Xcode-8-3-2"><a href="#iOS-Xcode-8-3-2" class="headerlink" title="iOS Xcode_8.3.2"></a>iOS Xcode_8.3.2</h3><p><a href="https://github.com/ccworld1000/CCDebug/blob/master/Documentation/iOSRunning_Xcode_8.3.2.png?raw=true" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCDebug/raw/master/Documentation/iOSRunning_Xcode_8.3.2.png?raw=true" alt="CCDebug iOS Xcode_8.3.2 Screenshot"></a></p><h2 id="CCDebug"><a href="#CCDebug" class="headerlink" title="CCDebug"></a>CCDebug</h2><p>CCDebug 简单支持 machosx 与 iOS.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CCDebug-iOS-amp-amp-OSX&quot;&gt;&lt;a href=&quot;#CCDebug-iOS-amp-amp-OSX&quot; class=&quot;headerlink&quot; title=&quot;CCDebug [ iOS &amp;amp;&amp;amp; OSX ]&quot;&gt;&lt;/a&gt;CCDebug [ 
      
    
    </summary>
    
      <category term="iOS &amp;&amp; macOS" scheme="https://ccworld1000.github.io/categories/iOS-macOS/"/>
    
    
      <category term="color" scheme="https://ccworld1000.github.io/tags/color/"/>
    
      <category term="CCDebug" scheme="https://ccworld1000.github.io/tags/CCDebug/"/>
    
      <category term="debug" scheme="https://ccworld1000.github.io/tags/debug/"/>
    
      <category term="logging" scheme="https://ccworld1000.github.io/tags/logging/"/>
    
      <category term="NSLog" scheme="https://ccworld1000.github.io/tags/NSLog/"/>
    
      <category term="XcodeColors" scheme="https://ccworld1000.github.io/tags/XcodeColors/"/>
    
      <category term="Xcode" scheme="https://ccworld1000.github.io/tags/Xcode/"/>
    
      <category term="iOS" scheme="https://ccworld1000.github.io/tags/iOS/"/>
    
      <category term="macOS" scheme="https://ccworld1000.github.io/tags/macOS/"/>
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>CCFont : A simple iOS and OS X CCFont replace [UIFont, NSFont], CCColor replace [UIColor, NSColor]</title>
    <link href="https://ccworld1000.github.io/2018/09/01/CCFont-A-simple-iOS-and-OS-X-CCFont-replace-UIFont-NSFont-CCColor-replace-UIColor-NSColor/"/>
    <id>https://ccworld1000.github.io/2018/09/01/CCFont-A-simple-iOS-and-OS-X-CCFont-replace-UIFont-NSFont-CCColor-replace-UIColor-NSColor/</id>
    <published>2018-09-01T04:59:17.000Z</published>
    <updated>2018-09-01T05:04:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CCFont-for-iOS-amp-amp-OSX"><a href="#CCFont-for-iOS-amp-amp-OSX" class="headerlink" title="CCFont for iOS &amp;&amp; OSX"></a>CCFont for iOS &amp;&amp; OSX</h1><p>=======================</p><p><a href="https://github.com/ccworld1000/CCFont/blob/master/README.md" target="_blank" rel="noopener">英文README</a></p><p>简单支持 MAC OSX [&gt;=10.9] 和 iOS [&gt;=8]</p><p><a href="https://github.com/ccworld1000/CCFont.git" target="_blank" rel="noopener">https://github.com/ccworld1000/CCFont.git</a></p><h2 id="截图-1"><a href="#截图-1" class="headerlink" title="截图 1"></a>截图 1</h2><h3 id="OSX"><a href="#OSX" class="headerlink" title="OSX"></a>OSX</h3><p><a href="https://github.com/ccworld1000/CCFont/blob/master/CCFontMac.gif?raw=true" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCFont/raw/master/CCFontMac.gif?raw=true" alt="CCFont CCFontMac Screenshot"></a></p><h3 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h3><p><a href="https://github.com/ccworld1000/CCFont/blob/master/CCFontiOS.gif?raw=true" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/CCFont/raw/master/CCFontiOS.gif?raw=true" alt="CCFont CCFontiOS Screenshot"></a></p><h2 id="CCFont"><a href="#CCFont" class="headerlink" title="CCFont"></a>CCFont</h2><p>CCFont 简单支持 machosx 与 iOS, 可以简单取代 NSFont 或者 UIFont.</p><h2 id="CCColor"><a href="#CCColor" class="headerlink" title="CCColor"></a>CCColor</h2><p>CCColor 单支持 machosx 与 iOS, 可以简单取代 NSColor 或者 UIColor 十六进制字符串.</p><h2 id="Podfile"><a href="#Podfile" class="headerlink" title="Podfile"></a>Podfile</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod &apos;CCFont&apos;</span><br></pre></td></tr></table></figure><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;CCUtilities.h&gt;</span><br></pre></td></tr></table></figure><h1 id="或"><a href="#或" class="headerlink" title="或"></a>或</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;CCFont/CCUtilities.h&gt;</span><br></pre></td></tr></table></figure><h1 id="演示代码"><a href="#演示代码" class="headerlink" title="演示代码"></a>演示代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">    HSView *p = superView;</span><br><span class="line">    __block NSUInteger index = 0;</span><br><span class="line">    </span><br><span class="line">    CGFloat space, height, width;</span><br><span class="line">    space = height = 40;</span><br><span class="line">    width = 400;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    dispatch_async(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">        while (index &lt; 10) &#123;</span><br><span class="line">            NSInteger i = 10 + index++;</span><br><span class="line">            </span><br><span class="line">            NSString *leftText = [NSString stringWithFormat:@&quot;L : CCFont %ld&quot;,  i];</span><br><span class="line">            NSString *rightText = [NSString stringWithFormat:@&quot;R : CCFont %ld&quot;,  i];</span><br><span class="line">            </span><br><span class="line">#if TARGET_OS_IPHONE || TARGET_IPHONE_SIMULATOR</span><br><span class="line">            UILabel *l = [UILabel new];</span><br><span class="line">            UILabel *r = [UILabel new];</span><br><span class="line">            l.text = leftText;</span><br><span class="line">            r.text = rightText;</span><br><span class="line">#else</span><br><span class="line">            NSTextField *l = [NSTextField new];</span><br><span class="line">            NSTextField *r = [NSTextField new];</span><br><span class="line">            </span><br><span class="line">            l.stringValue = leftText;</span><br><span class="line">            r.stringValue = rightText;</span><br><span class="line">#endif</span><br><span class="line">            </span><br><span class="line">            l.font = [CCFont systemFontOfSize: i];</span><br><span class="line">            r.font = [CCFont systemFontOfSize: CCHalf(i)];</span><br><span class="line">            </span><br><span class="line">            if (index % 2) &#123;</span><br><span class="line">                l.textColor = [CCColor colorWithHexString:[NSString stringWithFormat:@&quot;%f%lx%lx&quot;, 255 / (index * 1.), index * 4, index * 8]];</span><br><span class="line">                r.textColor = [CCColor colorWithHexString:[NSString stringWithFormat:@&quot;%f%lx%lx&quot;, 255 / (index * 1.), index * 4, index * 8]];</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                l.textColor = [CCColor colorWithHexString:[NSString stringWithFormat:@&quot;%lx%x%lx&quot;, index * 4, 255, index * 8]];</span><br><span class="line">                r.textColor = [CCColor colorWithHexString:[NSString stringWithFormat:@&quot;%lx%x%lx&quot;, index * 4, 255, index * 8]];</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            l.frame = CGRectMake(CCHalf(space), index * height, CCHalf(width), height);</span><br><span class="line">            r.frame = CGRectMake(CCHalf(width + space), index * height, CCHalf(width), height);</span><br><span class="line">            </span><br><span class="line">            [p addSubview: l];</span><br><span class="line">            [p addSubview: r];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CCFont-for-iOS-amp-amp-OSX&quot;&gt;&lt;a href=&quot;#CCFont-for-iOS-amp-amp-OSX&quot; class=&quot;headerlink&quot; title=&quot;CCFont for iOS &amp;amp;&amp;amp; OSX&quot;&gt;&lt;/a&gt;CCFon
      
    
    </summary>
    
      <category term="iOS &amp;&amp; macOS" scheme="https://ccworld1000.github.io/categories/iOS-macOS/"/>
    
    
      <category term="CCColor" scheme="https://ccworld1000.github.io/tags/CCColor/"/>
    
      <category term="color" scheme="https://ccworld1000.github.io/tags/color/"/>
    
      <category term="iOS" scheme="https://ccworld1000.github.io/tags/iOS/"/>
    
      <category term="macOS" scheme="https://ccworld1000.github.io/tags/macOS/"/>
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="CCFont" scheme="https://ccworld1000.github.io/tags/CCFont/"/>
    
      <category term="Foundation" scheme="https://ccworld1000.github.io/tags/Foundation/"/>
    
      <category term="UIFont" scheme="https://ccworld1000.github.io/tags/UIFont/"/>
    
      <category term="NSFont" scheme="https://ccworld1000.github.io/tags/NSFont/"/>
    
      <category term="UIColor" scheme="https://ccworld1000.github.io/tags/UIColor/"/>
    
      <category term="NSColor" scheme="https://ccworld1000.github.io/tags/NSColor/"/>
    
      <category term="font" scheme="https://ccworld1000.github.io/tags/font/"/>
    
  </entry>
  
  <entry>
    <title>IGListKit简单入门 CCIGListKitDemo 例子</title>
    <link href="https://ccworld1000.github.io/2018/08/28/IGListKit%E7%AE%80%E5%8D%95%E5%85%A5%E9%97%A8-CCIGListKitDemo-%E4%BE%8B%E5%AD%90/"/>
    <id>https://ccworld1000.github.io/2018/08/28/IGListKit简单入门-CCIGListKitDemo-例子/</id>
    <published>2018-08-28T15:25:42.000Z</published>
    <updated>2018-08-28T15:40:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简单IGListKit入门"><a href="#简单IGListKit入门" class="headerlink" title="简单IGListKit入门"></a>简单IGListKit入门</h2><h3 id="简单滴框架示意图"><a href="#简单滴框架示意图" class="headerlink" title="简单滴框架示意图"></a>简单滴框架示意图</h3><p><img src="https://github.com/ccworld1000/CCIGListKitDemo/blob/master/Document/CCIGListKitSimpleFramework.png?raw=true" alt="CCIGListKitSimpleFramework.png"></p><h2 id="代码逻辑"><a href="#代码逻辑" class="headerlink" title="代码逻辑"></a>代码逻辑</h2><h3 id="数据项-DemoItem实现-IGListDiffable"><a href="#数据项-DemoItem实现-IGListDiffable" class="headerlink" title="数据项 DemoItem实现 IGListDiffable"></a>数据项 DemoItem实现 IGListDiffable</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">nonnull</span> <span class="keyword">id</span>&lt;<span class="built_in">NSObject</span>&gt;)diffIdentifier &#123;</span><br><span class="line">    <span class="keyword">return</span> _name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">BOOL</span>)isEqualToDiffableObject:(<span class="keyword">nullable</span> <span class="keyword">id</span>&lt;IGListDiffable&gt;)object &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> == object) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    DemoItem *item = (DemoItem *)object;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> _controllerClass == item.controllerClass &amp;&amp; _controllerIdentifier == item.controllerIdentifier;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数据列表"><a href="#数据列表" class="headerlink" title="数据列表"></a>数据列表</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">NSArray</span> *)demos &#123;</span><br><span class="line">    <span class="keyword">if</span> (!_demos) &#123;</span><br><span class="line">        _demos = @[</span><br><span class="line">                   [[DemoItem alloc] initWithName:<span class="string">@"Tail Loading"</span> controllerClass: <span class="string">@"LoadMoreViewController"</span>],</span><br><span class="line">                   [[DemoItem alloc] initWithName:<span class="string">@"Search Autocomplete"</span> controllerClass: <span class="string">@"SearchViewController"</span>],</span><br><span class="line">                   [[DemoItem alloc] initWithName:<span class="string">@"Mixed Data"</span> controllerClass: <span class="string">@"MixedDataViewController"</span>],</span><br><span class="line">                   [[DemoItem alloc] initWithName:<span class="string">@"Nested Adapter"</span> controllerClass: <span class="string">@"NestedAdapterViewController"</span>],</span><br><span class="line">                   [[DemoItem alloc] initWithName:<span class="string">@"Empty View"</span> controllerClass: <span class="string">@"EmptyViewController"</span>],</span><br><span class="line">                   [[DemoItem alloc] initWithName:<span class="string">@"Single Section Controller"</span> controllerClass: <span class="string">@"SingleSectionViewController"</span>],</span><br><span class="line">                   [[DemoItem alloc] initWithName:<span class="string">@"Storyboard"</span> controllerClass: <span class="string">@"SingleSectionViewController"</span> controllerIdentifier: <span class="string">@"demo"</span>],</span><br><span class="line">                   [[DemoItem alloc] initWithName:<span class="string">@"Single Section Storyboard"</span> controllerClass: <span class="string">@"SingleSectionStoryboardViewController"</span> controllerIdentifier: <span class="string">@"singleSectionDemo"</span>],</span><br><span class="line">                   [[DemoItem alloc] initWithName:<span class="string">@"Working Range"</span> controllerClass: <span class="string">@"WorkingRangeViewController"</span>],</span><br><span class="line">                   [[DemoItem alloc] initWithName:<span class="string">@"Diff Algorithm"</span> controllerClass: <span class="string">@"DiffTableViewController"</span>],</span><br><span class="line">                   [[DemoItem alloc] initWithName:<span class="string">@"Supplementary Views"</span> controllerClass: <span class="string">@"SupplementaryViewController"</span>],</span><br><span class="line">                   [[DemoItem alloc] initWithName:<span class="string">@"Self-sizing cells"</span> controllerClass: <span class="string">@"SelfSizingCellsViewController"</span>],</span><br><span class="line">                   [[DemoItem alloc] initWithName:<span class="string">@"Display delegate"</span> controllerClass: <span class="string">@"DisplayViewController"</span>],</span><br><span class="line">                   [[DemoItem alloc] initWithName:<span class="string">@"Stacked Section Controllers"</span> controllerClass: <span class="string">@"StackedViewController"</span>],</span><br><span class="line">                   [[DemoItem alloc] initWithName:<span class="string">@"Objc Demo"</span> controllerClass: <span class="string">@"ObjcDemoViewController"</span>],</span><br><span class="line">                   [[DemoItem alloc] initWithName:<span class="string">@"Objc Generated Model Demo"</span> controllerClass: <span class="string">@"ObjcGeneratedModelDemoViewController"</span>],</span><br><span class="line">                   [[DemoItem alloc] initWithName:<span class="string">@"Calendar (auto diffing)"</span> controllerClass: <span class="string">@"CalendarViewController"</span>],</span><br><span class="line">                   [[DemoItem alloc] initWithName:<span class="string">@"Dependency Injection"</span> controllerClass: <span class="string">@"AnnouncingDepsViewController"</span>],</span><br><span class="line">                   [[DemoItem alloc] initWithName:<span class="string">@"Reorder Cells"</span> controllerClass: <span class="string">@"ReorderableViewController"</span>],</span><br><span class="line">                   [[DemoItem alloc] initWithName:<span class="string">@"Reorder Stacked Section Controllers"</span> controllerClass: <span class="string">@"ReorderableStackedViewController"</span>],</span><br><span class="line">                   ];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> _demos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="绑定数据列表"><a href="#绑定数据列表" class="headerlink" title="绑定数据列表"></a>绑定数据列表</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">NSArray</span>&lt;<span class="keyword">id</span> &lt;IGListDiffable&gt;&gt; *)objectsForListAdapter:(IGListAdapter *)listAdapter &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.demos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="绑定IGListSectionController"><a href="#绑定IGListSectionController" class="headerlink" title="绑定IGListSectionController"></a>绑定IGListSectionController</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- (IGListSectionController *)listAdapter:(IGListAdapter *)listAdapter sectionControllerForObject:(<span class="keyword">id</span>)object &#123;</span><br><span class="line">    <span class="keyword">return</span> [DemoSectionController new];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIView</span> *)emptyViewForListAdapter:(IGListAdapter *)listAdapter &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="adapter-与-collectionView-关联"><a href="#adapter-与-collectionView-关联" class="headerlink" title="adapter 与 collectionView 关联"></a>adapter 与 collectionView 关联</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.adapter.collectionView = <span class="keyword">self</span>.collectionView;</span><br><span class="line"><span class="keyword">self</span>.adapter.dataSource = <span class="keyword">self</span>;</span><br></pre></td></tr></table></figure><h3 id="DemoSectionController-关联-cell"><a href="#DemoSectionController-关联-cell" class="headerlink" title="DemoSectionController 关联 cell"></a>DemoSectionController 关联 cell</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">CGSize</span>)sizeForItemAtIndex:(<span class="built_in">NSInteger</span>)index &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">CGSizeMake</span>(<span class="keyword">self</span>.collectionContext.containerSize.width, <span class="number">55</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UICollectionViewCell</span> *)cellForItemAtIndex:(<span class="built_in">NSInteger</span>)index &#123;</span><br><span class="line">    LabelCell *cell = [<span class="keyword">self</span>.collectionContext dequeueReusableCellOfClass:[LabelCell <span class="keyword">class</span>] forSectionController:<span class="keyword">self</span> atIndex:index];</span><br><span class="line">    cell.text = <span class="keyword">self</span>.item.name;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> cell;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)didUpdateToObject:(<span class="keyword">id</span>)object &#123;</span><br><span class="line">    <span class="keyword">self</span>.item = object;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)didSelectItemAtIndex:(<span class="built_in">NSInteger</span>)index &#123;</span><br><span class="line">    <span class="built_in">NSString</span> *classString = <span class="keyword">self</span>.item.controllerClass;</span><br><span class="line">    <span class="built_in">NSString</span> *controllerIdentifier = <span class="keyword">self</span>.item.controllerIdentifier;</span><br><span class="line">    CCDebugPrint(classString);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIViewController</span> *vc = <span class="literal">nil</span>;</span><br><span class="line">    <span class="keyword">if</span> (controllerIdentifier) &#123;</span><br><span class="line">        <span class="built_in">UIStoryboard</span> *storyboard = [<span class="built_in">UIStoryboard</span> storyboardWithName:<span class="string">@"Demo"</span> bundle: <span class="literal">nil</span>];</span><br><span class="line">        vc = [storyboard instantiateViewControllerWithIdentifier:controllerIdentifier];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        vc = [<span class="built_in">NSClassFromString</span>(classString) new];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (vc) &#123;</span><br><span class="line">        vc.title = <span class="keyword">self</span>.item.name;</span><br><span class="line">        [<span class="keyword">self</span>.viewController.navigationController pushViewController:vc animated: <span class="literal">NO</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        CCDebugWarningPrint([<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@ : [The interface may not be implemented] "</span>, classString]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="更多细节"><a href="#更多细节" class="headerlink" title="更多细节"></a>更多细节</h2><h3 id="查查看CCIGListKitDemo"><a href="#查查看CCIGListKitDemo" class="headerlink" title="查查看CCIGListKitDemo"></a>查查看<a href="https://github.com/ccworld1000/CCIGListKitDemo" target="_blank" rel="noopener">CCIGListKitDemo</a></h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简单IGListKit入门&quot;&gt;&lt;a href=&quot;#简单IGListKit入门&quot; class=&quot;headerlink&quot; title=&quot;简单IGListKit入门&quot;&gt;&lt;/a&gt;简单IGListKit入门&lt;/h2&gt;&lt;h3 id=&quot;简单滴框架示意图&quot;&gt;&lt;a href=&quot;#简
      
    
    </summary>
    
      <category term="CCIGListKitDemo &amp;&amp; IGListKit" scheme="https://ccworld1000.github.io/categories/CCIGListKitDemo-IGListKit/"/>
    
    
      <category term="iOS" scheme="https://ccworld1000.github.io/tags/iOS/"/>
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="IGListKit" scheme="https://ccworld1000.github.io/tags/IGListKit/"/>
    
      <category term="CCIGListKitDemo" scheme="https://ccworld1000.github.io/tags/CCIGListKitDemo/"/>
    
      <category term="UIColllectionView" scheme="https://ccworld1000.github.io/tags/UIColllectionView/"/>
    
      <category term="IGListSectionController" scheme="https://ccworld1000.github.io/tags/IGListSectionController/"/>
    
      <category term="IGListAdapter" scheme="https://ccworld1000.github.io/tags/IGListAdapter/"/>
    
      <category term="UIViewController" scheme="https://ccworld1000.github.io/tags/UIViewController/"/>
    
      <category term="IGListDiffable" scheme="https://ccworld1000.github.io/tags/IGListDiffable/"/>
    
  </entry>
  
  <entry>
    <title>Perl 6 perl6.org 网站中文翻译</title>
    <link href="https://ccworld1000.github.io/2018/08/25/Perl-6-perl6-org-%E7%BD%91%E7%AB%99%E4%B8%AD%E6%96%87%E7%BF%BB%E8%AF%91/"/>
    <id>https://ccworld1000.github.io/2018/08/25/Perl-6-perl6-org-网站中文翻译/</id>
    <published>2018-08-25T02:47:29.000Z</published>
    <updated>2018-08-25T02:54:25.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="本数据仓缘由"><a href="#本数据仓缘由" class="headerlink" title="本数据仓缘由"></a>本数据仓缘由</h5><blockquote><pre><code>很多年过去,有关Perl 6相关的中文文档少之又少.</code></pre><p>于是我打算翻译一些部分文档入口促进Perl 6 在中国的发展.</p><p>如果有一定的英文功底,建议直接看官方文档.</p><p>部分文档直接按英语翻译过来的意思可能不太好,所以有的采用意译.</p><h5 id="2018-04-10-by-CC"><a href="#2018-04-10-by-CC" class="headerlink" title="2018/04/10 by CC"></a>2018/04/10 by CC</h5></blockquote><h5 id="Perl-5-amp-amp-Perl-6"><a href="#Perl-5-amp-amp-Perl-6" class="headerlink" title="Perl 5 &amp;&amp; Perl 6"></a>Perl 5 &amp;&amp; Perl 6</h5><blockquote><pre><code>讲到Perl 6 就不得不提Perl 5,后续我简写为P6 与 P5.</code></pre><p>建议把P6当成一门新语言,可能对接触过P5的童鞋来讲是一样的.</p><p>不过他们确实很多相识点,更多细节需要通过学习深入了解,</p><p>祝大家在P6的路途愉快.</p></blockquote><h5 id="翻译进度"><a href="#翻译进度" class="headerlink" title="翻译进度"></a>翻译进度</h5><blockquote><pre><code>网站主体入口差不多翻译完成。</code></pre><p>doc模块<a href="https://github.com/ccworld1000/doc" target="_blank" rel="noopener">https://github.com/ccworld1000/doc</a>还没有咋开始。</p><p>缘由：编译通不过去，一旦开始翻译就没有办法与官网同步。</p><p>如果有更好的提议，欢迎提议。</p></blockquote><h5 id="已翻译入口"><a href="#已翻译入口" class="headerlink" title="已翻译入口"></a>已翻译入口</h5><blockquote><p><a href="https://github.com/ccworld1000/doc/blob/master/README.zh.md" target="_blank" rel="noopener">P6官方中文文档入口1</a> 或者 <a href="https://github.com/perl6/doc/blob/master/README.zh.md" target="_blank" rel="noopener">P6官方中文文档入口2</a></p><p>翻译当前进度：大致入口翻译已经完毕，可以下载到本地运行。</p></blockquote><h5 id="贡献本数据仓"><a href="#贡献本数据仓" class="headerlink" title="贡献本数据仓"></a>贡献本数据仓</h5><blockquote><pre><code>如果想帮忙可以fork  [https://github.com/ccworld1000/perl6.org](https://github.com/ccworld1000/perl6.org),帮助形式不限.</code></pre><p>项目本身采用我私用工具CCAutoTag自动打tag,这个实际上也是最近用P6完成的.</p></blockquote><h5 id="截屏"><a href="#截屏" class="headerlink" title="截屏"></a>截屏</h5><p><img src="https://github.com/ccworld1000/perl6.org/blob/master/ScreenShots/p6.zh.jpg?raw=true" alt="p6.zh"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;本数据仓缘由&quot;&gt;&lt;a href=&quot;#本数据仓缘由&quot; class=&quot;headerlink&quot; title=&quot;本数据仓缘由&quot;&gt;&lt;/a&gt;本数据仓缘由&lt;/h5&gt;&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;很多年过去,有关Perl 6相关的中文文档少之又少.
&lt;/code
      
    
    </summary>
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/categories/Perl-6/"/>
    
    
      <category term="Perl 6" scheme="https://ccworld1000.github.io/tags/Perl-6/"/>
    
      <category term="Perl 5" scheme="https://ccworld1000.github.io/tags/Perl-5/"/>
    
      <category term="Perl" scheme="https://ccworld1000.github.io/tags/Perl/"/>
    
      <category term="perl" scheme="https://ccworld1000.github.io/tags/perl/"/>
    
      <category term="perl6.org" scheme="https://ccworld1000.github.io/tags/perl6-org/"/>
    
  </entry>
  
  <entry>
    <title>OKKLineMin kline for min for learning for iPhone (support Swift4 &amp; iPhone X)</title>
    <link href="https://ccworld1000.github.io/2018/08/23/OKKLineMin-kline-for-min-for-learning-for-iPhone-support-Swift4-iPhone-X/"/>
    <id>https://ccworld1000.github.io/2018/08/23/OKKLineMin-kline-for-min-for-learning-for-iPhone-support-Swift4-iPhone-X/</id>
    <published>2018-08-23T12:33:55.000Z</published>
    <updated>2018-08-23T12:46:37.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="OKKLineMin"><a href="#OKKLineMin" class="headerlink" title="OKKLineMin"></a>OKKLineMin</h3><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><a href="https://github.com/ccworld1000/OKKLineMin" target="_blank" rel="noopener"><strong>OKKLineMin</strong></a> kline for min for learning for iPhone*<em> </em>(支持 Swift4 &amp; iPhone X)* (主要用于学习目的)</p><h3 id="截屏"><a href="#截屏" class="headerlink" title="截屏"></a>截屏</h3><p>[支持 拖曳、 长按 、缩放]</p><p><a href="https://github.com/ccworld1000/OKKLineMin/blob/master/Screenshot/OKKLineMin.gif" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/OKKLineMin/raw/master/Screenshot/OKKLineMin.gif" alt="OKKLineMin"></a></p><p>iPhone X 全屏</p><p><a href="https://github.com/ccworld1000/OKKLineMin/blob/master/Screenshot/X.png" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/OKKLineMin/raw/master/Screenshot/X.png" alt="X"></a></p><p>iPhone X 半屏</p><p><a href="https://github.com/ccworld1000/OKKLineMin/blob/master/Screenshot/Half.png" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/OKKLineMin/raw/master/Screenshot/Half.png" alt="X"></a></p><p>iPhone 设备</p><p><a href="https://github.com/ccworld1000/OKKLineMin/blob/master/Screenshot/iPhoneDevice.png" target="_blank" rel="noopener"><img src="https://github.com/ccworld1000/OKKLineMin/raw/master/Screenshot/iPhoneDevice.png" alt="iPhoneDevice"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;OKKLineMin&quot;&gt;&lt;a href=&quot;#OKKLineMin&quot; class=&quot;headerlink&quot; title=&quot;OKKLineMin&quot;&gt;&lt;/a&gt;OKKLineMin&lt;/h3&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="金融" scheme="https://ccworld1000.github.io/categories/%E9%87%91%E8%9E%8D/"/>
    
    
      <category term="iOS" scheme="https://ccworld1000.github.io/tags/iOS/"/>
    
      <category term="OKKLineMin" scheme="https://ccworld1000.github.io/tags/OKKLineMin/"/>
    
      <category term="kline" scheme="https://ccworld1000.github.io/tags/kline/"/>
    
      <category term="K线，Swift" scheme="https://ccworld1000.github.io/tags/K%E7%BA%BF%EF%BC%8CSwift/"/>
    
      <category term="iPhone X" scheme="https://ccworld1000.github.io/tags/iPhone-X/"/>
    
      <category term="OKKLineSwift" scheme="https://ccworld1000.github.io/tags/OKKLineSwift/"/>
    
  </entry>
  
  <entry>
    <title>CCSugar Foundation 附加函数集</title>
    <link href="https://ccworld1000.github.io/2018/08/22/CCSugar-Foundation-%E9%99%84%E5%8A%A0%E5%87%BD%E6%95%B0%E9%9B%86/"/>
    <id>https://ccworld1000.github.io/2018/08/22/CCSugar-Foundation-附加函数集/</id>
    <published>2018-08-22T14:33:17.000Z</published>
    <updated>2018-08-22T14:54:51.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Write Objective C <em>like a boss</em>.</p></blockquote><p>Foundation 附加函数集函数集.</p><h2 id="支持-MAC-OS-与-iOS"><a href="#支持-MAC-OS-与-iOS" class="headerlink" title="支持 MAC OS 与 iOS"></a>支持 MAC OS 与 iOS</h2><p>始于 ObjectiveSugar 1.1.1</p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><ol><li><p><a href="http://cocoapods.org/" target="_blank" rel="noopener">CocoaPods</a>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod &apos;CCSugar&apos;</span><br></pre></td></tr></table></figure></li><li><p>导入头文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;CCSugar.h&gt;</span><br></pre></td></tr></table></figure></li></ol><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">​</span><br></pre></td></tr></table></figure><p>#import “CCSugar.h”</p><p>​<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">### 文档 [更多查阅 [CCSugar](https://github.com/ccworld1000/CCSugar) 源码]</span><br><span class="line"></span><br><span class="line">**NSNumber** 集</span><br></pre></td></tr></table></figure></p><pre><code>[@3 times:^{    NSLog(@&quot;Hello!&quot;);}];// Hello!// Hello!// Hello![@3 timesWithIndex:^(NSUInteger index) {    NSLog(@&quot;Another version with number: %lu&quot;, (unsigned long)index);}];// Another version with number: 0// Another version with number: 1// Another version with number: 2[@1 upto:4 do:^(NSInteger numbah) {    NSLog(@&quot;Current number.. %ld&quot;, (long)numbah);}];// Current number.. 1// Current number.. 2// Current number.. 3// Current number.. 4[@7 downto:4 do:^(NSInteger numbah) {    NSLog(@&quot;Current number.. %ld&quot;, (long)numbah);}];// Current number.. 7// Current number.. 6// Current number.. 5// Current number.. 4NSDate *firstOfDecember = [NSDate date]; // let&apos;s pretend it&apos;s 1st of DecemberNSDate *firstOfNovember = [(@30).days since:firstOfDecember];NSLog(@&quot;firstOfNovember : %@&quot;, firstOfNovember);NSDate *future = (@24).days.fromNow;NSLog(@&quot;future : %@&quot;, future);NSDate *past = @(1).month.ago;NSLog(@&quot;past : %@&quot;, past);</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">\--</span><br><span class="line"></span><br><span class="line">**NSArray** / **NSSet** 集</span><br></pre></td></tr></table></figure><p>// All of these methods return a modified copy of the array.<br>// They’re not modifying the source array.</p><p>NSArray *cars = @[@”Testarossa”, @”F50”, @”F458 Italia”]; // or NSSet</p><p>[cars each:^(id object) {<br>    NSLog(@”Car: %@”, object);<br>}];<br>// Car: Testarossa<br>// Car: F50<br>// Car: F458 Italia</p><p>[cars eachWithIndex:^(id object, NSUInteger index) {<br>    NSLog(@”Car: %@ index: %i”, object, index);<br>}];<br>// Car: Testarossa index: 0<br>// Car: F50 index: 1<br>// Car: F458 Italia index: 2</p><p>[cars each:^(id object) {<br>    NSLog(@”Car: %@”, object);<br>} options:NSEnumerationReverse];<br>// Car: F458 Italia<br>// Car: F50<br>// Car: Testarossa</p><p>[cars eachWithIndex:^(id object, NSUInteger index) {<br>    NSLog(@”Car: %@ index: %i”, object, index);<br>} options:NSEnumerationReverse];<br>// Car: F458 Italia index: 2<br>// Car: F50 index: 1<br>// Car: Testarossa index: 0</p><p>[cars map:^(NSString* car) {<br>    return car.lowercaseString;<br>}];<br>// testarossa, f50, f458 italia</p><p>// Or, a more common example:<br>[cars map:^(NSString* carName) {<br>    return [[Car alloc] initWithName:carName];<br>}];<br>// array of Car objects</p><p>NSArray *mixedData = @[ @1, @”Objective Sugar!”, @”Github”, @4, @”5”];</p><p>[mixedData select:^BOOL(id object) {<br>  return ([object class] == [NSString class]);<br>}];<br>// Objective Sugar, Github, 5</p><p>[mixedData reject:^BOOL(id object) {<br>    return ([object class] == [NSString class]);<br>}];<br>// 1, 4</p><p>NSArray *numbers = @[ @5, @2, @7, @1 ];<br>[numbers sort];<br>// 1, 2, 5, 7</p><p>cars.sample<br>// 458 Italia<br>cars.sample<br>// F50<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">-- 仅仅针对**NSArray**</span><br></pre></td></tr></table></figure></p><p>NSArray *numbers = @[@1, @2, @3, @4, @5, @6];</p><p>// index from 2 to 4<br>numbers[@”2..4”];<br>// [@3, @4, @5]</p><p>// index from 2 to 4 (excluded)<br>numbers[@”2…4”];<br>// [@3, @4]</p><p>// With NSRange location: 2, length: 4<br>numbers[@”2,4”];<br>// [@3, @4, @5, @6]</p><p>NSValue *range = [NSValue valueWithRange:NSMakeRange(2, 4)];<br>numbers[range];<br>// [@3, @4, @5, @6]</p><p>[numbers reverse];<br>// [@6, @5, @4, @3, @2, @1]</p><p>NSArray *fruits = @[ @”banana”, @”mango”, @”apple”, @”pear” ];</p><p>[fruits includes:@”apple”];<br>// YES</p><p>[fruits take:3];<br>// banana, mango, apple</p><p>[fruits takeWhile:^BOOL(id fruit) {<br>    return ![fruit isEqualToString:@”apple”];<br>}];<br>// banana, mango</p><p>NSArray *nestedArray = @[ @[ @1, @2, @3 ], @[ @4, @5, @6, @[ @7, @8 ] ], @9, @10 ];<br>[nestedArray flatten];<br>// 1, 2, 3, 4, 5, 6, 7, 8, 9, 10</p><p>NSArray *abc = @[ @”a”, @”b”, @”c” ];<br>[abc join];<br>// abc</p><p>[abc join:@”-“];<br>// a-b-c</p><p>NSArray *mixedData = @[ @1, @”Objective Sugar!”, @”Github”, @4, @”5”];</p><p>[mixedData detect:^BOOL(id object) {<br>    return ([object class] == [NSString class]);<br>}];<br>// Objective Sugar</p><p>// TODO: Make a better / simpler example of this<br>NSArray <em>landlockedCountries = @[ @”Bolivia”, @”Paraguay”, @”Austria”, @”Switzerland”, @”Hungary” ];<br>NSArray </em>europeanCountries = @[ @”France”, @”Germany”, @”Austria”, @”Spain”, @”Hungary”, @”Poland”, @”Switzerland” ];</p><p>[landlockedCountries intersectionWithArray:europeanCountries];<br>// landlockedEuropeanCountries = Austria, Switzerland, Hungary</p><p>[landlockedCountries unionWithArray:europeanCountries];<br>// landlockedOrEuropean = Bolivia, Paraguay, Austria, Switzerland, Hungary, France, Germany, Spain, Poland</p><p>[landlockedCountries relativeComplement:europeanCountries];<br>// nonEuropeanLandlockedCountries = Bolivia, Paraguay</p><p>[europeanCountries relativeComplement:landlockedCountries];<br>// notLandlockedEuropeanCountries = France, Germany, Spain, Poland</p><p>[landlockedCountries symmetricDifference:europeanCountries];<br>// uniqueCountries = Bolivia, Paraguay, France, Germany, Spain, Poland<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">-- **NSMutableArray** 集</span><br></pre></td></tr></table></figure></p><p>NSMutableArray *people = [NSMutableArray arrayWithArray:@[ @”Alice”, @”Benjamin”, @”Christopher” ]];</p><p>[people push:@”Daniel”]; // Alice, Benjamin, Christopher, Daniel</p><p>[people pop]; // Daniel<br>// people = Alice, Benjamin, Christopher</p><p>[people pop:2]; // Benjamin, Christopher<br>// people = Alice</p><p>[people concat:@[ @”Evan”, @”Frank”, @”Gavin” ]];<br>// people = Alice, Evan, Frank, Gavin</p><p>[people keepIf:^BOOL(id object) {<br>    return [object characterAtIndex:0] == ‘E’;<br>}];<br>// people = Evan<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">-- **NSDictionary** 集</span><br></pre></td></tr></table></figure></p><p>NSDictionary *dict = @{ @”one” : @1, @”two” : @2, @”three” : @3 };</p><p>[dict each:^(id key, id value){<br>    NSLog(@”Key: %@, Value: %@”, key, value);<br>}];<br>// Key: one, Value: 1<br>// Key: two, Value: 2<br>// Key: three, Value: 3</p><p>[dict eachKey:^(id key) {<br>    NSLog(@”Key: %@”, key);<br>}];<br>// Key: one<br>// Key: two<br>// Key: three</p><p>[dict eachValue:^(id value) {<br>    NSLog(@”Value: %@”, value);<br>}];<br>// Value: 1<br>// Value: 2<br>// Value: 3</p><p>[dict invert];<br>// { 1 = one, 2 = two, 3 = three}</p><p>NSDictionary *errors = @{<br>    @”username” : @[ @”already taken” ],<br>    @”password” : @[ @”is too short (minimum is 8 characters)”, @”not complex enough” ],<br>    @”email” : @[ @”can’t be blank” ];<br>};</p><p>[errors map:^(id attribute, id reasons) {<br>    return NSStringWithFormat(@”%@ %@”, attribute, [reasons join:@”, “]);<br>}];<br>// username already taken<br>// password is too short (minimum is 8 characters), not complex enough<br>// email can’t be blank</p><p>[errors hasKey:@”email”]<br>// true<br>[errors hasKey:@”Alcatraz”]<br>// false<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">-- **NSString** 集</span><br></pre></td></tr></table></figure></p><p>NSString *sentence = NSStringWithFormat(@”This is a text-with-argument %@”, @1234);<br>// This is a text-with-argument 1234</p><p>[sentence split];<br>// array = this, is, a, text-with-argument, 1234</p><p>[sentence split:@”-“]<br>// array = this is a text, with, argument 1234</p><p>[sentence containsString:@”this is a”];<br>// YES</p><p>[sentence match:@”-[a-z]+-“]<br>// -with-<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">-- **C** 集</span><br></pre></td></tr></table></figure></p><p>unless(_messages) {<br>    // The body is only executed if the condition is false<br>    _messages = [self initializeMessages];<br>}</p><p>int iterations = 10;<br>until(iterations == 0) {<br>    // The body is executed until the condition is false<br>    // 10 9 8 7 6 5 4 3 2 1<br>    printf(“%d “, iterations);<br>    iterations–;<br>}<br>printf(“\n”);</p><p>iterations = 10;<br>do {<br>    // The body is executed at least once until the condition is false<br>    // Will print: Executed!<br>    printf(“Executed!\n”);<br>} until(true);<br><code>`</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Write Objective C &lt;em&gt;like a boss&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Foundation 附加函数集函数集.&lt;/p&gt;
&lt;h2 id=&quot;支持-MAC-OS-与-iOS&quot;&gt;&lt;a href=&quot;#支持-
      
    
    </summary>
    
      <category term="iOS &amp;&amp; macOS" scheme="https://ccworld1000.github.io/categories/iOS-macOS/"/>
    
    
      <category term="iOS" scheme="https://ccworld1000.github.io/tags/iOS/"/>
    
      <category term="macOS" scheme="https://ccworld1000.github.io/tags/macOS/"/>
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="Foundation" scheme="https://ccworld1000.github.io/tags/Foundation/"/>
    
      <category term="CCSugar" scheme="https://ccworld1000.github.io/tags/CCSugar/"/>
    
      <category term="c" scheme="https://ccworld1000.github.io/tags/c/"/>
    
      <category term="C" scheme="https://ccworld1000.github.io/tags/C/"/>
    
      <category term="NSNumber" scheme="https://ccworld1000.github.io/tags/NSNumber/"/>
    
      <category term="NSArray" scheme="https://ccworld1000.github.io/tags/NSArray/"/>
    
      <category term="NSSet" scheme="https://ccworld1000.github.io/tags/NSSet/"/>
    
      <category term="NSMutableArray" scheme="https://ccworld1000.github.io/tags/NSMutableArray/"/>
    
      <category term="NSDictionary" scheme="https://ccworld1000.github.io/tags/NSDictionary/"/>
    
      <category term="NSString" scheme="https://ccworld1000.github.io/tags/NSString/"/>
    
      <category term="ObjectiveSugar" scheme="https://ccworld1000.github.io/tags/ObjectiveSugar/"/>
    
  </entry>
  
  <entry>
    <title>CCTALib TA-Lib 广泛应用于交易开发分析金融市场数据</title>
    <link href="https://ccworld1000.github.io/2018/08/21/CCTALib-TA-Lib-%E5%B9%BF%E6%B3%9B%E5%BA%94%E7%94%A8%E4%BA%8E%E4%BA%A4%E6%98%93%E5%BC%80%E5%8F%91%E5%88%86%E6%9E%90%E9%87%91%E8%9E%8D%E5%B8%82%E5%9C%BA%E6%95%B0%E6%8D%AE/"/>
    <id>https://ccworld1000.github.io/2018/08/21/CCTALib-TA-Lib-广泛应用于交易开发分析金融市场数据/</id>
    <published>2018-08-20T16:04:30.000Z</published>
    <updated>2018-08-20T16:15:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCTALib"><a href="#CCTALib" class="headerlink" title="CCTALib"></a><a href="https://github.com/ccworld1000/CCTALib" target="_blank" rel="noopener">CCTALib</a></h2><p><a href="https://github.com/ccworld1000/CCTALib" target="_blank" rel="noopener">CCTALib</a> : TA-Lib is widely used by trading software developers requiring to perform technical analysis of financial market data</p><h2 id="Multi-Platform-Tools-for-Market-Analysis-…"><a href="#Multi-Platform-Tools-for-Market-Analysis-…" class="headerlink" title="Multi-Platform Tools for Market Analysis …"></a>Multi-Platform Tools for Market Analysis …</h2><p>TA-Lib is widely used by  trading software developers requiring to perform technical analysis of financial market data.</p><ul><li>Includes 200 indicators such as ADX, MACD, RSI, Stochastic, Bollinger Bands etc…</li><li>Candlestick pattern recognition</li><li>Open-source API for C/C++, Java, Perl, Python and 100% Managed .NET</li></ul><h2 id="Free-Open-Source-Library"><a href="#Free-Open-Source-Library" class="headerlink" title="Free Open-Source Library"></a>Free Open-Source Library</h2><p>TA-Lib is available under a BSD License allowing it to be integrated in your  own open-source or commercial application.</p><h2 id="Commercial-Application"><a href="#Commercial-Application" class="headerlink" title="Commercial Application"></a>Commercial Application</h2><p>TA-Lib is also available as an easy to install Excel Add-Ins.</p><h2 id="Technical-Analysis-Library"><a href="#Technical-Analysis-Library" class="headerlink" title="Technical Analysis Library"></a>Technical Analysis Library</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line">AD                  Chaikin A/D Line</span><br><span class="line">ADOSC               Chaikin A/D Oscillator</span><br><span class="line">ADX                 Average Directional Movement Index</span><br><span class="line">ADXR                Average Directional Movement Index Rating</span><br><span class="line">APO                 Absolute Price Oscillator</span><br><span class="line">AROON               Aroon</span><br><span class="line">AROONOSC            Aroon Oscillator</span><br><span class="line">ATR                 Average True Range</span><br><span class="line">AVGPRICE            Average Price</span><br><span class="line">BBANDS              Bollinger Bands</span><br><span class="line">BETA                Beta</span><br><span class="line">BOP                 Balance Of Power</span><br><span class="line">CCI                 Commodity Channel Index</span><br><span class="line">CDL2CROWS           Two Crows</span><br><span class="line">CDL3BLACKCROWS      Three Black Crows</span><br><span class="line">CDL3INSIDE          Three Inside Up/Down</span><br><span class="line">CDL3LINESTRIKE      Three-Line Strike </span><br><span class="line">CDL3OUTSIDE         Three Outside Up/Down</span><br><span class="line">CDL3STARSINSOUTH    Three Stars In The South</span><br><span class="line">CDL3WHITESOLDIERS   Three Advancing White Soldiers</span><br><span class="line">CDLABANDONEDBABY    Abandoned Baby</span><br><span class="line">CDLADVANCEBLOCK     Advance Block</span><br><span class="line">CDLBELTHOLD         Belt-hold</span><br><span class="line">CDLBREAKAWAY        Breakaway</span><br><span class="line">CDLCLOSINGMARUBOZU  Closing Marubozu</span><br><span class="line">CDLCONCEALBABYSWALL Concealing Baby Swallow</span><br><span class="line">CDLCOUNTERATTACK    Counterattack</span><br><span class="line">CDLDARKCLOUDCOVER   Dark Cloud Cover</span><br><span class="line">CDLDOJI             Doji</span><br><span class="line">CDLDOJISTAR         Doji Star</span><br><span class="line">CDLDRAGONFLYDOJI    Dragonfly Doji</span><br><span class="line">CDLENGULFING        Engulfing Pattern</span><br><span class="line">CDLEVENINGDOJISTAR  Evening Doji Star</span><br><span class="line">CDLEVENINGSTAR      Evening Star</span><br><span class="line">CDLGAPSIDESIDEWHITE Up/Down-gap side-by-side white lines</span><br><span class="line">CDLGRAVESTONEDOJI   Gravestone Doji</span><br><span class="line">CDLHAMMER           Hammer</span><br><span class="line">CDLHANGINGMAN       Hanging Man</span><br><span class="line">CDLHARAMI           Harami Pattern</span><br><span class="line">CDLHARAMICROSS      Harami Cross Pattern</span><br><span class="line">CDLHIGHWAVE         High-Wave Candle</span><br><span class="line">CDLHIKKAKE          Hikkake Pattern</span><br><span class="line">CDLHIKKAKEMOD       Modified Hikkake Pattern</span><br><span class="line">CDLHOMINGPIGEON     Homing Pigeon</span><br><span class="line">CDLIDENTICAL3CROWS  Identical Three Crows</span><br><span class="line">CDLINNECK           In-Neck Pattern</span><br><span class="line">CDLINVERTEDHAMMER   Inverted Hammer</span><br><span class="line">CDLKICKING          Kicking</span><br><span class="line">CDLKICKINGBYLENGTH  Kicking - bull/bear determined by the longer marubozu</span><br><span class="line">CDLLADDERBOTTOM     Ladder Bottom</span><br><span class="line">CDLLONGLEGGEDDOJI   Long Legged Doji</span><br><span class="line">CDLLONGLINE         Long Line Candle</span><br><span class="line">CDLMARUBOZU         Marubozu</span><br><span class="line">CDLMATCHINGLOW      Matching Low</span><br><span class="line">CDLMATHOLD          Mat Hold</span><br><span class="line">CDLMORNINGDOJISTAR  Morning Doji Star</span><br><span class="line">CDLMORNINGSTAR      Morning Star</span><br><span class="line">CDLONNECK           On-Neck Pattern</span><br><span class="line">CDLPIERCING         Piercing Pattern</span><br><span class="line">CDLRICKSHAWMAN      Rickshaw Man</span><br><span class="line">CDLRISEFALL3METHODS Rising/Falling Three Methods</span><br><span class="line">CDLSEPARATINGLINES  Separating Lines</span><br><span class="line">CDLSHOOTINGSTAR     Shooting Star</span><br><span class="line">CDLSHORTLINE        Short Line Candle</span><br><span class="line">CDLSPINNINGTOP      Spinning Top</span><br><span class="line">CDLSTALLEDPATTERN   Stalled Pattern</span><br><span class="line">CDLSTICKSANDWICH    Stick Sandwich</span><br><span class="line">CDLTAKURI           Takuri (Dragonfly Doji with very long lower shadow)</span><br><span class="line">CDLTASUKIGAP        Tasuki Gap</span><br><span class="line">CDLTHRUSTING        Thrusting Pattern</span><br><span class="line">CDLTRISTAR          Tristar Pattern</span><br><span class="line">CDLUNIQUE3RIVER     Unique 3 River</span><br><span class="line">CDLUPSIDEGAP2CROWS  Upside Gap Two Crows</span><br><span class="line">CDLXSIDEGAP3METHODS Upside/Downside Gap Three Methods</span><br><span class="line">CMO                 Chande Momentum Oscillator</span><br><span class="line">CORREL              Pearson&apos;s Correlation Coefficient (r)</span><br><span class="line">DEMA                Double Exponential Moving Average</span><br><span class="line">DX                  Directional Movement Index</span><br><span class="line">EMA                 Exponential Moving Average</span><br><span class="line">HT_DCPERIOD         Hilbert Transform - Dominant Cycle Period</span><br><span class="line">HT_DCPHASE          Hilbert Transform - Dominant Cycle Phase</span><br><span class="line">HT_PHASOR           Hilbert Transform - Phasor Components</span><br><span class="line">HT_SINE             Hilbert Transform - SineWave</span><br><span class="line">HT_TRENDLINE        Hilbert Transform - Instantaneous Trendline</span><br><span class="line">HT_TRENDMODE        Hilbert Transform - Trend vs Cycle Mode</span><br><span class="line">KAMA                Kaufman Adaptive Moving Average</span><br><span class="line">LINEARREG           Linear Regression</span><br><span class="line">LINEARREG_ANGLE     Linear Regression Angle</span><br><span class="line">LINEARREG_INTERCEPT Linear Regression Intercept</span><br><span class="line">LINEARREG_SLOPE     Linear Regression Slope</span><br><span class="line">MA                  All Moving Average</span><br><span class="line">MACD                Moving Average Convergence/Divergence</span><br><span class="line">MACDEXT             MACD with controllable MA type</span><br><span class="line">MACDFIX             Moving Average Convergence/Divergence Fix 12/26</span><br><span class="line">MAMA                MESA Adaptive Moving Average</span><br><span class="line">MAX                 Highest value over a specified period</span><br><span class="line">MAXINDEX            Index of highest value over a specified period</span><br><span class="line">MEDPRICE            Median Price</span><br><span class="line">MFI                 Money Flow Index</span><br><span class="line">MIDPOINT            MidPoint over period</span><br><span class="line">MIDPRICE            Midpoint Price over period</span><br><span class="line">MIN                 Lowest value over a specified period</span><br><span class="line">MININDEX            Index of lowest value over a specified period</span><br><span class="line">MINMAX              Lowest and highest values over a specified period</span><br><span class="line">MINMAXINDEX         Indexes of lowest and highest values over a specified period</span><br><span class="line">MINUS_DI            Minus Directional Indicator</span><br><span class="line">MINUS_DM            Minus Directional Movement</span><br><span class="line">MOM                 Momentum</span><br><span class="line">NATR                Normalized Average True Range</span><br><span class="line">OBV                 On Balance Volume</span><br><span class="line">PLUS_DI             Plus Directional Indicator</span><br><span class="line">PLUS_DM             Plus Directional Movement</span><br><span class="line">PPO                 Percentage Price Oscillator</span><br><span class="line">ROC                 Rate of change : ((price/prevPrice)-1)*100</span><br><span class="line">ROCP                Rate of change Percentage: (price-prevPrice)/prevPrice</span><br><span class="line">ROCR                Rate of change ratio: (price/prevPrice)</span><br><span class="line">ROCR100             Rate of change ratio 100 scale: (price/prevPrice)*100</span><br><span class="line">RSI                 Relative Strength Index</span><br><span class="line">SAR                 Parabolic SAR</span><br><span class="line">SAREXT              Parabolic SAR - Extended</span><br><span class="line">SMA                 Simple Moving Average</span><br><span class="line">STDDEV              Standard Deviation</span><br><span class="line">STOCH               Stochastic</span><br><span class="line">STOCHF              Stochastic Fast</span><br><span class="line">STOCHRSI            Stochastic Relative Strength Index</span><br><span class="line">SUM                 Summation</span><br><span class="line">T3                  Triple Exponential Moving Average (T3)</span><br><span class="line">TEMA                Triple Exponential Moving Average</span><br><span class="line">TRANGE              True Range</span><br><span class="line">TRIMA               Triangular Moving Average</span><br><span class="line">TRIX                1-day Rate-Of-Change (ROC) of a Triple Smooth EMA</span><br><span class="line">TSF                 Time Series Forecast</span><br><span class="line">TYPPRICE            Typical Price</span><br><span class="line">ULTOSC              Ultimate Oscillator</span><br><span class="line">VAR                 Variance</span><br><span class="line">WCLPRICE            Weighted Close Price</span><br><span class="line">WILLR               Williams&apos; %R</span><br><span class="line">WMA                 Weighted Moving Average</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCTALib&quot;&gt;&lt;a href=&quot;#CCTALib&quot; class=&quot;headerlink&quot; title=&quot;CCTALib&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ccworld1000/CCTALib&quot; target=&quot;_blank&quot; 
      
    
    </summary>
    
      <category term="金融" scheme="https://ccworld1000.github.io/categories/%E9%87%91%E8%9E%8D/"/>
    
    
      <category term="iOS" scheme="https://ccworld1000.github.io/tags/iOS/"/>
    
      <category term="macOS" scheme="https://ccworld1000.github.io/tags/macOS/"/>
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="c" scheme="https://ccworld1000.github.io/tags/c/"/>
    
      <category term="CCTALib" scheme="https://ccworld1000.github.io/tags/CCTALib/"/>
    
      <category term="TA-Lib" scheme="https://ccworld1000.github.io/tags/TA-Lib/"/>
    
      <category term="talib" scheme="https://ccworld1000.github.io/tags/talib/"/>
    
      <category term="financial market" scheme="https://ccworld1000.github.io/tags/financial-market/"/>
    
      <category term="market analysi" scheme="https://ccworld1000.github.io/tags/market-analysi/"/>
    
  </entry>
  
  <entry>
    <title>CCRuntime Objective-C 封装 runtime APIs</title>
    <link href="https://ccworld1000.github.io/2018/08/19/CCRuntime-Objective-C-%E5%B0%81%E8%A3%85-runtime-APIs/"/>
    <id>https://ccworld1000.github.io/2018/08/19/CCRuntime-Objective-C-封装-runtime-APIs/</id>
    <published>2018-08-19T14:14:44.000Z</published>
    <updated>2018-09-09T01:26:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CCRuntime"><a href="#CCRuntime" class="headerlink" title="CCRuntime"></a>CCRuntime</h2><p><a href="https://github.com/ccworld1000/CCRuntime" target="_blank" rel="noopener">CCRuntime</a> 转换 MAObjCRuntime 为 ARC 模式</p><p><a href="https://github.com/ccworld1000/CCRuntime" target="_blank" rel="noopener">CCRuntime</a>  是基于Objective-C 运行时封装的APIs集. 如果令人困惑, 它提供友好的面向对象接口基于/usr/include/objc中的C函数.</p><p>CCRuntime在BSD许可证下发布的。对于官方许可证，请参阅许可证文件。</p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><p>The action begins in <code>CCRuntime.h</code>. Various methods are added to <code>NSObject</code> to allow querying and manipulation. Most of these are class methods, because they operate on classes. There are a couple of instance methods as well. All of these methods start with <code>cc_</code> to avoid name conflicts. The <code>CCMethod</code> and <code>CCIvar</code> classes are used to represent a single method and a single instance variable, respectively. Their use should be fairly obvious.</p><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><p>You can query any class’s methods, instance variables, or other attributes using the methods provided. For example:</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// get all subclasses of a class</span></span><br><span class="line"><span class="built_in">NSArray</span> *subclasses = [MyClass cc_subclasses];</span><br><span class="line"></span><br><span class="line"><span class="comment">// check out the methods on NSString</span></span><br><span class="line"><span class="built_in">NSArray</span> *methods = [<span class="built_in">NSString</span> cc_methods];</span><br><span class="line"><span class="keyword">for</span>(CCMethod *method <span class="keyword">in</span> methods)</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>, method);</span><br><span class="line"></span><br><span class="line"><span class="comment">// does it have any ivars?</span></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"%@"</span>, [<span class="built_in">NSString</span> cc_ivars]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// how big is a constant string instance?</span></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"%ld"</span>, (<span class="keyword">long</span>)[[<span class="string">@"foo"</span> cc_class] cc_instanceSize]);</span><br></pre></td></tr></table></figure><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><p>You can add new methods using <code>+cc_addMethod:</code>. You can modify the implementation of an existing method using the <code>-setImplementation:</code> method on <code>CCMethod</code>. Example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// swizzle out -[NSObject description] (don&apos;t do this)</span><br><span class="line">static NSString *NewDescription(id self, SEL _cmd)</span><br><span class="line">&#123;</span><br><span class="line">    return @&quot;HELLO WORLD!&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CCMethod *description = [NSObject cc_methodForSelector: @selector(description)];</span><br><span class="line">[description setImplementation: (IMP)NewDescription];</span><br></pre></td></tr></table></figure><p>You can create new classes using <code>+cc_createSubclassNamed:</code> or <code>+cc_createUnregisteredSubclassNamed:</code>. Note that if you want to add instance variables to a class then you have to use the Unregistered version, and add them before registering the class.</p><h2 id="Objects"><a href="#Objects" class="headerlink" title="Objects"></a>Objects</h2><p>Two instance methods are provided as well. <code>-cc_class</code> exists because Apple likes to fiddle with the return value of <code>-class</code>, and <code>-cc_class</code> always gives you the right value. <code>-cc_setClass:</code> does pretty much what it says: sets the class of the object. It won’t reallocate the object or anything, so the new class had better have a memory layout that’s compatible with the old one, or else hilarity will ensue.</p><h2 id="发送消息"><a href="#发送消息" class="headerlink" title="发送消息"></a>发送消息</h2><p>After getting a list of methods from a class, it’s common to want to actually use those on instances of the class. <code>CCMethod</code>provides an easy method for doing this, as well as several convenience wrappers around it.</p><p>The basic method for sending messages is <code>-[CCMethod returnValue:sendToTarget:]</code>. You use it like this:</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CCMethod *method = ...;</span><br><span class="line">SomeType ret;</span><br><span class="line">[method returnValue: &amp;ret sendToTarget: obj, CCARG(<span class="string">@"hello"</span>), CCARG(<span class="number">42</span>), CCARG(xyz)];</span><br></pre></td></tr></table></figure><p>It may seem odd to have the return value at the beginning of the argument list, but this comes closest to the order of the normal <code>ret = [obj method]</code> syntax.</p><p>All arguments must be wrapped in the <code>CCARG</code> macro. This macro takes care of packaging up each argument so that it can survive passage through the variable argument list and also includes some extra metadata about the argument types so that the code can do some basic sanity checking. No automatic type conversions are performed. If you pass a <code>double</code> to a method that expects an <code>int</code>, this method will <code>abort</code>. That checking is only based on size, however, so if you pass a <code>float</code> where an <code>int</code> is expected, you’ll just get a bad value.</p><p>Note that while it’s not 100% guaranteed, this code does a generally good job of detecting if you forgot to use the <code>CCARG</code>macro and warning you loudly and calling <code>abort</code> instead of simply crashing in a mysterious manner. Also note that there is no sanity checking on the return value, so it’s your responsibility to ensure that you use the right type and have enough space to hold it.</p><p>For methods which return an object, the <code>-[CCMethod sendToTarget:]</code> method is provided which directly returns <code>id</code>instead of making you use return-by-reference. This simplifies the calling of such methods:</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CCMethod *method = ...;</span><br><span class="line"><span class="keyword">id</span> ret = [method sendToTarget: obj, CCARG(<span class="string">@"hello"</span>), CCARG(<span class="number">42</span>), CCARG(xyz)];</span><br></pre></td></tr></table></figure><p>There is also an <code>NSObject</code> category which provides methods that allows you to switch the order around to be more natural. For example:</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CCMethod *method = ...;</span><br><span class="line"><span class="keyword">id</span> ret = [obj cc_sendMethod: method, CCARG(<span class="string">@"hello"</span>), CCARG(<span class="number">42</span>), CCARG(xyz)];</span><br></pre></td></tr></table></figure><p>And the same idea for <code>cc_returnValue:sendMethod:</code>.</p><p>Finally, there are a pair of convenience methods that take a selector, and combine the method lookup with the actual message sending:</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">id</span> ret = [obj cc_sendSelector: <span class="keyword">@selector</span>(...), CCARG(<span class="string">@"hello"</span>), CCARG(<span class="number">42</span>), CCARG(xyz)];</span><br><span class="line">SomeType ret2;</span><br><span class="line">[obj cc_returnValue: &amp;ret2 sendSelector: <span class="keyword">@selector</span>(...), CCARG(<span class="number">12345</span>)];</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CCRuntime&quot;&gt;&lt;a href=&quot;#CCRuntime&quot; class=&quot;headerlink&quot; title=&quot;CCRuntime&quot;&gt;&lt;/a&gt;CCRuntime&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ccworld1000/CC
      
    
    </summary>
    
      <category term="iOS &amp;&amp; macOS" scheme="https://ccworld1000.github.io/categories/iOS-macOS/"/>
    
    
      <category term="iOS" scheme="https://ccworld1000.github.io/tags/iOS/"/>
    
      <category term="macOS" scheme="https://ccworld1000.github.io/tags/macOS/"/>
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="CCRuntime" scheme="https://ccworld1000.github.io/tags/CCRuntime/"/>
    
      <category term="runtime" scheme="https://ccworld1000.github.io/tags/runtime/"/>
    
      <category term="MAObjCRuntime" scheme="https://ccworld1000.github.io/tags/MAObjCRuntime/"/>
    
  </entry>
  
  <entry>
    <title>IGListKit 简化 优化 项目</title>
    <link href="https://ccworld1000.github.io/2018/08/19/IGListKit-%E7%AE%80%E5%8C%96-%E4%BC%98%E5%8C%96-%E9%A1%B9%E7%9B%AE/"/>
    <id>https://ccworld1000.github.io/2018/08/19/IGListKit-简化-优化-项目/</id>
    <published>2018-08-19T01:08:19.000Z</published>
    <updated>2018-08-19T14:11:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>## </p><h2 id="IGListKit-优势"><a href="#IGListKit-优势" class="headerlink" title="IGListKit 优势"></a>IGListKit 优势</h2><p> 一个数据驱动的“UICollectionView”框架，用于构建快速灵活的列表。</p><table><thead><tr><th></th><th>主要特性</th></tr></thead><tbody><tr><td>🙅</td><td>不要直接调用 <code>performBatchUpdates(_:, completion:)</code> 或 <code>reloadData()</code></td></tr><tr><td>🏠</td><td>更好的可复用cell和组件体系结构</td></tr><tr><td>🔠</td><td>创建具有多个数据类型的集合</td></tr><tr><td>🔑</td><td>解耦扩散算法</td></tr><tr><td>✅</td><td>全单元测试</td></tr><tr><td>🔍</td><td>自定义差异行为模型的</td></tr><tr><td>📱</td><td>简化 <code>UICollectionView</code>核心</td></tr><tr><td>🚀</td><td>可扩展API</td></tr><tr><td>🐦</td><td>Objective-C编写,同时完全支持Swift</td></tr></tbody></table><p><a href="https://github.com/ccworld1000/IGListKit/blob/master/README.zh.md" target="_blank" rel="noopener">更多详情请参考</a> </p><h2 id="CCIGListKitDemo-可参加demo具体代码"><a href="#CCIGListKitDemo-可参加demo具体代码" class="headerlink" title="CCIGListKitDemo 可参加demo具体代码"></a><a href="https://github.com/ccworld1000/CCIGListKitDemo" target="_blank" rel="noopener"><strong>CCIGListKitDemo</strong></a> 可参加demo具体代码</h2><p><img src="https://github.com/ccworld1000/CCIGListKitDemo/blob/master/Document/MixedDataViewController.png?raw=true" alt="**MixedDataViewController.png**"></p><p><img src="https://github.com/ccworld1000/CCIGListKitDemo/blob/master/Document/SearchViewController.png?raw=true" alt="**SearchViewController.png**"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;## &lt;/p&gt;
&lt;h2 id=&quot;IGListKit-优势&quot;&gt;&lt;a href=&quot;#IGListKit-优势&quot; class=&quot;headerlink&quot; title=&quot;IGListKit 优势&quot;&gt;&lt;/a&gt;IGListKit 优势&lt;/h2&gt;&lt;p&gt; 一个数据驱动的“UICollecti
      
    
    </summary>
    
      <category term="组件优化" scheme="https://ccworld1000.github.io/categories/%E7%BB%84%E4%BB%B6%E4%BC%98%E5%8C%96/"/>
    
    
      <category term="iOS" scheme="https://ccworld1000.github.io/tags/iOS/"/>
    
      <category term="Objective-C" scheme="https://ccworld1000.github.io/tags/Objective-C/"/>
    
      <category term="IGListKit" scheme="https://ccworld1000.github.io/tags/IGListKit/"/>
    
      <category term="CCIGListKitDemo" scheme="https://ccworld1000.github.io/tags/CCIGListKitDemo/"/>
    
      <category term="UIColllectionView" scheme="https://ccworld1000.github.io/tags/UIColllectionView/"/>
    
  </entry>
  
</feed>
