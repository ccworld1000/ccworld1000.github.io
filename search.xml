<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Perl 6 perl6.org 网站中文翻译]]></title>
    <url>%2F2018%2F08%2F25%2FPerl-6-perl6-org-%E7%BD%91%E7%AB%99%E4%B8%AD%E6%96%87%E7%BF%BB%E8%AF%91%2F</url>
    <content type="text"><![CDATA[本数据仓缘由 很多年过去,有关Perl 6相关的中文文档少之又少. 于是我打算翻译一些部分文档入口促进Perl 6 在中国的发展. 如果有一定的英文功底,建议直接看官方文档. 部分文档直接按英语翻译过来的意思可能不太好,所以有的采用意译. 2018/04/10 by CC Perl 5 &amp;&amp; Perl 6 讲到Perl 6 就不得不提Perl 5,后续我简写为P6 与 P5. 建议把P6当成一门新语言,可能对接触过P5的童鞋来讲是一样的. 不过他们确实很多相识点,更多细节需要通过学习深入了解, 祝大家在P6的路途愉快. 翻译进度 网站主体入口差不多翻译完成。 doc模块https://github.com/ccworld1000/doc还没有咋开始。 缘由：编译通不过去，一旦开始翻译就没有办法与官网同步。 如果有更好的提议，欢迎提议。 已翻译入口 P6官方中文文档入口1 或者 P6官方中文文档入口2 翻译当前进度：大致入口翻译已经完毕，可以下载到本地运行。 贡献本数据仓 如果想帮忙可以fork [https://github.com/ccworld1000/perl6.org](https://github.com/ccworld1000/perl6.org),帮助形式不限. 项目本身采用我私用工具CCAutoTag自动打tag,这个实际上也是最近用P6完成的. 截屏]]></content>
      <categories>
        <category>Perl 6</category>
      </categories>
      <tags>
        <tag>Perl 6</tag>
        <tag>Perl 5</tag>
        <tag>Perl</tag>
        <tag>perl</tag>
        <tag>perl6.org</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[OKKLineMin kline for min for learning for iPhone (support Swift4 & iPhone X)]]></title>
    <url>%2F2018%2F08%2F23%2FOKKLineMin-kline-for-min-for-learning-for-iPhone-support-Swift4-iPhone-X%2F</url>
    <content type="text"><![CDATA[OKKLineMin介绍OKKLineMin kline for min for learning for iPhone* (支持 Swift4 &amp; iPhone X)* (主要用于学习目的) 截屏[支持 拖曳、 长按 、缩放] iPhone X 全屏 iPhone X 半屏 iPhone 设备]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>iOS</tag>
        <tag>OKKLineMin</tag>
        <tag>kline</tag>
        <tag>K线，Swift</tag>
        <tag>iPhone X</tag>
        <tag>OKKLineSwift</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CCSugar Foundation 附加函数集]]></title>
    <url>%2F2018%2F08%2F22%2FCCSugar-Foundation-%E9%99%84%E5%8A%A0%E5%87%BD%E6%95%B0%E9%9B%86%2F</url>
    <content type="text"><![CDATA[Write Objective C like a boss. Foundation 附加函数集函数集. 支持 MAC OS 与 iOS始于 ObjectiveSugar 1.1.1 用法 CocoaPods安装 1pod &apos;CCSugar&apos; 导入头文件 1#import &lt;CCSugar.h&gt; 或者 1​ #import “CCSugar.h” ​12345```### 文档 [更多查阅 [CCSugar](https://github.com/ccworld1000/CCSugar) 源码]**NSNumber** 集 [@3 times:^{ NSLog(@&quot;Hello!&quot;); }]; // Hello! // Hello! // Hello! [@3 timesWithIndex:^(NSUInteger index) { NSLog(@&quot;Another version with number: %lu&quot;, (unsigned long)index); }]; // Another version with number: 0 // Another version with number: 1 // Another version with number: 2 [@1 upto:4 do:^(NSInteger numbah) { NSLog(@&quot;Current number.. %ld&quot;, (long)numbah); }]; // Current number.. 1 // Current number.. 2 // Current number.. 3 // Current number.. 4 [@7 downto:4 do:^(NSInteger numbah) { NSLog(@&quot;Current number.. %ld&quot;, (long)numbah); }]; // Current number.. 7 // Current number.. 6 // Current number.. 5 // Current number.. 4 NSDate *firstOfDecember = [NSDate date]; // let&apos;s pretend it&apos;s 1st of December NSDate *firstOfNovember = [(@30).days since:firstOfDecember]; NSLog(@&quot;firstOfNovember : %@&quot;, firstOfNovember); NSDate *future = (@24).days.fromNow; NSLog(@&quot;future : %@&quot;, future); NSDate *past = @(1).month.ago; NSLog(@&quot;past : %@&quot;, past); 1234\--**NSArray** / **NSSet** 集 // All of these methods return a modified copy of the array.// They’re not modifying the source array. NSArray *cars = @[@”Testarossa”, @”F50”, @”F458 Italia”]; // or NSSet [cars each:^(id object) { NSLog(@”Car: %@”, object);}];// Car: Testarossa// Car: F50// Car: F458 Italia [cars eachWithIndex:^(id object, NSUInteger index) { NSLog(@”Car: %@ index: %i”, object, index);}];// Car: Testarossa index: 0// Car: F50 index: 1// Car: F458 Italia index: 2 [cars each:^(id object) { NSLog(@”Car: %@”, object);} options:NSEnumerationReverse];// Car: F458 Italia// Car: F50// Car: Testarossa [cars eachWithIndex:^(id object, NSUInteger index) { NSLog(@”Car: %@ index: %i”, object, index);} options:NSEnumerationReverse];// Car: F458 Italia index: 2// Car: F50 index: 1// Car: Testarossa index: 0 [cars map:^(NSString* car) { return car.lowercaseString;}];// testarossa, f50, f458 italia // Or, a more common example:[cars map:^(NSString* carName) { return [[Car alloc] initWithName:carName];}];// array of Car objects NSArray *mixedData = @[ @1, @”Objective Sugar!”, @”Github”, @4, @”5”]; [mixedData select:^BOOL(id object) { return ([object class] == [NSString class]);}];// Objective Sugar, Github, 5 [mixedData reject:^BOOL(id object) { return ([object class] == [NSString class]);}];// 1, 4 NSArray *numbers = @[ @5, @2, @7, @1 ];[numbers sort];// 1, 2, 5, 7 cars.sample// 458 Italiacars.sample// F5012-- 仅仅针对**NSArray** NSArray *numbers = @[@1, @2, @3, @4, @5, @6]; // index from 2 to 4numbers[@”2..4”];// [@3, @4, @5] // index from 2 to 4 (excluded)numbers[@”2…4”];// [@3, @4] // With NSRange location: 2, length: 4numbers[@”2,4”];// [@3, @4, @5, @6] NSValue *range = [NSValue valueWithRange:NSMakeRange(2, 4)];numbers[range];// [@3, @4, @5, @6] [numbers reverse];// [@6, @5, @4, @3, @2, @1] NSArray *fruits = @[ @”banana”, @”mango”, @”apple”, @”pear” ]; [fruits includes:@”apple”];// YES [fruits take:3];// banana, mango, apple [fruits takeWhile:^BOOL(id fruit) { return ![fruit isEqualToString:@”apple”];}];// banana, mango NSArray *nestedArray = @[ @[ @1, @2, @3 ], @[ @4, @5, @6, @[ @7, @8 ] ], @9, @10 ];[nestedArray flatten];// 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 NSArray *abc = @[ @”a”, @”b”, @”c” ];[abc join];// abc [abc join:@”-“];// a-b-c NSArray *mixedData = @[ @1, @”Objective Sugar!”, @”Github”, @4, @”5”]; [mixedData detect:^BOOL(id object) { return ([object class] == [NSString class]);}];// Objective Sugar // TODO: Make a better / simpler example of thisNSArray landlockedCountries = @[ @”Bolivia”, @”Paraguay”, @”Austria”, @”Switzerland”, @”Hungary” ];NSArray europeanCountries = @[ @”France”, @”Germany”, @”Austria”, @”Spain”, @”Hungary”, @”Poland”, @”Switzerland” ]; [landlockedCountries intersectionWithArray:europeanCountries];// landlockedEuropeanCountries = Austria, Switzerland, Hungary [landlockedCountries unionWithArray:europeanCountries];// landlockedOrEuropean = Bolivia, Paraguay, Austria, Switzerland, Hungary, France, Germany, Spain, Poland [landlockedCountries relativeComplement:europeanCountries];// nonEuropeanLandlockedCountries = Bolivia, Paraguay [europeanCountries relativeComplement:landlockedCountries];// notLandlockedEuropeanCountries = France, Germany, Spain, Poland [landlockedCountries symmetricDifference:europeanCountries];// uniqueCountries = Bolivia, Paraguay, France, Germany, Spain, Poland12-- **NSMutableArray** 集 NSMutableArray *people = [NSMutableArray arrayWithArray:@[ @”Alice”, @”Benjamin”, @”Christopher” ]]; [people push:@”Daniel”]; // Alice, Benjamin, Christopher, Daniel [people pop]; // Daniel// people = Alice, Benjamin, Christopher [people pop:2]; // Benjamin, Christopher// people = Alice [people concat:@[ @”Evan”, @”Frank”, @”Gavin” ]];// people = Alice, Evan, Frank, Gavin [people keepIf:^BOOL(id object) { return [object characterAtIndex:0] == ‘E’;}];// people = Evan12-- **NSDictionary** 集 NSDictionary *dict = @{ @”one” : @1, @”two” : @2, @”three” : @3 }; [dict each:^(id key, id value){ NSLog(@”Key: %@, Value: %@”, key, value);}];// Key: one, Value: 1// Key: two, Value: 2// Key: three, Value: 3 [dict eachKey:^(id key) { NSLog(@”Key: %@”, key);}];// Key: one// Key: two// Key: three [dict eachValue:^(id value) { NSLog(@”Value: %@”, value);}];// Value: 1// Value: 2// Value: 3 [dict invert];// { 1 = one, 2 = two, 3 = three} NSDictionary *errors = @{ @”username” : @[ @”already taken” ], @”password” : @[ @”is too short (minimum is 8 characters)”, @”not complex enough” ], @”email” : @[ @”can’t be blank” ];}; [errors map:^(id attribute, id reasons) { return NSStringWithFormat(@”%@ %@”, attribute, [reasons join:@”, “]);}];// username already taken// password is too short (minimum is 8 characters), not complex enough// email can’t be blank [errors hasKey:@”email”]// true[errors hasKey:@”Alcatraz”]// false12-- **NSString** 集 NSString *sentence = NSStringWithFormat(@”This is a text-with-argument %@”, @1234);// This is a text-with-argument 1234 [sentence split];// array = this, is, a, text-with-argument, 1234 [sentence split:@”-“]// array = this is a text, with, argument 1234 [sentence containsString:@”this is a”];// YES [sentence match:@”-[a-z]+-“]// -with-12-- **C** 集 unless(_messages) { // The body is only executed if the condition is false _messages = [self initializeMessages];} int iterations = 10;until(iterations == 0) { // The body is executed until the condition is false // 10 9 8 7 6 5 4 3 2 1 printf(“%d “, iterations); iterations–;}printf(“\n”); iterations = 10;do { // The body is executed at least once until the condition is false // Will print: Executed! printf(“Executed!\n”);} until(true);`]]></content>
      <categories>
        <category>iOS &amp;&amp; macOS</category>
      </categories>
      <tags>
        <tag>iOS</tag>
        <tag>macOS</tag>
        <tag>Objective-C</tag>
        <tag>CCSugar</tag>
        <tag>Foundation</tag>
        <tag>c</tag>
        <tag>C</tag>
        <tag>NSNumber</tag>
        <tag>NSArray</tag>
        <tag>NSSet</tag>
        <tag>NSMutableArray</tag>
        <tag>NSDictionary</tag>
        <tag>NSString</tag>
        <tag>ObjectiveSugar</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CCTALib TA-Lib 广泛应用于交易开发分析金融市场数据]]></title>
    <url>%2F2018%2F08%2F21%2FCCTALib-TA-Lib-%E5%B9%BF%E6%B3%9B%E5%BA%94%E7%94%A8%E4%BA%8E%E4%BA%A4%E6%98%93%E5%BC%80%E5%8F%91%E5%88%86%E6%9E%90%E9%87%91%E8%9E%8D%E5%B8%82%E5%9C%BA%E6%95%B0%E6%8D%AE%2F</url>
    <content type="text"><![CDATA[CCTALibCCTALib : TA-Lib is widely used by trading software developers requiring to perform technical analysis of financial market data Multi-Platform Tools for Market Analysis …TA-Lib is widely used by trading software developers requiring to perform technical analysis of financial market data. Includes 200 indicators such as ADX, MACD, RSI, Stochastic, Bollinger Bands etc… Candlestick pattern recognition Open-source API for C/C++, Java, Perl, Python and 100% Managed .NET Free Open-Source LibraryTA-Lib is available under a BSD License allowing it to be integrated in your own open-source or commercial application. Commercial ApplicationTA-Lib is also available as an easy to install Excel Add-Ins. Technical Analysis Library123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138AD Chaikin A/D LineADOSC Chaikin A/D OscillatorADX Average Directional Movement IndexADXR Average Directional Movement Index RatingAPO Absolute Price OscillatorAROON AroonAROONOSC Aroon OscillatorATR Average True RangeAVGPRICE Average PriceBBANDS Bollinger BandsBETA BetaBOP Balance Of PowerCCI Commodity Channel IndexCDL2CROWS Two CrowsCDL3BLACKCROWS Three Black CrowsCDL3INSIDE Three Inside Up/DownCDL3LINESTRIKE Three-Line Strike CDL3OUTSIDE Three Outside Up/DownCDL3STARSINSOUTH Three Stars In The SouthCDL3WHITESOLDIERS Three Advancing White SoldiersCDLABANDONEDBABY Abandoned BabyCDLADVANCEBLOCK Advance BlockCDLBELTHOLD Belt-holdCDLBREAKAWAY BreakawayCDLCLOSINGMARUBOZU Closing MarubozuCDLCONCEALBABYSWALL Concealing Baby SwallowCDLCOUNTERATTACK CounterattackCDLDARKCLOUDCOVER Dark Cloud CoverCDLDOJI DojiCDLDOJISTAR Doji StarCDLDRAGONFLYDOJI Dragonfly DojiCDLENGULFING Engulfing PatternCDLEVENINGDOJISTAR Evening Doji StarCDLEVENINGSTAR Evening StarCDLGAPSIDESIDEWHITE Up/Down-gap side-by-side white linesCDLGRAVESTONEDOJI Gravestone DojiCDLHAMMER HammerCDLHANGINGMAN Hanging ManCDLHARAMI Harami PatternCDLHARAMICROSS Harami Cross PatternCDLHIGHWAVE High-Wave CandleCDLHIKKAKE Hikkake PatternCDLHIKKAKEMOD Modified Hikkake PatternCDLHOMINGPIGEON Homing PigeonCDLIDENTICAL3CROWS Identical Three CrowsCDLINNECK In-Neck PatternCDLINVERTEDHAMMER Inverted HammerCDLKICKING KickingCDLKICKINGBYLENGTH Kicking - bull/bear determined by the longer marubozuCDLLADDERBOTTOM Ladder BottomCDLLONGLEGGEDDOJI Long Legged DojiCDLLONGLINE Long Line CandleCDLMARUBOZU MarubozuCDLMATCHINGLOW Matching LowCDLMATHOLD Mat HoldCDLMORNINGDOJISTAR Morning Doji StarCDLMORNINGSTAR Morning StarCDLONNECK On-Neck PatternCDLPIERCING Piercing PatternCDLRICKSHAWMAN Rickshaw ManCDLRISEFALL3METHODS Rising/Falling Three MethodsCDLSEPARATINGLINES Separating LinesCDLSHOOTINGSTAR Shooting StarCDLSHORTLINE Short Line CandleCDLSPINNINGTOP Spinning TopCDLSTALLEDPATTERN Stalled PatternCDLSTICKSANDWICH Stick SandwichCDLTAKURI Takuri (Dragonfly Doji with very long lower shadow)CDLTASUKIGAP Tasuki GapCDLTHRUSTING Thrusting PatternCDLTRISTAR Tristar PatternCDLUNIQUE3RIVER Unique 3 RiverCDLUPSIDEGAP2CROWS Upside Gap Two CrowsCDLXSIDEGAP3METHODS Upside/Downside Gap Three MethodsCMO Chande Momentum OscillatorCORREL Pearson&apos;s Correlation Coefficient (r)DEMA Double Exponential Moving AverageDX Directional Movement IndexEMA Exponential Moving AverageHT_DCPERIOD Hilbert Transform - Dominant Cycle PeriodHT_DCPHASE Hilbert Transform - Dominant Cycle PhaseHT_PHASOR Hilbert Transform - Phasor ComponentsHT_SINE Hilbert Transform - SineWaveHT_TRENDLINE Hilbert Transform - Instantaneous TrendlineHT_TRENDMODE Hilbert Transform - Trend vs Cycle ModeKAMA Kaufman Adaptive Moving AverageLINEARREG Linear RegressionLINEARREG_ANGLE Linear Regression AngleLINEARREG_INTERCEPT Linear Regression InterceptLINEARREG_SLOPE Linear Regression SlopeMA All Moving AverageMACD Moving Average Convergence/DivergenceMACDEXT MACD with controllable MA typeMACDFIX Moving Average Convergence/Divergence Fix 12/26MAMA MESA Adaptive Moving AverageMAX Highest value over a specified periodMAXINDEX Index of highest value over a specified periodMEDPRICE Median PriceMFI Money Flow IndexMIDPOINT MidPoint over periodMIDPRICE Midpoint Price over periodMIN Lowest value over a specified periodMININDEX Index of lowest value over a specified periodMINMAX Lowest and highest values over a specified periodMINMAXINDEX Indexes of lowest and highest values over a specified periodMINUS_DI Minus Directional IndicatorMINUS_DM Minus Directional MovementMOM MomentumNATR Normalized Average True RangeOBV On Balance VolumePLUS_DI Plus Directional IndicatorPLUS_DM Plus Directional MovementPPO Percentage Price OscillatorROC Rate of change : ((price/prevPrice)-1)*100ROCP Rate of change Percentage: (price-prevPrice)/prevPriceROCR Rate of change ratio: (price/prevPrice)ROCR100 Rate of change ratio 100 scale: (price/prevPrice)*100RSI Relative Strength IndexSAR Parabolic SARSAREXT Parabolic SAR - ExtendedSMA Simple Moving AverageSTDDEV Standard DeviationSTOCH StochasticSTOCHF Stochastic FastSTOCHRSI Stochastic Relative Strength IndexSUM SummationT3 Triple Exponential Moving Average (T3)TEMA Triple Exponential Moving AverageTRANGE True RangeTRIMA Triangular Moving AverageTRIX 1-day Rate-Of-Change (ROC) of a Triple Smooth EMATSF Time Series ForecastTYPPRICE Typical PriceULTOSC Ultimate OscillatorVAR VarianceWCLPRICE Weighted Close PriceWILLR Williams&apos; %RWMA Weighted Moving Average]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>iOS</tag>
        <tag>macOS</tag>
        <tag>Objective-C</tag>
        <tag>c</tag>
        <tag>CCTALib</tag>
        <tag>TA-Lib</tag>
        <tag>talib</tag>
        <tag>financial market</tag>
        <tag>market analysi</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CCRuntime Objective-C 封装 runtime APIs]]></title>
    <url>%2F2018%2F08%2F19%2FCCRuntime-Objective-C-%E5%B0%81%E8%A3%85-runtime-APIs%2F</url>
    <content type="text"><![CDATA[CCRuntime 转换 MAObjCRuntime 为 ARC 模式 CCRuntime 是基于Objective-C 运行时封装的APIs集. 如果令人困惑, 它提供友好的面向对象接口基于/usr/include/objc中的C函数. CCRuntime在BSD许可证下发布的。对于官方许可证，请参阅许可证文件。]]></content>
      <categories>
        <category>iOS &amp;&amp; macOS</category>
      </categories>
      <tags>
        <tag>CCRuntime</tag>
        <tag>runtime</tag>
        <tag>MAObjCRuntime</tag>
        <tag>iOS</tag>
        <tag>macOS</tag>
        <tag>Objective-C</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IGListKit 简化 优化 项目]]></title>
    <url>%2F2018%2F08%2F19%2FIGListKit-%E7%AE%80%E5%8C%96-%E4%BC%98%E5%8C%96-%E9%A1%B9%E7%9B%AE%2F</url>
    <content type="text"><![CDATA[## IGListKit 优势 一个数据驱动的“UICollectionView”框架，用于构建快速灵活的列表。 主要特性 🙅 不要直接调用 performBatchUpdates(_:, completion:) 或 reloadData() 🏠 更好的可复用cell和组件体系结构 🔠 创建具有多个数据类型的集合 🔑 解耦扩散算法 ✅ 全单元测试 🔍 自定义差异行为模型的 📱 简化 UICollectionView核心 🚀 可扩展API 🐦 Objective-C编写,同时完全支持Swift 更多详情请参考 CCIGListKitDemo 可参加demo具体代码]]></content>
      <categories>
        <category>组件优化</category>
      </categories>
      <tags>
        <tag>iOS</tag>
        <tag>Objective-C</tag>
        <tag>IGListKit</tag>
        <tag>CCIGListKitDemo</tag>
        <tag>UIColllectionView</tag>
      </tags>
  </entry>
</search>
